{
  "solutions": [
    {
      "path": "Honeydew.sln",
      "projects": [
        "HoneydewModels/HoneydewModels.csproj",
        "HoneydewCore/HoneydewCore.csproj",
        "HoneydewScriptBeePlugin/HoneydewScriptBeePlugin.csproj",
        "HoneydewExtractors/HoneydewExtractors.csproj",
        "Honeydew/Honeydew.csproj",
        "HoneydewCoreTest/HoneydewCoreTest.csproj",
        "HoneydewTests/HoneydewTests.csproj",
        "HoneydewExtractorsTests/HoneydewExtractorsTests.csproj"
      ]
    }
  ],
  "projects": [
    {
      "name": "HoneydewModels",
      "path": "HoneydewModels/HoneydewModels.csproj",
      "files": [
        {
          "name": "BaseTypeModel.cs",
          "path": "HoneydewModels/CSharp/BaseTypeModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.BaseTypeModel",
                  "type": "Record",
                  "usingStatements": ["HoneydewModels.Types"],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "HoneydewModels.CSharp.BaseTypeModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ITypeConverter.cs",
          "path": "HoneydewModels/Converters/ITypeConverter.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Converters",
              "classes": [
                {
                  "name": "HoneydewModels.Converters.ITypeConverter<out TInterfaceType>",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["string", "TInterfaceType", "object"],
                  "methods": [
                    {
                      "name": "Convert#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Convert#object",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "AttributeModel.cs",
          "path": "HoneydewModels/CSharp/AttributeModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.AttributeModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "object",
                    "HoneydewModels.CSharp.AttributeModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ConstructorModel.cs",
          "path": "HoneydewModels/CSharp/ConstructorModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.ConstructorModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.Types.AccessedField",
                    "HoneydewModels.LinesOfCode",
                    "int",
                    "HoneydewModels.CSharp.MetricModel",
                    "object",
                    "HoneydewModels.CSharp.ConstructorModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ClassModel.cs",
          "path": "HoneydewModels/CSharp/ClassModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.ClassModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.LinesOfCode",
                    "HoneydewModels.CSharp.MetricModel",
                    "object",
                    "HoneydewModels.CSharp.ClassModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "AccessorModel.cs",
          "path": "HoneydewModels/CSharp/AccessorModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.AccessorModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.Types.AccessedField",
                    "int",
                    "HoneydewModels.CSharp.MetricModel",
                    "HoneydewModels.LinesOfCode",
                    "object",
                    "HoneydewModels.CSharp.AccessorModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "EntityTypeModel.cs",
          "path": "HoneydewModels/CSharp/EntityTypeModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.EntityTypeModel",
                  "type": "Record",
                  "usingStatements": ["HoneydewModels.Types"],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewModels.Types.GenericType",
                    "bool",
                    "object",
                    "HoneydewModels.CSharp.EntityTypeModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CompilationUnitModel.cs",
          "path": "HoneydewModels/CSharp/CompilationUnitModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.CompilationUnitModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "System.Collections.Generic.IList",
                    "string",
                    "HoneydewModels.LinesOfCode",
                    "HoneydewModels.CSharp.MetricModel",
                    "object",
                    "HoneydewModels.CSharp.CompilationUnitModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "EnumLabelType.cs",
          "path": "HoneydewModels/CSharp/EnumLabelType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.EnumLabelType",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "object",
                    "HoneydewModels.CSharp.EnumLabelType",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "DelegateModel.cs",
          "path": "HoneydewModels/CSharp/DelegateModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.DelegateModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.LinesOfCode",
                    "HoneydewModels.CSharp.MetricModel",
                    "object",
                    "HoneydewModels.CSharp.DelegateModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LocalVariableModel.cs",
          "path": "HoneydewModels/CSharp/LocalVariableModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.LocalVariableModel",
                  "type": "Record",
                  "usingStatements": ["HoneydewModels.Types"],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "bool",
                    "object",
                    "HoneydewModels.CSharp.LocalVariableModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "GenericParameterModel.cs",
          "path": "HoneydewModels/CSharp/GenericParameterModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.GenericParameterModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "object",
                    "HoneydewModels.CSharp.GenericParameterModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "FieldModel.cs",
          "path": "HoneydewModels/CSharp/FieldModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.FieldModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "bool",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.CSharp.MetricModel",
                    "object",
                    "HoneydewModels.CSharp.FieldModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "DestructorModel.cs",
          "path": "HoneydewModels/CSharp/DestructorModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.DestructorModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.Types.AccessedField",
                    "int",
                    "HoneydewModels.CSharp.MetricModel",
                    "HoneydewModels.LinesOfCode",
                    "object",
                    "HoneydewModels.CSharp.DestructorModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MetricModel.cs",
          "path": "HoneydewModels/CSharp/MetricModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.MetricModel",
                  "type": "Record",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "HoneydewModels.CSharp.MetricModel",
                    "System.IEquatable"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "EnumModel.cs",
          "path": "HoneydewModels/CSharp/EnumModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.EnumModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.LinesOfCode",
                    "HoneydewModels.CSharp.MetricModel",
                    "object",
                    "HoneydewModels.CSharp.EnumModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MethodCallModel.cs",
          "path": "HoneydewModels/CSharp/MethodCallModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.MethodCallModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "object",
                    "HoneydewModels.CSharp.MethodCallModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ParameterModel.cs",
          "path": "HoneydewModels/CSharp/ParameterModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.ParameterModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "bool",
                    "System.Collections.Generic.IList",
                    "object",
                    "HoneydewModels.CSharp.ParameterModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RepositoryModel.cs",
          "path": "HoneydewModels/CSharp/RepositoryModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.RepositoryModel",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewModels.CSharp.SolutionModel",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.CSharp.ProjectModel",
                    "object"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MethodModel.cs",
          "path": "HoneydewModels/CSharp/MethodModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.MethodModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.Types.AccessedField",
                    "HoneydewModels.LinesOfCode",
                    "int",
                    "HoneydewModels.CSharp.MetricModel",
                    "object",
                    "HoneydewModels.CSharp.MethodModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "PropertyModel.cs",
          "path": "HoneydewModels/CSharp/PropertyModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.PropertyModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "int",
                    "string",
                    "System.Collections.Generic.IList",
                    "bool",
                    "HoneydewModels.LinesOfCode",
                    "HoneydewModels.CSharp.MetricModel",
                    "object",
                    "HoneydewModels.CSharp.PropertyModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "UsingModel.cs",
          "path": "HoneydewModels/CSharp/UsingModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.UsingModel",
                  "type": "Record",
                  "usingStatements": ["HoneydewModels.Types"],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "bool",
                    "object",
                    "HoneydewModels.CSharp.UsingModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ReturnValueModel.cs",
          "path": "HoneydewModels/CSharp/ReturnValueModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.ReturnValueModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "bool",
                    "System.Collections.Generic.IList",
                    "object",
                    "HoneydewModels.CSharp.ReturnValueModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "SolutionModel.cs",
          "path": "HoneydewModels/CSharp/SolutionModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.SolutionModel",
                  "type": "Record",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "object",
                    "HoneydewModels.CSharp.SolutionModel",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ModelJsonConverter.cs",
          "path": "HoneydewModels/Converters/ModelJsonConverter.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Converters",
              "classes": [
                {
                  "name": "HoneydewModels.Converters.ModelJsonConverter<TInterfaceModel, TConcreteModel>",
                  "type": "Class",
                  "usingStatements": ["System", "Newtonsoft.Json"],
                  "attributes": [],
                  "usedClasses": [
                    "Newtonsoft.Json.JsonConverter",
                    "Newtonsoft.Json.JsonWriter",
                    "object",
                    "Newtonsoft.Json.JsonSerializer",
                    "void",
                    "Newtonsoft.Json.JsonReader",
                    "System.Type",
                    "bool"
                  ],
                  "methods": [
                    {
                      "name": "WriteJson#Newtonsoft.Json.JsonWriter,object,Newtonsoft.Json.JsonSerializer",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Newtonsoft.Json.JsonSerializer@Serialize#Newtonsoft.Json.JsonWriter,object"
                      ]
                    },
                    {
                      "name": "ReadJson#Newtonsoft.Json.JsonReader,System.Type,object,Newtonsoft.Json.JsonSerializer",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Newtonsoft.Json.JsonSerializer@Deserialize#Newtonsoft.Json.JsonReader,System.Type"
                      ]
                    },
                    {
                      "name": "CanConvert#System.Type",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IConverterList.cs",
          "path": "HoneydewModels/IConverterList.cs",
          "namespaces": [
            {
              "name": "HoneydewModels",
              "classes": [
                {
                  "name": "HoneydewModels.IConverterList",
                  "type": "interface",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Converters",
                    "HoneydewModels.Converters.JSON",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Newtonsoft.Json"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Newtonsoft.Json.JsonConverter",
                    "System.Collections.Generic.IEnumerable"
                  ],
                  "methods": [
                    {
                      "name": "GetConverters#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                },
                {
                  "name": "HoneydewModels.ConverterList",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Converters",
                    "HoneydewModels.Converters.JSON",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Newtonsoft.Json"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Newtonsoft.Json.JsonConverter",
                    "System.Collections.Generic.IEnumerable"
                  ],
                  "methods": [
                    {
                      "name": "GetConverters#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IRepositoryModel.cs",
          "path": "HoneydewModels/IRepositoryModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels",
              "classes": [
                {
                  "name": "HoneydewModels.IRepositoryModel",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["string"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IMetricValue.cs",
          "path": "HoneydewModels/IMetricValue.cs",
          "namespaces": [
            {
              "name": "HoneydewModels",
              "classes": [
                {
                  "name": "HoneydewModels.IMetricValue",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["string", "object"],
                  "methods": [
                    {
                      "name": "GetValueType#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "GetValue#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                },
                {
                  "name": "HoneydewModels.MetricValue<T>",
                  "type": "Record",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "T",
                    "object",
                    "HoneydewModels.MetricValue",
                    "System.IEquatable",
                    "string"
                  ],
                  "methods": [
                    {
                      "name": "GetValueType#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": ["->System.Type@ToString#"]
                    },
                    {
                      "name": "GetValue#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "MetricValue#T",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LinesOfCode.cs",
          "path": "HoneydewModels/LinesOfCode.cs",
          "namespaces": [
            {
              "name": "HoneydewModels",
              "classes": [
                {
                  "name": "HoneydewModels.LinesOfCode",
                  "type": "Struct",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["int", "System.ValueType"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "GenericType.cs",
          "path": "HoneydewModels/Types/GenericType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.GenericType",
                  "type": "Record",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "bool",
                    "HoneydewModels.Types.GenericType",
                    "System.Collections.Generic.IList",
                    "object",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IAccessorType.cs",
          "path": "HoneydewModels/Types/IAccessorType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IAccessorType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "JsonModelExporter.cs",
          "path": "HoneydewModels/Exporters/JsonModelExporter.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Exporters",
              "classes": [
                {
                  "name": "HoneydewModels.Exporters.JsonModelExporter",
                  "type": "Class",
                  "usingStatements": ["System.IO", "Newtonsoft.Json"],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "string",
                    "void",
                    "Newtonsoft.Json.JsonSerializer",
                    "System.IO.StreamWriter",
                    "Newtonsoft.Json.JsonTextWriter"
                  ],
                  "methods": [
                    {
                      "name": "Export#string,object",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Scripts/ExportRawModelScript.cs->Honeydew.Scripts.ExportRawModelScript@Run#System.Collections.Generic.Dictionary<string, object>",
                        "Honeydew/Scripts/ExportCyclomaticComplexityPerFileScript.cs->Honeydew.Scripts.ExportCyclomaticComplexityPerFileScript@Run#System.Collections.Generic.Dictionary<string, object>",
                        "Honeydew/Scripts/ExportStatisticsScript.cs->Honeydew.Scripts.ExportStatisticsScript@Run#System.Collections.Generic.Dictionary<string, object>",
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "->Newtonsoft.Json.JsonSerializer@Create#",
                        "->Newtonsoft.Json.JsonSerializer@Serialize#Newtonsoft.Json.JsonWriter,object"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IAttributeType.cs",
          "path": "HoneydewModels/Types/IAttributeType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IAttributeType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["string"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IBaseType.cs",
          "path": "HoneydewModels/Types/IBaseType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IBaseType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["string"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ICallingMethodsType.cs",
          "path": "HoneydewModels/Types/ICallingMethodsType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.ICallingMethodsType",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IClassType.cs",
          "path": "HoneydewModels/Types/IClassType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IClassType",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["string", "System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ICompilationUnitType.cs",
          "path": "HoneydewModels/Types/ICompilationUnitType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.ICompilationUnitType",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["System.Collections.Generic.IList", "string"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IConstructorType.cs",
          "path": "HoneydewModels/Types/IConstructorType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IConstructorType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IContainedTypeWithAccessedFields.cs",
          "path": "HoneydewModels/Types/IContainedTypeWithAccessedFields.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IContainedTypeWithAccessedFields",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewModels.Types.AccessedField",
                    "System.Collections.Generic.IList"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IDelegateType.cs",
          "path": "HoneydewModels/Types/IDelegateType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IDelegateType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IDestructorType.cs",
          "path": "HoneydewModels/Types/IDestructorType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IDestructorType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IEnumLabelType.cs",
          "path": "HoneydewModels/Types/IEnumLabelType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IEnumLabelType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IEntityType.cs",
          "path": "HoneydewModels/Types/IEntityType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IEntityType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["HoneydewModels.Types.GenericType", "bool"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IFieldType.cs",
          "path": "HoneydewModels/Types/IFieldType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IFieldType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["bool"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IEnumType.cs",
          "path": "HoneydewModels/Types/IEnumType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IEnumType",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["string", "System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IGenericParameterType.cs",
          "path": "HoneydewModels/Types/IGenericParameterType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IGenericParameterType",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["string", "System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ILocalVariableType.cs",
          "path": "HoneydewModels/Types/ILocalVariableType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.ILocalVariableType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["string"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IMembersClassType.cs",
          "path": "HoneydewModels/Types/IMembersClassType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IMembersClassType",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IImportType.cs",
          "path": "HoneydewModels/Types/IImportType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IImportType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["string", "bool"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IMethodCallType.cs",
          "path": "HoneydewModels/Types/IMethodCallType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IMethodCallType",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["string", "System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IMethodSkeletonType.cs",
          "path": "HoneydewModels/Types/IMethodSkeletonType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IMethodSkeletonType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IMethodType.cs",
          "path": "HoneydewModels/Types/IMethodType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IMethodType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IMethodTypeWithLocalFunctions.cs",
          "path": "HoneydewModels/Types/IMethodTypeWithLocalFunctions.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "AccessedField.cs",
          "path": "HoneydewModels/Types/AccessedField.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.AccessedField",
                  "type": "Record",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "HoneydewModels.Types.AccessedField",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "INamedType.cs",
          "path": "HoneydewModels/Types/INamedType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.INamedType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["string"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IMethodSignatureType.cs",
          "path": "HoneydewModels/Types/IMethodSignatureType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IMethodSignatureType",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IParameterType.cs",
          "path": "HoneydewModels/Types/IParameterType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IParameterType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IPropertyClassType.cs",
          "path": "HoneydewModels/Types/IPropertyClassType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IPropertyMembersClassType",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IReturnValueType.cs",
          "path": "HoneydewModels/Types/IReturnValueType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IReturnValueType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "INullableType.cs",
          "path": "HoneydewModels/Types/INullableType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.INullableType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["bool"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IPropertyType.cs",
          "path": "HoneydewModels/Types/IPropertyType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IPropertyType",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ITypeWithAttributes.cs",
          "path": "HoneydewModels/Types/ITypeWithAttributes.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.ITypeWithAttributes",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ITypeWithDestructor.cs",
          "path": "HoneydewModels/Types/ITypeWithDestructor.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.ITypeWithDestructor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ITypeWithCyclomaticComplexity.cs",
          "path": "HoneydewModels/Types/ITypeWithCyclomaticComplexity.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.ITypeWithCyclomaticComplexity",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["int"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ITypeWithGenericParameters.cs",
          "path": "HoneydewModels/Types/ITypeWithGenericParameters.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.ITypeWithGenericParameters",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ITypeWithLinesOfCode.cs",
          "path": "HoneydewModels/Types/ITypeWithLinesOfCode.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.ITypeWithLinesOfCode",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["HoneydewModels.LinesOfCode"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ITypeWithLocalFunctions.cs",
          "path": "HoneydewModels/Types/ITypeWithLocalFunctions.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.ITypeWithLocalFunctions",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ITypeWithLocalVariables.cs",
          "path": "HoneydewModels/Types/ITypeWithLocalVariables.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.ITypeWithLocalVariables",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": ["System.Collections.Generic.IList"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IType.cs",
          "path": "HoneydewModels/Types/IType.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.IType",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ITypeWithModifiers.cs",
          "path": "HoneydewModels/Types/ITypeWithModifiers.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.ITypeWithModifiers",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["string"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ITypeWithMetrics.cs",
          "path": "HoneydewModels/Types/ITypeWithMetrics.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Types",
              "classes": [
                {
                  "name": "HoneydewModels.Types.ITypeWithMetrics",
                  "type": "interface",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.CSharp"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewModels.CSharp.MetricModel",
                    "System.Collections.Generic.IList"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": ".NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "path": "HoneydewModels/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "namespaces": []
        },
        {
          "name": "HoneydewModels.AssemblyInfo.cs",
          "path": "HoneydewModels/obj/Debug/net6.0/HoneydewModels.AssemblyInfo.cs",
          "namespaces": []
        },
        {
          "name": "ClassTypeConverter.cs",
          "path": "HoneydewModels/Converters/JSON/ClassTypeConverter.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Converters.JSON",
              "classes": [
                {
                  "name": "HoneydewModels.Converters.JSON.ClassTypeConverter",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "HoneydewModels.Types",
                    "Newtonsoft.Json",
                    "Newtonsoft.Json.Linq"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewModels.Converters.ITypeConverter",
                    "Newtonsoft.Json.JsonConverter",
                    "Newtonsoft.Json.JsonWriter",
                    "object",
                    "Newtonsoft.Json.JsonSerializer",
                    "void",
                    "Newtonsoft.Json.JsonReader",
                    "System.Type",
                    "Newtonsoft.Json.Linq.JObject",
                    "bool"
                  ],
                  "methods": [
                    {
                      "name": "WriteJson#Newtonsoft.Json.JsonWriter,object,Newtonsoft.Json.JsonSerializer",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Newtonsoft.Json.JsonSerializer@Serialize#Newtonsoft.Json.JsonWriter,object",
                        "->HoneydewModels.Converters.ITypeConverter@Convert#object"
                      ]
                    },
                    {
                      "name": "ReadJson#Newtonsoft.Json.JsonReader,System.Type,object,Newtonsoft.Json.JsonSerializer",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Newtonsoft.Json.Linq.JObject@Load#Newtonsoft.Json.JsonReader",
                        "->HoneydewModels.Converters.ITypeConverter@Convert#string",
                        "->Newtonsoft.Json.Linq.JToken@ToString#",
                        "->Newtonsoft.Json.Linq.JObject@GetValue#string",
                        "->Newtonsoft.Json.JsonSerializer@Populate#Newtonsoft.Json.JsonReader,object",
                        "->Newtonsoft.Json.Linq.JObject@CreateReader#"
                      ]
                    },
                    {
                      "name": "CanConvert#System.Type",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "ClassTypeConverter#HoneydewModels.Converters.ITypeConverter<HoneydewModels.Types.IClassType>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "JsonModelImporter.cs",
          "path": "HoneydewModels/Importers/JsonModelImporter.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Importers",
              "classes": [
                {
                  "name": "HoneydewModels.Importers.JsonModelImporter<TModel>",
                  "type": "Class",
                  "usingStatements": ["System.IO", "Newtonsoft.Json"],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "string",
                    "TModel",
                    "System.IO.StreamReader",
                    "Newtonsoft.Json.JsonSerializer",
                    "Newtonsoft.Json.JsonTextReader",
                    "Newtonsoft.Json.JsonConverter"
                  ],
                  "methods": [
                    {
                      "name": "Import#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.IO.File@OpenText#string",
                        "->HoneydewModels.IConverterList@GetConverters#",
                        "->Newtonsoft.Json.JsonConverterCollection@Add#Newtonsoft.Json.JsonConverter",
                        "->Newtonsoft.Json.JsonSerializer@Deserialize<TModel>#Newtonsoft.Json.JsonReader"
                      ]
                    },
                    {
                      "name": "JsonModelImporter#HoneydewModels.IConverterList",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpClassTypeConverter.cs",
          "path": "HoneydewModels/Converters/CSharpClassTypeConverter.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.Converters",
              "classes": [
                {
                  "name": "HoneydewModels.Converters.CSharpClassTypeConverter",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "HoneydewModels.Converters.ITypeConverter",
                    "string",
                    "HoneydewModels.CSharp.DelegateModel",
                    "HoneydewModels.CSharp.EnumModel"
                  ],
                  "methods": [
                    {
                      "name": "Convert#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Convert#object",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "NamespaceModel.cs",
          "path": "HoneydewModels/CSharp/NamespaceModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.NamespaceModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "object",
                    "HoneydewModels.CSharp.NamespaceModel",
                    "System.IEquatable",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Add#HoneydewModels.Types.IClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewModels/CSharp/ProjectModel.cs->HoneydewModels.CSharp.ProjectModel@Add#HoneydewModels.Types.ICompilationUnitType",
                        "HoneydewTests/Models/ProjectNamespaceTests.cs->HoneydewTests.Models.ProjectNamespaceTests@Add_ShouldAddNewClass_WhenClassIsFromDefaultNamespace#",
                        "HoneydewTests/Models/ProjectNamespaceTests.cs->HoneydewTests.Models.ProjectNamespaceTests@Add_ShouldAddNewClass_WhenANewClassModelIsAdded#",
                        "HoneydewTests/Models/ProjectNamespaceTests.cs->HoneydewTests.Models.ProjectNamespaceTests@Add_ShouldAddNewClasses_WhenMultipleClassNamesAreAdded#",
                        "HoneydewTests/Models/ProjectNamespaceTests.cs->HoneydewTests.Models.ProjectNamespaceTests@Add_ShouldAddNewClassOnce_WhenTheSameClassNamesAdded#",
                        "HoneydewTests/Models/ProjectNamespaceTests.cs->HoneydewTests.Models.ProjectNamespaceTests@Add_ShouldNotAddClassOnce_WhenNamespaceIsDifferentInClass#",
                        "HoneydewTests/Models/ProjectNamespaceTests.cs->HoneydewTests.Models.ProjectNamespaceTests@Add_ShouldAddClassModelWithAllAttributes_WhenMultipleClassNamesAreAdded#"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrEmpty#string",
                        "->System.Collections.Generic.IList@Any#System.Func<string, bool>",
                        "->System.Collections.Generic.IList@Add#string"
                      ]
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ProjectModel.cs",
          "path": "HoneydewModels/CSharp/ProjectModel.cs",
          "namespaces": [
            {
              "name": "HoneydewModels.CSharp",
              "classes": [
                {
                  "name": "HoneydewModels.CSharp.ProjectModel",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.CSharp.NamespaceModel",
                    "object",
                    "HoneydewModels.CSharp.ProjectModel",
                    "System.IEquatable",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Add#HoneydewModels.Types.ICompilationUnitType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewCoreTest/Models/ProjectModelTests.cs->HoneydewCoreTest.Models.ProjectModelTests@Add_ShouldAddNamespace_WhenANewClassModelWithNamespaceIsAdded#",
                        "HoneydewCoreTest/Models/ProjectModelTests.cs->HoneydewCoreTest.Models.ProjectModelTests@Add_ShouldAddNewClass_WhenClassIsFromDefaultNamespace#",
                        "HoneydewCoreTest/Models/ProjectModelTests.cs->HoneydewCoreTest.Models.ProjectModelTests@Add_ShouldAddNamespace_WhenMultipleClassModelsWithNamespaceIsAdded#",
                        "HoneydewCoreTest/Models/ProjectModelTests.cs->HoneydewCoreTest.Models.ProjectModelTests@Add_ShouldAddNamespaceOnce_WhenDifferentClassesAreAddedFromTheSameNamespace#",
                        "HoneydewCoreTest/Models/ProjectModelTests.cs->HoneydewCoreTest.Models.ProjectModelTests@Add_ShouldAddNamespaceOnce_WhenDifferentClassesAreAddedFromTheSameCompilationUnit#",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/BasicProjectLoadingStrategy.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.BasicProjectLoadingStrategy@Load#Microsoft.CodeAnalysis.Project,HoneydewExtractors.Core.IFactExtractorCreator",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ParallelProjectLoadingStrategy.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ParallelProjectLoadingStrategy@Load#Microsoft.CodeAnalysis.Project,HoneydewExtractors.Core.IFactExtractorCreator",
                        "HoneydewExtractors/CSharp/RepositoryLoading/CSharpRepositoryLoader.cs->HoneydewExtractors.CSharp.RepositoryLoading.CSharpRepositoryLoader@Load#string"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.ICompilationUnitType",
                        "->System.Collections.Generic.IList@FirstOrDefault#System.Func<HoneydewModels.CSharp.NamespaceModel, bool>",
                        "HoneydewModels/CSharp/NamespaceModel.cs->HoneydewModels.CSharp.NamespaceModel@Add#HoneydewModels.Types.IClassType",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.NamespaceModel"
                      ]
                    },
                    {
                      "name": "ProjectModel#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "ProjectModel#string",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "projectReferences": [],
      "externalReferences": []
    },
    {
      "name": "HoneydewCore",
      "path": "HoneydewCore/HoneydewCore.csproj",
      "files": [
        {
          "name": "IRepositoryLoader.cs",
          "path": "HoneydewCore/IO/Readers/IRepositoryLoader.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.IO.Readers",
              "classes": [
                {
                  "name": "HoneydewCore.IO.Readers.IRepositoryLoader<TRepositoryModel>",
                  "type": "interface",
                  "usingStatements": [
                    "System.Threading.Tasks",
                    "HoneydewModels"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "TRepositoryModel",
                    "System.Threading.Tasks.Task"
                  ],
                  "methods": [
                    {
                      "name": "Load#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IFolderPathValidator.cs",
          "path": "HoneydewCore/IO/IFolderPathValidator.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.IO",
              "classes": [
                {
                  "name": "HoneydewCore.IO.IFolderPathValidator",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["string", "bool"],
                  "methods": [
                    {
                      "name": "IsFolder#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IProgressLogger.cs",
          "path": "HoneydewCore/Logging/IProgressLogger.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.Logging",
              "classes": [
                {
                  "name": "HoneydewCore.Logging.IProgressLogger",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "string",
                    "System.Collections.Generic.IEnumerable",
                    "int"
                  ],
                  "methods": [
                    {
                      "name": "Log#object",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Log#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "CreateProgressBars#System.Collections.Generic.IEnumerable<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "CreateProgressLogger#int,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "StopProgressBar#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IProgressLoggerBar.cs",
          "path": "HoneydewCore/Logging/IProgressLoggerBar.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.Logging",
              "classes": [
                {
                  "name": "HoneydewCore.Logging.IProgressLoggerBar",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["void", "string"],
                  "methods": [
                    {
                      "name": "Start#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Step#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Stop#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ILogger.cs",
          "path": "HoneydewCore/Logging/ILogger.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.Logging",
              "classes": [
                {
                  "name": "HoneydewCore.Logging.ILogger",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["string", "void"],
                  "methods": [
                    {
                      "name": "Log#string,HoneydewCore.Logging.LogLevels",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Relation.cs",
          "path": "HoneydewCore/ModelRepresentations/Relation.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.ModelRepresentations",
              "classes": [
                {
                  "name": "HoneydewCore.ModelRepresentations.Relation",
                  "type": "Record",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "int",
                    "object",
                    "HoneydewCore.ModelRepresentations.Relation",
                    "System.IEquatable"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "InvalidCSVLineLengthException.cs",
          "path": "HoneydewCore/IO/Writers/CSV/InvalidCSVLineLengthException.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.IO.Writers.CSV",
              "classes": [
                {
                  "name": "HoneydewCore.IO.Writers.CSV.InvalidCsvLineLengthException",
                  "type": "Class",
                  "usingStatements": ["System"],
                  "attributes": [],
                  "usedClasses": ["System.Exception"],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "FolderPathValidator.cs",
          "path": "HoneydewCore/IO/FolderPathValidator.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.IO",
              "classes": [
                {
                  "name": "HoneydewCore.IO.FolderPathValidator",
                  "type": "Class",
                  "usingStatements": ["System.IO"],
                  "attributes": [],
                  "usedClasses": ["object", "string", "bool"],
                  "methods": [
                    {
                      "name": "IsFolder#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": ["->System.IO.Directory@Exists#string"]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IProcessorFunction.cs",
          "path": "HoneydewCore/Processors/IProcessorFunction.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.Processors",
              "classes": [
                {
                  "name": "HoneydewCore.Processors.IProcessorFunction<in T, out TR>",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["T", "TR"],
                  "methods": [
                    {
                      "name": "Process#T",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CyclomaticComplexityPerFileRepresentation.cs",
          "path": "HoneydewCore/ModelRepresentations/CyclomaticComplexityPerFileRepresentation.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.ModelRepresentations",
              "classes": [
                {
                  "name": "HoneydewCore.ModelRepresentations.CyclomaticComplexityPerFileRepresentation",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "Newtonsoft.Json"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewCore.ModelRepresentations.FileWrapper",
                    "object",
                    "HoneydewCore.ModelRepresentations.Concern",
                    "void",
                    "System.Collections.Generic.List"
                  ],
                  "methods": [
                    {
                      "name": "AddConcern#HoneydewCore.ModelRepresentations.Concern",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.List@Add#HoneydewCore.ModelRepresentations.Concern"
                      ]
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                },
                {
                  "name": "HoneydewCore.ModelRepresentations.FileWrapper",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "Newtonsoft.Json"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewCore.ModelRepresentations.Concern",
                    "System.Collections.Generic.List",
                    "object"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                },
                {
                  "name": "HoneydewCore.ModelRepresentations.Concern",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "Newtonsoft.Json"
                  ],
                  "attributes": [],
                  "usedClasses": ["string", "object"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "TextFileExporter.cs",
          "path": "HoneydewCore/IO/Writers/Exporters/TextFileExporter.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.IO.Writers.Exporters",
              "classes": [
                {
                  "name": "HoneydewCore.IO.Writers.Exporters.TextFileExporter",
                  "type": "Class",
                  "usingStatements": ["System.IO"],
                  "attributes": [],
                  "usedClasses": ["object", "string", "void"],
                  "methods": [
                    {
                      "name": "Export#string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "->System.IO.Directory@CreateDirectory#string",
                        "->System.IO.Path@GetDirectoryName#string",
                        "->System.IO.File@WriteAllText#string,string"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": ".NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "path": "HoneydewCore/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "namespaces": []
        },
        {
          "name": "HoneydewCore.AssemblyInfo.cs",
          "path": "HoneydewCore/obj/Debug/net6.0/HoneydewCore.AssemblyInfo.cs",
          "namespaces": []
        },
        {
          "name": "RelationsRepresentation.cs",
          "path": "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.ModelRepresentations",
              "classes": [
                {
                  "name": "HoneydewCore.ModelRepresentations.RelationsRepresentation",
                  "type": "Class",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.ISet",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "object",
                    "HoneydewCore.ModelRepresentations.Relation",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Add#HoneydewCore.ModelRepresentations.Relation",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Scripts/GenericDependenciesScript.cs->Honeydew.Scripts.GenericDependenciesScript@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string,string,string,int"
                      ]
                    },
                    {
                      "name": "Add#string,string,string,int",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#HoneydewCore.ModelRepresentations.Relation",
                        "HoneydewTests/Models/Representations/ClassRelationsRepresentationTests.cs->HoneydewTests.Models.Representations.ClassRelationsRepresentationTests@Add_ShouldHaveNoRelations_WhenAddedEmptySource#string",
                        "HoneydewTests/Models/Representations/ClassRelationsRepresentationTests.cs->HoneydewTests.Models.Representations.ClassRelationsRepresentationTests@Add_ShouldHaveNoRelations_WhenAddedEmptyTarget#string",
                        "HoneydewTests/Models/Representations/ClassRelationsRepresentationTests.cs->HoneydewTests.Models.Representations.ClassRelationsRepresentationTests@Add_ShouldHaveNoRelations_WhenAddedEmptyDependency#string",
                        "HoneydewTests/Models/Representations/ClassRelationsRepresentationTests.cs->HoneydewTests.Models.Representations.ClassRelationsRepresentationTests@Add_ShouldHaveRelation_WhenAddedOneDependency#",
                        "HoneydewTests/Models/Representations/ClassRelationsRepresentationTests.cs->HoneydewTests.Models.Representations.ClassRelationsRepresentationTests@Add_ShouldHaveRelation_WhenAddedTwoDependenciesForTheSameSourceAndTarget#",
                        "HoneydewTests/Models/Representations/ClassRelationsRepresentationTests.cs->HoneydewTests.Models.Representations.ClassRelationsRepresentationTests@Add_ShouldHaveRelation_WhenAddedMultipleDependenciesForMultipleSourceAndTargets#",
                        "Honeydew/Processors/RepositoryModelToFileRelationsProcessor.cs->Honeydew.Processors.RepositoryModelToFileRelationsProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Processors/RepositoryModelToClassRelationsProcessor.cs->Honeydew.Processors.RepositoryModelToClassRelationsProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetProjectRelations#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetSolutionProjectRelations#HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrWhiteSpace#string",
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string",
                        "->System.Collections.Generic.ISet@Add#string",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, int>>",
                        "->System.Collections.Generic.IDictionary@Add#string,System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, int>>",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,System.Collections.Generic.IDictionary<string, int>",
                        "->System.Collections.Generic.IDictionary@ContainsKey#string",
                        "->System.Collections.Generic.IDictionary@Add#string,int",
                        "->System.Collections.Generic.IDictionary@Add#string,System.Collections.Generic.IDictionary<string, int>"
                      ]
                    },
                    {
                      "name": "Add#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string,string,string,int",
                        "HoneydewTests/Models/Representations/ClassRelationsRepresentationTests.cs->HoneydewTests.Models.Representations.ClassRelationsRepresentationTests@Add_WithOneParameter_ShouldHaveNoRelations_WhenAddedEmptySource#string"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrWhiteSpace#string",
                        "->System.Collections.Generic.IDictionary@ContainsKey#string",
                        "->System.Collections.Generic.IDictionary@Add#string,System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, int>>"
                      ]
                    },
                    {
                      "name": "TotalRelationsCount#string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, int>>",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,System.Collections.Generic.IDictionary<string, int>"
                      ]
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpConstants.cs",
          "path": "HoneydewCore/Utils/CSharpConstants.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.Utils",
              "classes": [
                {
                  "name": "HoneydewCore.Utils.CSharpConstants",
                  "type": "Class",
                  "usingStatements": ["System"],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "string[]",
                    "object",
                    "void",
                    "bool",
                    "int"
                  ],
                  "methods": [
                    {
                      "name": "SetModifiers#string,string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/BaseInfoClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.BaseInfoClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorInfoVisitor@GetModifiersForNode#Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax,string,string",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Enum/BaseInfoEnumVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Enum.BaseInfoEnumVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Field/FieldInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Field.FieldInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,System.Collections.Generic.IList<HoneydewModels.Types.IFieldType>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Method/MethodInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Method.MethodInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Method/MethodInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Method.MethodInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Property/PropertyInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Property.PropertyInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IPropertyType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Delegate/BaseInfoDelegateVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Delegate.BaseInfoDelegateVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType"
                      ],
                      "calledMethods": [
                        "->string@Contains#string",
                        "->string@Trim#",
                        "->string@Replace#string,string",
                        "->string@IsNullOrEmpty#string"
                      ]
                    },
                    {
                      "name": "IsPrimitiveArray#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "Honeydew/PostExtraction/ReferenceRelations/AddGenericNamesStrategy.cs->Honeydew.PostExtraction.ReferenceRelations.AddGenericNamesStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,string,int"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrEmpty#string",
                        "->string@IndexOf#string,System.StringComparison",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsPrimitive#string"
                      ]
                    },
                    {
                      "name": "IsPrimitive#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsPrimitiveArray#string",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@CreateClassModel#string",
                        "Honeydew/PostExtraction/ReferenceRelations/AddGenericNamesStrategy.cs->Honeydew.PostExtraction.ReferenceRelations.AddGenericNamesStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,string,int",
                        "Honeydew/Processors/RepositoryModelToFileRelationsProcessor.cs->Honeydew.Processors.RepositoryModelToFileRelationsProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Processors/RepositoryModelToClassRelationsProcessor.cs->Honeydew.Processors.RepositoryModelToClassRelationsProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrEmpty#string",
                        "->string@TrimEnd#char",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@ConvertSystemTypeToPrimitiveType#string"
                      ]
                    },
                    {
                      "name": "ConvertSystemTypeToPrimitiveType#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsPrimitive#string",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsNumericType#string"
                      ],
                      "calledMethods": []
                    },
                    {
                      "name": "ConvertPrimitiveTypeToSystemType#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "IsNumericType#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs->HoneydewScriptBeePlugin.Loaders.MetricAdder@AddMetrics#HoneydewScriptBeePlugin.Models.FileModel,HoneydewModels.Types.ITypeWithMetrics",
                        "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs->HoneydewScriptBeePlugin.Loaders.MetricAdder@AddMetrics#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewModels.Types.ITypeWithMetrics",
                        "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs->HoneydewScriptBeePlugin.Loaders.MetricAdder@AddMetrics#HoneydewScriptBeePlugin.Models.FieldModel,HoneydewModels.Types.ITypeWithMetrics",
                        "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs->HoneydewScriptBeePlugin.Loaders.MetricAdder@AddMetrics#HoneydewScriptBeePlugin.Models.MethodModel,HoneydewModels.Types.ITypeWithMetrics"
                      ],
                      "calledMethods": [
                        "->string@TrimEnd#char",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@ConvertSystemTypeToPrimitiveType#string"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExportUtils.cs",
          "path": "HoneydewCore/IO/Writers/Exporters/ExportUtils.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.IO.Writers.Exporters",
              "classes": [
                {
                  "name": "HoneydewCore.IO.Writers.Exporters.ExportUtils",
                  "type": "Class",
                  "usingStatements": ["System", "System.Globalization"],
                  "attributes": [],
                  "usedClasses": ["string", "System.Func", "object"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->string@Split#string,System.StringSplitOptions",
                        "->string@Trim#char",
                        "->double@TryParse#string,double",
                        "->double@ToString#System.IFormatProvider"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CsvRelationsRepresentationExporter.cs",
          "path": "HoneydewCore/IO/Writers/Exporters/CsvRelationsRepresentationExporter.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.IO.Writers.Exporters",
              "classes": [
                {
                  "name": "HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Linq",
                    "HoneydewCore.IO.Writers.CSV",
                    "HoneydewCore.ModelRepresentations"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Func",
                    "System.Tuple",
                    "System.Collections.Generic.IList",
                    "object",
                    "HoneydewCore.ModelRepresentations.RelationsRepresentation",
                    "System.Collections.Generic.List",
                    "void",
                    "System.Collections.Generic.ISet",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewCore.IO.Writers.CSV.CsvBuilder",
                    "System.IO.StreamWriter"
                  ],
                  "methods": [
                    {
                      "name": "Export#string,HoneydewCore.ModelRepresentations.RelationsRepresentation,System.Collections.Generic.List<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Scripts/ExportClassRelationsScript.cs->Honeydew.Scripts.ExportClassRelationsScript@Run#System.Collections.Generic.Dictionary<string, object>",
                        "Honeydew/Scripts/ExportFileRelationsScript.cs->Honeydew.Scripts.ExportFileRelationsScript@Run#System.Collections.Generic.Dictionary<string, object>",
                        "Honeydew/Scripts/GenericDependenciesScript.cs->Honeydew.Scripts.GenericDependenciesScript@Run#System.Collections.Generic.Dictionary<string, object>",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrEmpty#string",
                        "->@nameof#string",
                        "->System.Collections.Generic.List@AddRange#System.Collections.Generic.IEnumerable<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddHeader#System.Collections.Generic.IList<string>",
                        "->System.Collections.Generic.ISet@Select#System.Func<string, string>",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,int",
                        "->int@ToString#",
                        "->System.Linq.Enumerable@Select#System.Func<string, string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddLine#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddColumnWithFormulaForEachRow#string,System.Func<string, string>",
                        "->System.IO.Directory@CreateDirectory#string",
                        "->System.IO.Path@GetDirectoryName#string",
                        "->System.IO.StreamWriter@Write#string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsv#"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "FilePathShortenerProcessor.cs",
          "path": "HoneydewCore/Processors/FilePathShortenerProcessor.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.Processors",
              "classes": [
                {
                  "name": "HoneydewCore.Processors.FilePathShortenerProcessor",
                  "type": "Class",
                  "usingStatements": [
                    "System.IO",
                    "System.Linq",
                    "HoneydewCore.IO",
                    "HoneydewModels.CSharp"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewCore.Processors.IProcessorFunction",
                    "HoneydewModels.CSharp.SolutionModel",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.CSharp.ProjectModel",
                    "int",
                    "bool",
                    "System.IO.DirectoryInfo"
                  ],
                  "methods": [
                    {
                      "name": "Process#HoneydewModels.CSharp.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewCoreTest/Processors/FilePathShortenerProcessorTests.cs->HoneydewCoreTest.Processors.FilePathShortenerProcessorTests@Process_ShouldHaveSolutionsWithShortenedPath_WhenProvidedWithInputPathToAFolder#",
                        "HoneydewCoreTest/Processors/FilePathShortenerProcessorTests.cs->HoneydewCoreTest.Processors.FilePathShortenerProcessorTests@Process_ShouldHaveProjectsWithShortenedPath_WhenProvidedWithInputPathToAFolder#",
                        "HoneydewCoreTest/Processors/FilePathShortenerProcessorTests.cs->HoneydewCoreTest.Processors.FilePathShortenerProcessorTests@Process_ShouldHaveClassesWithShortenedPath_WhenProvidedWithInputPathToAFolder#",
                        "HoneydewCoreTest/Processors/FilePathShortenerProcessorTests.cs->HoneydewCoreTest.Processors.FilePathShortenerProcessorTests@Process_ShouldHaveTheSamePath_WhenFilePathsDontContainTheInputPathToAFolder#",
                        "HoneydewCoreTest/Processors/FilePathShortenerProcessorTests.cs->HoneydewCoreTest.Processors.FilePathShortenerProcessorTests@Process_ShouldHaveFilePathsShortened_WhenProvidedWithInputPathToASolutionFile#",
                        "HoneydewCoreTest/Processors/FilePathShortenerProcessorTests.cs->HoneydewCoreTest.Processors.FilePathShortenerProcessorTests@Process_ShouldHaveFilePathsShortened_WhenProvidedWithInputPathToACSharpProjectFile#"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrWhiteSpace#string",
                        "HoneydewCore/Processors/FilePathShortenerProcessor.cs->HoneydewCore.Processors.FilePathShortenerProcessor@TrimPath#string",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Linq.Enumerable@Select#System.Func<string, string>"
                      ]
                    },
                    {
                      "name": "TrimPath#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewCore/Processors/FilePathShortenerProcessor.cs->HoneydewCore.Processors.FilePathShortenerProcessor@Process#HoneydewModels.CSharp.RepositoryModel"
                      ],
                      "calledMethods": [
                        "HoneydewCore/Processors/FilePathShortenerProcessor.cs->HoneydewCore.Processors.FilePathShortenerProcessor@AreSubDirectories#string,string",
                        "->string@Replace#char,char",
                        "->System.IO.Path@GetRelativePath#string,string"
                      ]
                    },
                    {
                      "name": "AreSubDirectories#string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewCore/Processors/FilePathShortenerProcessor.cs->HoneydewCore.Processors.FilePathShortenerProcessor@TrimPath#string"
                      ],
                      "calledMethods": []
                    },
                    {
                      "name": "FilePathShortenerProcessor#string",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/Processors/FilePathShortenerProcessor.cs->HoneydewCore.Processors.FilePathShortenerProcessor@FilePathShortenerProcessor#HoneydewCore.IO.IFolderPathValidator,string"
                      ]
                    },
                    {
                      "name": "FilePathShortenerProcessor#HoneydewCore.IO.IFolderPathValidator,string",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewCore/Processors/FilePathShortenerProcessor.cs->HoneydewCore.Processors.FilePathShortenerProcessor@FilePathShortenerProcessor#string"
                      ],
                      "calledMethods": [
                        "->HoneydewCore.IO.IFolderPathValidator@IsFolder#string",
                        "->System.IO.Directory@GetParent#string",
                        "->System.IO.DirectoryInfo@ToString#",
                        "->string@Replace#char,char"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSVBuilder.cs",
          "path": "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.IO.Writers.CSV",
              "classes": [
                {
                  "name": "HoneydewCore.IO.Writers.CSV.CsvBuilder",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "System.Text"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "char",
                    "string",
                    "System.Collections.Generic.IList",
                    "int",
                    "object",
                    "void",
                    "System.Func",
                    "System.Collections.Generic.List",
                    "System.Text.StringBuilder"
                  ],
                  "methods": [
                    {
                      "name": "AddHeader#System.Collections.Generic.IList<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewCore/IO/Writers/Exporters/CsvRelationsRepresentationExporter.cs->HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter@Export#string,HoneydewCore.ModelRepresentations.RelationsRepresentation,System.Collections.Generic.List<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CsvBuilder#System.Collections.Generic.IList<string>,char",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@AddLine_ShouldThrowInvalidCSVLineLengthException_WhenHeaderIsProvided_ButMoreValuesAreAdded#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@AddLine_ShouldThrowInvalidCSVLineLengthException_WhenHeaderIsProvided_ButFewerValuesAreAdded#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldCsvString_WhenHeadersAndValuesAreProvided#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldCsvString_WhenHeadersAndValuesAreProvided_WithOtherSeparator#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedLessColumnsThanRowCount#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedMoreColumnsThanRowCount#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedTheSameAmountOfColumnsAsRowCount#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddColumn_WhenProvidedAFormulaForEachRow#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddColumn_WhenProvidedAFormulaForEachRowWithHeaderName#"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsvLine#System.Collections.Generic.IList<string>"
                      ]
                    },
                    {
                      "name": "AddLine#System.Collections.Generic.IList<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewCore/IO/Writers/Exporters/CsvRelationsRepresentationExporter.cs->HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter@Export#string,HoneydewCore.ModelRepresentations.RelationsRepresentation,System.Collections.Generic.List<string>",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@AddLine_ShouldThrowInvalidCSVLineLengthException_WhenNoHeaderIsProvided_ButValuesAreAdded#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@AddLine_ShouldThrowInvalidCSVLineLengthException_WhenHeaderIsProvided_ButMoreValuesAreAdded#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@AddLine_ShouldThrowInvalidCSVLineLengthException_WhenHeaderIsProvided_ButFewerValuesAreAdded#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldCsvString_WhenHeadersAndValuesAreProvided#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldCsvString_WhenHeadersAndValuesAreProvided_WithOtherSeparator#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedLessColumnsThanRowCount#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedMoreColumnsThanRowCount#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedTheSameAmountOfColumnsAsRowCount#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddColumn_WhenProvidedAFormulaForEachRow#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddColumn_WhenProvidedAFormulaForEachRowWithHeaderName#"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsvLine#System.Collections.Generic.IList<string>"
                      ]
                    },
                    {
                      "name": "AddColumn#System.Collections.Generic.IList<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddColumnWithFormulaForEachRow#System.Func<string, string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddColumnWithFormulaForEachRow#string,System.Func<string, string>",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedLessColumnsThanRowCount#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedMoreColumnsThanRowCount#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedTheSameAmountOfColumnsAsRowCount#"
                      ],
                      "calledMethods": []
                    },
                    {
                      "name": "AddColumnWithFormulaForEachRow#System.Func<string, string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddColumn_WhenProvidedAFormulaForEachRow#"
                      ],
                      "calledMethods": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddColumn#System.Collections.Generic.IList<string>",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Linq.Enumerable@Select#System.Func<string, string>"
                      ]
                    },
                    {
                      "name": "AddColumnWithFormulaForEachRow#string,System.Func<string, string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewCore/IO/Writers/Exporters/CsvRelationsRepresentationExporter.cs->HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter@Export#string,HoneydewCore.ModelRepresentations.RelationsRepresentation,System.Collections.Generic.List<string>",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddColumn_WhenProvidedAFormulaForEachRowWithHeaderName#"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.List@AddRange#System.Collections.Generic.IEnumerable<string>",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Linq.Enumerable@Select#System.Func<string, string>",
                        "->System.Collections.Generic.IList@Skip#int",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddColumn#System.Collections.Generic.IList<string>"
                      ]
                    },
                    {
                      "name": "CreateCsv#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewCore/IO/Writers/Exporters/CsvRelationsRepresentationExporter.cs->HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter@Export#string,HoneydewCore.ModelRepresentations.RelationsRepresentation,System.Collections.Generic.List<string>",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldReturnEmptyString_WhenNoHeadersAndNoValuesAreProvided#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldReturnCsvStringWithHeaders_WhenHeadersAreProvided#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldCsvString_WhenHeadersAndValuesAreProvided#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldReturnCsvStringWithHeaders_WhenHeadersAreProvided_WithOtherSeparator#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldCsvString_WhenHeadersAndValuesAreProvided_WithOtherSeparator#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedLessColumnsThanRowCount#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedMoreColumnsThanRowCount#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedTheSameAmountOfColumnsAsRowCount#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddColumn_WhenProvidedAFormulaForEachRow#",
                        "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs->HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests@CreateCSV_ShouldAddColumn_WhenProvidedAFormulaForEachRowWithHeaderName#"
                      ],
                      "calledMethods": [
                        "->System.Text.StringBuilder@Append#string",
                        "->System.Text.StringBuilder@ToString#"
                      ]
                    },
                    {
                      "name": "CreateCsvLine#System.Collections.Generic.IList<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddHeader#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddLine#System.Collections.Generic.IList<string>"
                      ],
                      "calledMethods": [
                        "->System.Text.StringBuilder@Append#string",
                        "->System.Text.StringBuilder@ToString#"
                      ]
                    },
                    {
                      "name": "CsvBuilder#char",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "CsvBuilder#System.Collections.Generic.IList<string>,char",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddHeader#System.Collections.Generic.IList<string>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "FullTypeNameBuilder.cs",
          "path": "HoneydewCore/Utils/FullTypeNameBuilder.cs",
          "namespaces": [
            {
              "name": "HoneydewCore.Utils",
              "classes": [
                {
                  "name": "HoneydewCore.Utils.FullTypeNameBuilder",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "string",
                    "bool",
                    "HoneydewModels.CSharp.EntityTypeModel",
                    "HoneydewModels.Types.GenericType",
                    "char",
                    "System.ReadOnlySpan",
                    "System.Collections.Generic.IList",
                    "int",
                    "System.Collections.Generic.List"
                  ],
                  "methods": [
                    {
                      "name": "CreateEntityTypeModel#string,bool",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@CreateEntityTypeModel#string,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetGenericParameters#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@SearchEntityByName#string,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEntityType#string,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@CreateClassModel#string"
                      ],
                      "calledMethods": [
                        "HoneydewCore/Utils/FullTypeNameBuilder.cs->HoneydewCore.Utils.FullTypeNameBuilder@GetFullType#string"
                      ]
                    },
                    {
                      "name": "GetFullType#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewCore/Utils/FullTypeNameBuilder.cs->HoneydewCore.Utils.FullTypeNameBuilder@CreateEntityTypeModel#string,bool"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrEmpty#string",
                        "->string@EndsWith#char",
                        "HoneydewCore/Utils/FullTypeNameBuilder.cs->HoneydewCore.Utils.FullTypeNameBuilder@GetFullType#System.ReadOnlySpan<char>"
                      ]
                    },
                    {
                      "name": "GetFullType#System.ReadOnlySpan<char>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewCore/Utils/FullTypeNameBuilder.cs->HoneydewCore.Utils.FullTypeNameBuilder@GetFullType#string",
                        "HoneydewCore/Utils/FullTypeNameBuilder.cs->HoneydewCore.Utils.FullTypeNameBuilder@GetFullType#System.ReadOnlySpan<char>"
                      ],
                      "calledMethods": [
                        "->System.MemoryExtensions@Contains#char",
                        "->string@Trim#",
                        "->System.ReadOnlySpan@ToString#",
                        "->string@EndsWith#char",
                        "->System.MemoryExtensions@IndexOf#char",
                        "->System.MemoryExtensions@LastIndexOf#char",
                        "->System.Collections.Generic.List@Add#int",
                        "->System.ReadOnlySpan@Slice#int,int",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.GenericType",
                        "HoneydewCore/Utils/FullTypeNameBuilder.cs->HoneydewCore.Utils.FullTypeNameBuilder@GetFullType#System.ReadOnlySpan<char>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "projectReferences": ["HoneydewModels"],
      "externalReferences": []
    },
    {
      "name": "HoneydewCoreTest",
      "path": "HoneydewCoreTest/HoneydewCoreTest.csproj",
      "files": [
        {
          "name": "JsonCyclomaticComplexityPerFileRepresentationExporterTests.cs",
          "path": "HoneydewCoreTest/IO/Writers/Exporters/JsonCyclomaticComplexityPerFileRepresentationExporterTests.cs",
          "namespaces": []
        },
        {
          "name": "HoneydewCoreTest.AssemblyInfo.cs",
          "path": "HoneydewCoreTest/obj/Debug/net6.0/HoneydewCoreTest.AssemblyInfo.cs",
          "namespaces": []
        },
        {
          "name": ".NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "path": "HoneydewCoreTest/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "namespaces": []
        },
        {
          "name": "CsvClassRelationsRepresentationExporterTests.cs",
          "path": "HoneydewCoreTest/IO/Writers/Exporters/CsvClassRelationsRepresentationExporterTests.cs",
          "namespaces": []
        },
        {
          "name": "Microsoft.NET.Test.Sdk.Program.cs",
          "path": "C:/Users/Andrei/.nuget/packages/microsoft.net.test.sdk/17.0.0/build/netcoreapp2.1/Microsoft.NET.Test.Sdk.Program.cs",
          "namespaces": [
            {
              "name": "<global namespace>",
              "classes": [
                {
                  "name": "AutoGeneratedProgram",
                  "type": "Class",
                  "usingStatements": ["System"],
                  "attributes": [
                    "Microsoft.VisualStudio.TestPlatform.TestSDKAutoGeneratedCode"
                  ],
                  "usedClasses": [
                    "object",
                    "Microsoft.VisualStudio.TestPlatform.TestSDKAutoGeneratedCode",
                    "string[]",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Main#string[]",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExportUtilsTests.cs",
          "path": "HoneydewCoreTest/IO/Writers/Exporters/ExportUtilsTests.cs",
          "namespaces": [
            {
              "name": "HoneydewCoreTest.IO.Writers.Exporters",
              "classes": [
                {
                  "name": "HoneydewCoreTest.IO.Writers.Exporters.ExportUtilsTests",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewCore.IO.Writers.Exporters",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": ["object", "void", "string", "System.Func"],
                  "methods": [
                    {
                      "name": "CsvCountPerLine_ShouldReturn0_WhenNoNumberIsDetected#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Func@Invoke#string",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CsvCountPerLine_ShouldReturnTheSumOfNumbers_WhenOnlyNumberAreProvided#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Func@Invoke#string",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CsvCountPerLine_ShouldReturnTheSumOfNumbers_WhenNumbersAndStringsAreProvided#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Func@Invoke#string",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ProjectModelTests.cs",
          "path": "HoneydewCoreTest/Models/ProjectModelTests.cs",
          "namespaces": [
            {
              "name": "HoneydewCoreTest.Models",
              "classes": [
                {
                  "name": "HoneydewCoreTest.Models.ProjectModelTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewModels.CSharp.ProjectModel",
                    "object",
                    "void",
                    "HoneydewModels.CSharp.NamespaceModel",
                    "System.Collections.Generic.IList",
                    "string"
                  ],
                  "methods": [
                    {
                      "name": "Add_ShouldAddNamespace_WhenANewClassModelWithNamespaceIsAdded#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewModels/CSharp/ProjectModel.cs->HoneydewModels.CSharp.ProjectModel@Add#HoneydewModels.Types.ICompilationUnitType",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Add_ShouldAddNewClass_WhenClassIsFromDefaultNamespace#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewModels/CSharp/ProjectModel.cs->HoneydewModels.CSharp.ProjectModel@Add#HoneydewModels.Types.ICompilationUnitType",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Add_ShouldAddNamespace_WhenMultipleClassModelsWithNamespaceIsAdded#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewModels/CSharp/ProjectModel.cs->HoneydewModels.CSharp.ProjectModel@Add#HoneydewModels.Types.ICompilationUnitType",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Add_ShouldAddNamespaceOnce_WhenDifferentClassesAreAddedFromTheSameNamespace#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewModels/CSharp/ProjectModel.cs->HoneydewModels.CSharp.ProjectModel@Add#HoneydewModels.Types.ICompilationUnitType",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Add_ShouldAddNamespaceOnce_WhenDifferentClassesAreAddedFromTheSameCompilationUnit#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewModels/CSharp/ProjectModel.cs->HoneydewModels.CSharp.ProjectModel@Add#HoneydewModels.Types.ICompilationUnitType",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "ProjectModelTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "FilePathShortenerProcessorTests.cs",
          "path": "HoneydewCoreTest/Processors/FilePathShortenerProcessorTests.cs",
          "namespaces": [
            {
              "name": "HoneydewCoreTest.Processors",
              "classes": [
                {
                  "name": "HoneydewCoreTest.Processors.FilePathShortenerProcessorTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.IO",
                    "HoneydewCore.Processors",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "HoneydewModels.CSharp.SolutionModel",
                    "System.Collections.Generic.IList",
                    "string",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "Moq.Mock",
                    "HoneydewCore.Processors.FilePathShortenerProcessor",
                    "HoneydewModels.CSharp.ProjectModel"
                  ],
                  "methods": [
                    {
                      "name": "Process_ShouldHaveSolutionsWithShortenedPath_WhenProvidedWithInputPathToAFolder#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.SolutionModel",
                        "->Moq.Language.IReturns@Returns#bool",
                        "->Moq.Mock@Setup#System.Linq.Expressions.Expression<System.Func<HoneydewCore.IO.IFolderPathValidator, bool>>",
                        "->HoneydewCore.IO.IFolderPathValidator@IsFolder#string",
                        "HoneydewCore/Processors/FilePathShortenerProcessor.cs->HoneydewCore.Processors.FilePathShortenerProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Process_ShouldHaveProjectsWithShortenedPath_WhenProvidedWithInputPathToAFolder#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.ProjectModel",
                        "->Moq.Language.IReturns@Returns#bool",
                        "->Moq.Mock@Setup#System.Linq.Expressions.Expression<System.Func<HoneydewCore.IO.IFolderPathValidator, bool>>",
                        "->HoneydewCore.IO.IFolderPathValidator@IsFolder#string",
                        "HoneydewCore/Processors/FilePathShortenerProcessor.cs->HoneydewCore.Processors.FilePathShortenerProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Process_ShouldHaveClassesWithShortenedPath_WhenProvidedWithInputPathToAFolder#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.ProjectModel",
                        "->Moq.Language.IReturns@Returns#bool",
                        "->Moq.Mock@Setup#System.Linq.Expressions.Expression<System.Func<HoneydewCore.IO.IFolderPathValidator, bool>>",
                        "->HoneydewCore.IO.IFolderPathValidator@IsFolder#string",
                        "HoneydewCore/Processors/FilePathShortenerProcessor.cs->HoneydewCore.Processors.FilePathShortenerProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Process_ShouldHaveTheSamePath_WhenFilePathsDontContainTheInputPathToAFolder#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.SolutionModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.ProjectModel",
                        "->Moq.Language.IReturns@Returns#bool",
                        "->Moq.Mock@Setup#System.Linq.Expressions.Expression<System.Func<HoneydewCore.IO.IFolderPathValidator, bool>>",
                        "->HoneydewCore.IO.IFolderPathValidator@IsFolder#string",
                        "HoneydewCore/Processors/FilePathShortenerProcessor.cs->HoneydewCore.Processors.FilePathShortenerProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Process_ShouldHaveFilePathsShortened_WhenProvidedWithInputPathToASolutionFile#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.SolutionModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.ProjectModel",
                        "->Moq.Language.IReturns@Returns#bool",
                        "->Moq.Mock@Setup#System.Linq.Expressions.Expression<System.Func<HoneydewCore.IO.IFolderPathValidator, bool>>",
                        "->HoneydewCore.IO.IFolderPathValidator@IsFolder#string",
                        "HoneydewCore/Processors/FilePathShortenerProcessor.cs->HoneydewCore.Processors.FilePathShortenerProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Process_ShouldHaveFilePathsShortened_WhenProvidedWithInputPathToACSharpProjectFile#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.ProjectModel",
                        "->Moq.Language.IReturns@Returns#bool",
                        "->Moq.Mock@Setup#System.Linq.Expressions.Expression<System.Func<HoneydewCore.IO.IFolderPathValidator, bool>>",
                        "->HoneydewCore.IO.IFolderPathValidator@IsFolder#string",
                        "HoneydewCore/Processors/FilePathShortenerProcessor.cs->HoneydewCore.Processors.FilePathShortenerProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSVBuilderTests.cs",
          "path": "HoneydewCoreTest/IO/Writers/CSV/CSVBuilderTests.cs",
          "namespaces": [
            {
              "name": "HoneydewCoreTest.IO.Writers.CSV",
              "classes": [
                {
                  "name": "HoneydewCoreTest.IO.Writers.CSV.CsvBuilderTests",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "HoneydewCore.IO.Writers.CSV",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewCore.IO.Writers.CSV.CsvBuilder",
                    "object",
                    "void",
                    "string"
                  ],
                  "methods": [
                    {
                      "name": "AddLine_ShouldThrowInvalidCSVLineLengthException_WhenNoHeaderIsProvided_ButValuesAreAdded#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Xunit.Assert@Throws<InvalidCsvLineLengthException>#System.Action",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddLine#System.Collections.Generic.IList<string>"
                      ]
                    },
                    {
                      "name": "AddLine_ShouldThrowInvalidCSVLineLengthException_WhenHeaderIsProvided_ButMoreValuesAreAdded#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddHeader#System.Collections.Generic.IList<string>",
                        "->Xunit.Assert@Throws<InvalidCsvLineLengthException>#System.Action",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddLine#System.Collections.Generic.IList<string>"
                      ]
                    },
                    {
                      "name": "AddLine_ShouldThrowInvalidCSVLineLengthException_WhenHeaderIsProvided_ButFewerValuesAreAdded#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddHeader#System.Collections.Generic.IList<string>",
                        "->Xunit.Assert@Throws<InvalidCsvLineLengthException>#System.Action",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddLine#System.Collections.Generic.IList<string>"
                      ]
                    },
                    {
                      "name": "CreateCSV_ShouldReturnEmptyString_WhenNoHeadersAndNoValuesAreProvided#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Xunit.Assert@Equal#string,string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsv#"
                      ]
                    },
                    {
                      "name": "CreateCSV_ShouldReturnCsvStringWithHeaders_WhenHeadersAreProvided#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Xunit.Assert@Equal#string,string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsv#"
                      ]
                    },
                    {
                      "name": "CreateCSV_ShouldCsvString_WhenHeadersAndValuesAreProvided#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddHeader#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddLine#System.Collections.Generic.IList<string>",
                        "->Xunit.Assert@Equal#string,string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsv#"
                      ]
                    },
                    {
                      "name": "CreateCSV_ShouldReturnCsvStringWithHeaders_WhenHeadersAreProvided_WithOtherSeparator#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Xunit.Assert@Equal#string,string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsv#"
                      ]
                    },
                    {
                      "name": "CreateCSV_ShouldCsvString_WhenHeadersAndValuesAreProvided_WithOtherSeparator#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddHeader#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddLine#System.Collections.Generic.IList<string>",
                        "->Xunit.Assert@Equal#string,string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsv#"
                      ]
                    },
                    {
                      "name": "CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedLessColumnsThanRowCount#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddHeader#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddLine#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddColumn#System.Collections.Generic.IList<string>",
                        "->Xunit.Assert@Equal#string,string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsv#"
                      ]
                    },
                    {
                      "name": "CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedMoreColumnsThanRowCount#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddHeader#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddLine#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddColumn#System.Collections.Generic.IList<string>",
                        "->Xunit.Assert@Equal#string,string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsv#"
                      ]
                    },
                    {
                      "name": "CreateCSV_ShouldAddTheRightAmountOfColumns_WhenProvidedTheSameAmountOfColumnsAsRowCount#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddHeader#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddLine#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddColumn#System.Collections.Generic.IList<string>",
                        "->Xunit.Assert@Equal#string,string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsv#"
                      ]
                    },
                    {
                      "name": "CreateCSV_ShouldAddColumn_WhenProvidedAFormulaForEachRow#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddHeader#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddLine#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddColumnWithFormulaForEachRow#System.Func<string, string>",
                        "->string@Contains#string",
                        "->int@ToString#",
                        "->Xunit.Assert@Equal#string,string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsv#"
                      ]
                    },
                    {
                      "name": "CreateCSV_ShouldAddColumn_WhenProvidedAFormulaForEachRowWithHeaderName#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddHeader#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddLine#System.Collections.Generic.IList<string>",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@AddColumnWithFormulaForEachRow#string,System.Func<string, string>",
                        "->int@ToString#",
                        "->Xunit.Assert@Equal#string,string",
                        "HoneydewCore/IO/Writers/CSV/CSVBuilder.cs->HoneydewCore.IO.Writers.CSV.CsvBuilder@CreateCsv#"
                      ]
                    },
                    {
                      "name": "CsvBuilderTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "projectReferences": ["HoneydewCore", "HoneydewModels"],
      "externalReferences": []
    },
    {
      "name": "HoneydewExtractors",
      "path": "HoneydewExtractors/HoneydewExtractors.csproj",
      "files": [
        {
          "name": "IFactExtractorCreator.cs",
          "path": "HoneydewExtractors/Core/IFactExtractorCreator.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.IFactExtractorCreator",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Extraction"
                  ],
                  "attributes": [],
                  "usedClasses": ["string"],
                  "methods": [
                    {
                      "name": "Create#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IDesignFlawMetric.cs",
          "path": "HoneydewExtractors/Core/Metrics/IDesignFlawMetric.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.IDesignFlawMetric",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IMetric.cs",
          "path": "HoneydewExtractors/Core/Metrics/IMetric.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.IMetric",
                  "type": "interface",
                  "usingStatements": ["HoneydewModels"],
                  "attributes": [],
                  "usedClasses": ["string"],
                  "methods": [
                    {
                      "name": "GetMetric#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "PrettyPrint#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IAccessedFieldsVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/AccessedFields/IAccessedFieldsVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.AccessedFields",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.AccessedFields.IAccessedFieldsVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpAccessedFieldsVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/AccessedFields/ICSharpAccessedFieldsVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.AccessedFields",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.AccessedFields.ICSharpAccessedFieldsVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.Types.AccessedField",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IAttributeVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Attributes/IAttributeVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Attributes.IAttributeVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpAttributeVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Attributes/ICSharpAttributeVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Attributes.ICSharpAttributeVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IClassVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Classes/IClassVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes.IClassVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpClassVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Classes/ICSharpClassVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes.ICSharpClassVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.ICSharpExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpDelegateVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Classes/ICSharpDelegateVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes.ICSharpDelegateVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpEnumLabelVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Classes/ICSharpEnumLabelVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes.ICSharpEnumLabelVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.ICSharpExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpEnumVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Classes/ICSharpEnumVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes.ICSharpEnumVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.ICSharpExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IDelegateVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Classes/IDelegateVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes.IDelegateVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IEnumLabelVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Classes/IEnumLabelVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes.IEnumLabelVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICompilationMaker.cs",
          "path": "HoneydewExtractors/Core/ICompilationMaker.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.ICompilationMaker",
                  "type": "interface",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "Microsoft.CodeAnalysis"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.Compilation",
                    "Microsoft.CodeAnalysis.MetadataReference",
                    "System.Collections.Generic.IEnumerable"
                  ],
                  "methods": [
                    {
                      "name": "GetCompilation#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "FindTrustedReferences#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IEnumVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Classes/IEnumVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes.IEnumVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IVisualBasicDelegateVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Classes/IVisualBasicDelegateVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes.IVisualBasicDelegateVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICompilationUnitVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/CompilationUnit/ICompilationUnitVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit.ICompilationUnitVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IVisualBasicClassVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Classes/IVisualBasicClassVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Classes.IVisualBasicClassVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IVisualBasicCompilationUnitVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/CompilationUnit/IVisualBasicCompilationUnitVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit.IVisualBasicCompilationUnitVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.VisualBasic"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IFactExtractor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Extraction/IFactExtractor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Extraction",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Extraction.IFactExtractor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpCompilationUnitVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/CompilationUnit/ICSharpCompilationUnitVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit.ICSharpCompilationUnitVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.ICSharpExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IConstructorVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Constructors/IConstructorVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Constructors.IConstructorVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IComplexityMetric.cs",
          "path": "HoneydewExtractors/Core/Metrics/IComplexityMetric.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.IComplexityMetric<in TRepositoryModel>",
                  "type": "interface",
                  "usingStatements": ["HoneydewModels"],
                  "attributes": [],
                  "usedClasses": ["TRepositoryModel", "void"],
                  "methods": [
                    {
                      "name": "Calculate#TRepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CompositeVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "System.Collections.Generic.ISet",
                    "object",
                    "void",
                    "System.Collections.Generic.IEnumerable"
                  ],
                  "methods": [
                    {
                      "name": "Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests@RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests#",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests@RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests#",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsForImports.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsForImports@RepositoryModelToReferenceRepositoryModelProcessorTestsForImports#",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@CSharpReturnValueRelationMetricTests#",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@CSharpParameterRelationMetricTests#",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@CSharpPropertiesRelationMetricTests#",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@CSharpFieldsRelationVisitorTests#",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@CSharpLocalVariablesRelationVisitorTests#",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests@GetFunction_ShouldReturnReferenceSolutionModelWithMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithPrimitiveTypesAsParameters_UsingCSharpClassFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/ConstructorAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.ConstructorAccessedFieldsTests@ConstructorAccessedFieldsTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@CSharpClassFactExtractorLinesOfCodeTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/LocalFunctionsAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.LocalFunctionsAccessedFieldsTests@LocalFunctionsAccessedFieldsTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/PropertyAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.PropertyAccessedFieldsTests@PropertyAccessedFieldsTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Attributes/CSharpAttributeForGenericTypesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Attributes.CSharpAttributeForGenericTypesTests@CSharpAttributeForGenericTypesTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@CSharpBaseClassMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassInfoTests@CSharpClassInfoTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@CSharpClassAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@CSharpClassFactExtractorDelegateTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@MethodAccessedFieldsTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@CSharpCyclomaticComplexityTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@CSharpExceptionsThrownRelationMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@CSharpFieldsInfoMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@GotoStatementVisitorTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpFileScopedNamespaceTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpFileScopedNamespaceTests@CSharpFileScopedNamespaceTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@CSharpObjectCreationRelationMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@CSharpGenericClassTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@CSharpCalledMethodsTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@CSharpConstructorLocalVariablesTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@CSharpCompilationUnitImportsMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@CSharpConstructorParametersAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@CSharpDelegateAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@CSharpConstructorAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@CSharpGenericDelegateTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumAttributesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumAttributesTests@CSharpEnumAttributesTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@CSharpClassImportsMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@CSharpMethodInfoMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpGenericFieldTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpGenericFieldTests@CSharpGenericFieldTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@CSharpFieldAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@CSharpLocalVariablesTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@CSharpMethodAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@CSharpConstructorInfoTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@CSharpClassFactExtractorsTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodReturnValueAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodReturnValueAttributeMetricTests@CSharpMethodReturnValueAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@CSharpGenericMethodTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumInfoTests@CSharpEnumInfoTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@CSharpMethodParametersAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@CSharpPropertyAccessorMethodLocalVariablesTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpGenericPropertyTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpGenericPropertyTests@CSharpGenericPropertyTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@CSharpPropertyAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@CSharpMethodLocalVariablesTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@LocalFunctionsExtractionTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@CSharpPropertyInfoTests#",
                        "Honeydew/VisitorLoaderHelper.cs->Honeydew.VisitorLoaderHelper@LoadVisitors#HoneydewCore.Logging.ILogger"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.ISet@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor"
                      ]
                    },
                    {
                      "name": "GetContainedVisitors#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/ConstructorSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.ConstructorSetterClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/MethodSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.MethodSetterClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/FieldSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.FieldSetterClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/PropertySetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.PropertySetterClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/DestructorSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.DestructorSetterClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributes#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithAttributes,string",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributesFromMethod#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CompilationUnit/ClassSetterCompilationUnitVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit.ClassSetterCompilationUnitVisitor@Visit#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICompilationUnitType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@SetMethodCalls#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICallingMethodsType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CompilationUnit/EnumSetterCompilationUnitVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit.EnumSetterCompilationUnitVisitor@Visit#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICompilationUnitType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ParameterSetterVisitor@ExtractParameterInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodSignatureType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CompilationUnit/DelegateSetterCompilationUnitVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit.DelegateSetterCompilationUnitVisitor@Visit#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICompilationUnitType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@SetAccessedFields#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IContainedTypeWithAccessedFields",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LocalVariablesTypeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LocalVariablesTypeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor@SetLocalVariables#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalVariables",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GenericParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GenericParameterSetterVisitor@ExtractParameterInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithGenericParameters",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Enum/EnumLabelsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Enum.EnumLabelsSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Property/MethodAccessorSetterPropertyVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Property.MethodAccessorSetterPropertyVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IPropertyType",
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor@SetLocalFunctionInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalFunctions",
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctions/LocalFunctionInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions.LocalFunctionInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions"
                      ],
                      "calledMethods": []
                    },
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests@RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests#",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests@RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests#",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsForImports.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsForImports@RepositoryModelToReferenceRepositoryModelProcessorTestsForImports#",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@CSharpReturnValueRelationMetricTests#",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@CSharpParameterRelationMetricTests#",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@CSharpPropertiesRelationMetricTests#",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@CSharpFieldsRelationVisitorTests#",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@CSharpLocalVariablesRelationVisitorTests#",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests@GetFunction_ShouldReturnReferenceSolutionModelWithMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithPrimitiveTypesAsParameters_UsingCSharpClassFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/ConstructorAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.ConstructorAccessedFieldsTests@ConstructorAccessedFieldsTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@CSharpClassFactExtractorLinesOfCodeTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/LocalFunctionsAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.LocalFunctionsAccessedFieldsTests@LocalFunctionsAccessedFieldsTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/PropertyAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.PropertyAccessedFieldsTests@PropertyAccessedFieldsTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Attributes/CSharpAttributeForGenericTypesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Attributes.CSharpAttributeForGenericTypesTests@CSharpAttributeForGenericTypesTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@CSharpBaseClassMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassInfoTests@CSharpClassInfoTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@CSharpClassAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@CSharpClassFactExtractorDelegateTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@MethodAccessedFieldsTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@CSharpCyclomaticComplexityTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@CSharpExceptionsThrownRelationMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@CSharpFieldsInfoMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@GotoStatementVisitorTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpFileScopedNamespaceTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpFileScopedNamespaceTests@CSharpFileScopedNamespaceTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@CSharpObjectCreationRelationMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@CSharpGenericClassTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@CSharpCalledMethodsTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@CSharpConstructorLocalVariablesTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@CSharpCompilationUnitImportsMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@CSharpConstructorParametersAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@CSharpDelegateAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@CSharpConstructorAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@CSharpGenericDelegateTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumAttributesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumAttributesTests@CSharpEnumAttributesTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@CSharpClassImportsMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@CSharpMethodInfoMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpGenericFieldTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpGenericFieldTests@CSharpGenericFieldTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@CSharpFieldAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@CSharpLocalVariablesTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@CSharpMethodAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@CSharpConstructorInfoTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@CSharpClassFactExtractorsTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodReturnValueAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodReturnValueAttributeMetricTests@CSharpMethodReturnValueAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@CSharpGenericMethodTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumInfoTests@CSharpEnumInfoTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@CSharpMethodParametersAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@CSharpPropertyAccessorMethodLocalVariablesTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpGenericPropertyTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpGenericPropertyTests@CSharpGenericPropertyTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@CSharpPropertyAttributeMetricTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@CSharpMethodLocalVariablesTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@LocalFunctionsExtractionTests#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@CSharpPropertyInfoTests#",
                        "Honeydew/VisitorLoaderHelper.cs->Honeydew.VisitorLoaderHelper@LoadVisitors#HoneydewCore.Logging.ILogger"
                      ],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.Metrics.Visitors.IVisitor@Visit#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor"
                      ]
                    },
                    {
                      "name": "CompositeVisitor#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["protected"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/ConstructorSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.ConstructorSetterClassVisitor@ConstructorSetterClassVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Constructors.IConstructorVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/MethodSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.MethodSetterClassVisitor@MethodSetterClassVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Methods.IMethodVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/FieldSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.FieldSetterClassVisitor@FieldSetterClassVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Fields.IFieldVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/PropertySetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.PropertySetterClassVisitor@PropertySetterClassVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Properties.IPropertyVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/DestructorSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.DestructorSetterClassVisitor@DestructorSetterClassVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Destructors.IDestructorVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@AttributeSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Attributes.IAttributeVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CompilationUnit/ClassSetterCompilationUnitVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit.ClassSetterCompilationUnitVisitor@ClassSetterCompilationUnitVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Classes.IClassVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@CalledMethodSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.MethodCalls.IMethodCallVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CompilationUnit/EnumSetterCompilationUnitVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit.EnumSetterCompilationUnitVisitor@EnumSetterCompilationUnitVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Classes.IEnumVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ParameterSetterVisitor@ParameterSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Parameters.IParameterVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CompilationUnit/DelegateSetterCompilationUnitVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit.DelegateSetterCompilationUnitVisitor@DelegateSetterCompilationUnitVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Classes.IDelegateVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@AccessedFieldsSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.AccessedFields.IAccessedFieldsVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LocalVariablesTypeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor@LocalVariablesTypeSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.LocalVariables.ILocalVariablesVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GenericParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GenericParameterSetterVisitor@GenericParameterSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Parameters.IGenericParameterVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Enum/EnumLabelsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Enum.EnumLabelsSetterVisitor@EnumLabelsSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Classes.IEnumLabelVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Property/MethodAccessorSetterPropertyVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Property.MethodAccessorSetterPropertyVisitor@MethodAccessorSetterPropertyVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Methods.IMethodVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor@LocalFunctionsSetterClassVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Methods.ILocalFunctionVisitor>",
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctions/LocalFunctionInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions.LocalFunctionInfoVisitor@LocalFunctionInfoVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Methods.ILocalFunctionVisitor>"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.ISet@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor"
                      ]
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExtractionException.cs",
          "path": "HoneydewExtractors/Core/ExtractionException.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.ExtractionException",
                  "type": "Class",
                  "usingStatements": ["System"],
                  "attributes": [],
                  "usedClasses": ["System.Exception"],
                  "methods": [
                    {
                      "name": "ExtractionException#string",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": ["->System.Exception@Exception#string"]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "FactExtractorCreator.cs",
          "path": "HoneydewExtractors/Core/FactExtractorCreator.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.FactExtractorCreator",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Extraction",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.CSharp.Metrics"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "object",
                    "string"
                  ],
                  "methods": [
                    {
                      "name": "Create#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "FactExtractorCreator#HoneydewExtractors.Core.Metrics.Visitors.ICompositeVisitor",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ILinesOfCodeCounter.cs",
          "path": "HoneydewExtractors/Core/Metrics/Extraction/ILinesOfCodeCounter.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Extraction",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Extraction.ILinesOfCodeCounter",
                  "type": "interface",
                  "usingStatements": ["HoneydewModels"],
                  "attributes": [],
                  "usedClasses": ["string", "HoneydewModels.LinesOfCode"],
                  "methods": [
                    {
                      "name": "Count#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IVisualBasicConstructorVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Constructors/IVisualBasicConstructorVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Constructors.IVisualBasicConstructorVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IDestructorVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Destructors/IDestructorVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Destructors.IDestructorVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpDestructorVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Destructors/ICSharpDestructorVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Destructors.ICSharpDestructorVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpFieldVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Fields/ICSharpFieldVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Fields",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Fields.ICSharpFieldVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "System.Collections.Generic.IList",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IFieldVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Fields/IFieldVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Fields",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Fields.IFieldVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IModelVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/IModelVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.IModelVisitor<in TType>",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["TType", "void"],
                  "methods": [
                    {
                      "name": "Visit#TType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ICompositeVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/ICompositeVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.ICompositeVisitor",
                  "type": "interface",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": [
                    "void",
                    "System.Collections.Generic.IEnumerable"
                  ],
                  "methods": [
                    {
                      "name": "Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "GetContainedVisitors#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IVisualBasicFieldVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Fields/IVisualBasicFieldVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Fields",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Fields.IVisualBasicFieldVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ITypeVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/ITypeVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["void"],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IRequireLoggingVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/IRequireLoggingVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.IRequireLoggingVisitor",
                  "type": "interface",
                  "usingStatements": ["HoneydewCore.Logging"],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/IVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["void"],
                  "methods": [
                    {
                      "name": "Visit#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpLocalVariablesVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/LocalVariables/ICSharpLocalVariablesVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.LocalVariables",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.LocalVariables.ICSharpLocalVariablesVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IExtractionVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/IExtractionVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor<in TSyntaxNode, in TSemanticModel, TModelType>",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "TSyntaxNode",
                    "TSemanticModel",
                    "TModelType"
                  ],
                  "methods": [
                    {
                      "name": "Visit#TSyntaxNode,TSemanticModel,TModelType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpConstructorVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Constructors/ICSharpConstructorVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Constructors.ICSharpConstructorVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ILocalVariablesVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/LocalVariables/ILocalVariablesVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.LocalVariables",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.LocalVariables.ILocalVariablesVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IMethodCallVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/MethodCalls/IMethodCallVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls.IMethodCallVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpMethodCallVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/MethodCalls/ICSharpMethodCallVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls.ICSharpMethodCallVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IVisualBasicMethodCallVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/MethodCalls/IVisualBasicMethodCallVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls.IVisualBasicMethodCallVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ILocalFunctionVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Methods/ILocalFunctionVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Methods",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Methods.ILocalFunctionVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpMethodVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Methods/ICSharpMethodVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Methods",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Methods.ICSharpMethodVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpMethodAccessorVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Methods/ICSharpMethodAccessorVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Methods",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Methods.ICSharpMethodAccessorVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IVisualBasicModuleVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Modules/IVisualBasicModuleVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Modules",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Modules.IVisualBasicModuleVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IVisualBasicMethodVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Methods/IVisualBasicMethodVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Methods",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Methods.IVisualBasicMethodVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "LoggerSetterVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/LoggerSetterVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.LoggerSetterVisitor",
                  "type": "Class",
                  "usingStatements": ["HoneydewCore.Logging"],
                  "attributes": [],
                  "usedClasses": ["object", "void"],
                  "methods": [
                    {
                      "name": "Visit#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    },
                    {
                      "name": "LoggerSetterVisitor#HoneydewCore.Logging.ILogger",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpGenericParameterVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Parameters/ICSharpGenericParameterVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Parameters.ICSharpGenericParameterVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IGenericParameterVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Parameters/IGenericParameterVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Parameters.IGenericParameterVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpParameterVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Parameters/ICSharpParameterVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Parameters.ICSharpParameterVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IParameterVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Parameters/IParameterVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Parameters.IParameterVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IPropertyVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Properties/IPropertyVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Properties",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Properties.IPropertyVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpPropertyVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Properties/ICSharpPropertyVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Properties",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Properties.ICSharpPropertyVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IVisualBasicPropertyVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Properties/IVisualBasicPropertyVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Properties",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Properties.IVisualBasicPropertyVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpExtractionVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/ICSharpExtractionVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.ICSharpExtractionVisitor<in TSyntaxNode, in TSemanticNode, TType>",
                  "type": "interface",
                  "usingStatements": ["Microsoft.CodeAnalysis.CSharp"],
                  "attributes": [],
                  "usedClasses": [
                    "TSyntaxNode",
                    "TSemanticNode",
                    "TType",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "IModuleVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Modules/IModuleVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Modules",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Modules.IModuleVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpNOCMetric.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Complexity/CSharpNOCMetric.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Complexity",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Complexity.CSharpNocMetric",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics",
                    "HoneydewModels",
                    "HoneydewModels.CSharp"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "int",
                    "object",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewExtractors.Core.Metrics.IComplexityMetric",
                    "void",
                    "HoneydewModels.CSharp.ProjectModel",
                    "System.Collections.Generic.IList",
                    "string"
                  ],
                  "methods": [
                    {
                      "name": "Calculate#HoneydewModels.CSharp.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "GetMetric#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "PrettyPrint#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpNomMetric.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Complexity/CSharpNomMetric.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Complexity",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Complexity.CSharpNomMetric",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics",
                    "HoneydewModels",
                    "HoneydewModels.CSharp"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "int",
                    "object",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewExtractors.Core.Metrics.IComplexityMetric",
                    "void",
                    "HoneydewModels.CSharp.ProjectModel",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.CSharp.ClassModel",
                    "string"
                  ],
                  "methods": [
                    {
                      "name": "Calculate#HoneydewModels.CSharp.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "GetMetric#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "PrettyPrint#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpNOPMetric.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Complexity/CSharpNOPMetric.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Complexity",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Complexity.CSharpNopMetric",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics",
                    "HoneydewModels",
                    "HoneydewModels.CSharp"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "int",
                    "object",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewExtractors.Core.Metrics.IComplexityMetric",
                    "void",
                    "HoneydewModels.CSharp.ProjectModel",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.CSharp.NamespaceModel",
                    "string"
                  ],
                  "methods": [
                    {
                      "name": "Calculate#HoneydewModels.CSharp.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "GetMetric#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "PrettyPrint#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IMethodVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Methods/IMethodVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Methods",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Methods.IMethodVisitor",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpArrowExpressionMethodVisitor.cs",
          "path": "HoneydewExtractors/Core/Metrics/Visitors/Methods/ICSharpArrowExpressionMethodVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Visitors.Methods",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Visitors.Methods.ICSharpArrowExpressionMethodVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "LinesOfCodeCounter.cs",
          "path": "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.Core.Metrics.Extraction",
              "classes": [
                {
                  "name": "HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter",
                  "type": "Class",
                  "usingStatements": ["System", "HoneydewModels"],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "HoneydewModels.LinesOfCode",
                    "int",
                    "string[]",
                    "bool"
                  ],
                  "methods": [
                    {
                      "name": "Count#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LinesOfCodeVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LinesOfCodeVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IPropertyType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LinesOfCodeVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LinesOfCodeVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LinesOfCodeVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LinesOfCodeVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LinesOfCodeVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LinesOfCodeVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LinesOfCodeVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LinesOfCodeVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LinesOfCodeVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LinesOfCodeVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LinesOfCodeVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LinesOfCodeVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LinesOfCodeVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LinesOfCodeVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LinesOfCodeVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LinesOfCodeVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LinesOfCodeVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LinesOfCodeVisitor@Visit#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICompilationUnitType"
                      ],
                      "calledMethods": [
                        "->string@Split#string,System.StringSplitOptions",
                        "->string@Trim#",
                        "->string@IndexOf#string,System.StringComparison",
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@IsLineEmpty#string",
                        "->string@Remove#int,int"
                      ]
                    },
                    {
                      "name": "IsLineEmpty#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@Count#string"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrWhiteSpace#string",
                        "->string@Trim#"
                      ]
                    },
                    {
                      "name": "LinesOfCodeCounter#string,string,string",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["protected"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpLinesOfCodeCounter.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpLinesOfCodeCounter@CSharpLinesOfCodeCounter#"
                      ],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpSyntacticModelCreator.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "string",
                    "Microsoft.CodeAnalysis.SyntaxTree"
                  ],
                  "methods": [
                    {
                      "name": "Create#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/CSharpRepositoryLoader.cs->HoneydewExtractors.CSharp.RepositoryLoading.CSharpRepositoryLoader@Load#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests@GetFunction_ShouldReturnReferenceSolutionModelWithExtensionMethodType_WhenGivenClassWithExtensionMethod#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests@GetFunction_ShouldReturnReferenceSolutionModelWithDestructorMethodType_WhenGivenClassWithDestructor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests@LoadPartialClassesInRepositoryModel#string,string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsForImports.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsForImports@GetFunction_ShouldReturnImportNamespaceReference_WhenGivenClassWithImports#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveVoidReturnValues_WhenClassHasMethodsThatReturnVoid#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHavePrimitiveReturnValues_WhenClassHasMethodsThatReturnPrimitiveValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHavePrimitiveReturnValues_WhenInterfaceHasMethodsWithPrimitiveReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveDependenciesReturnValues_WhenInterfaceHasMethodsWithDependenciesReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveDependenciesReturnValues_WhenClassHasMethodsWithDependenciesReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveNoParameters_WhenClassHasMethodsWithNoParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveNoParameters_WhenClassHasConstructorWithNoParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHavePrimitiveParameters_WhenClassHasMethodsWithPrimitiveParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHavePrimitiveParameters_WhenInterfaceHasMethodsWithPrimitiveParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenInterfaceHasMethodsWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenClassHasMethodsWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenClassHasConstructorWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHavePrimitiveProperties_WhenClassHasPropertiesOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHavePrimitiveProperties_WhenClassHasEventPropertiesOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHaveDependenciesProperties_WhenClassHasProperties#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHaveDependenciesEventProperties_WhenClassHasEventProperties#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHavePrimitiveFields_WhenClassHasFieldsOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHavePrimitiveFields_WhenClassHasEventFieldsOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHaveDependenciesFields_WhenClassHasFields#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHaveDependenciesEventFields_WhenClassHasEventFields#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoLocalVariables_WhenClassHasMethodsThatDontUseLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHavePrimitiveLocalValues_WhenClassHasMethodsThatHaveLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoPrimitiveLocalVariables_WhenGivenAnInterface#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoDependencies_WhenGivenAnInterface#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasMethodsWithNonPrimitiveLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasConstructorLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasMethodsWithNonPrimitiveLocalVariablesInAForLoop#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenNamespaceHasMultipleClasses#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests@GetFunction_ShouldReturnReferenceSolutionModelWithMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithPrimitiveTypesAsParameters_UsingCSharpClassFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithPrimitiveTypesAsParameters_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithNumericValesAsParameters_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllClassReferences_WhenGivenASolutionModelWithClassHierarchy_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesWithClassHierarchyAsParameter_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@Process_ShouldHaveLocalFunctionReferences_WhenGivenMethodWithDeepNestedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/ConstructorAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.ConstructorAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenConstructorThatAccessesFieldsAndPropertiesFromInsideTheClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/ConstructorAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.ConstructorAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenStaticConstructorThatAccessesFieldsAndPropertiesFromInsideTheClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithClassWithMethodsAndProperties#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithClassAndDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithDelegateOnOneLine#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithDelegateOnMultipleLines#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenMethodWithLocalFunction#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenGivenPropertyWithGetAccessor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenGivenEventPropertyWithGetAccessor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/LocalFunctionsAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.LocalFunctionsAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenPropertyAccessorThatAccessesFieldsAndPropertiesFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/PropertyAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.PropertyAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenPropertyAccessorThatAccessesFieldsAndPropertiesFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/PropertyAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.PropertyAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenPropertyArrowSyntaxThatAccessesFieldsAndPropertiesFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Attributes/CSharpAttributeForGenericTypesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Attributes.CSharpAttributeForGenericTypesTests@Extract_ShouldHaveAttributesToGenericParameters_WhenProvidedWithTypesThatSupportGenericParameters#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseClassObject_WhenClassDoesNotExtendsAnyClass#string,string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseClass_WhenProvidedWithRecord#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveNoBaseClass_WhenProvidedWithInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseClassIMetric_WhenClassExtendsIMetricInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseObjectAndNoInterfaces_WhenClassOnlyExtendsOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseObjectAndInterfaces_WhenClassExtendsOtherClassAndImplementsMultipleInterfaces#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassInfoTests@Extract_ShouldHaveMethods_WhenProvidedWithInterfaceWithImplementedMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassInfoTests@Extract_ShouldHaveBaseObjectAndInterfaces_WhenClassExtendsOtherClassAndImplementsMultipleInterfaces#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesWithPrimitiveTypes#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesWithOtherClasses#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesWithParametersWithModifiers#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesInInnerClasses#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenMethodThatAccessesFieldsAndPropertiesFromInsideTheClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenMethodThatAccessesFieldsAndPropertiesFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenMethodThatAccessesFieldsAndPropertiesFromExternClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldNotHaveAccessedFields_WhenGivenArrayAccessor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenFieldsFromBaseClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldHave1CyclomaticComplexity_WhenGivenClassWithMethodsAndPropertiesAndDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromWhiles_WhenGivenClassWithMethodsAndPropertiesAndDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromIfs_WhenGivenClassWithMethodsAndProperties#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromFors_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromUnaryExpression_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromComplexBinaryExpression_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromComplexBinaryExpressionWithIsAndOr_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromDoWhile_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromForeach_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromSwitch_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromPatternSwitchWithOperators_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromReturnSwitchWithStrings_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromPatternSwitchWithClassHierarchy_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityForConditionalOperators_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveNoExceptionsThrown_WhenProvidedWithClassThatDoesntThrowExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveSystemExceptionsThrown_WhenProvidedWithClassThatThrowsSystemExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatThrowsCustomExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatRethrowsExplicitExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatRethrowsImplicitExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatTrowsExceptionsUsingVariablesParametersFieldsPropertiesAndMethodCalls#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExternalExceptionsThrown_WhenProvidedWithClassThatTrowsExternalExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithConditionalOperatorWithThrowException#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithNullCoalescingOperatorWithThrowException#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithLambdaThathrowsException#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHaveNoFields_WhenGivenAnInterface#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHavePrivateFieldsWithModifiers_WhenGivenClassWithFieldsAndModifiersWithDefaultAccess#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyFieldsAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyEventFieldsAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHaveFieldsWithNoModifiers_WhenGivenClassWithFieldsAndTheirVisibilityAndMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedConstructor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedDestructor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedMethod#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedPropertyAccessors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedMethodWithLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpFileScopedNamespaceTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpFileScopedNamespaceTests@Extract_ShouldHaveClassType_WhenGivenFileScopedNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveObjectCreation_WhenProvidedWithClassInTheSameNamespace#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveOArrayCreation_WhenProvidedWithClassInTheSameNamespace#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveObjectCreation_WhenProvidedWithClassUnknownClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithClassUnknownClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithClassPrimitiveTypes#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithClassPrimitiveTypesInUnknownClassMethod#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithArrayCreationOfLocalVariablesPropertiesFieldsAndMethodCallsInUnknownClassMethod#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithClassInSameNamespaceUsedWithUnknownClassMethod#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveClassNameOfGenericType_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveClassNameGenericTypeWithMultipleContainedTypes_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveOneBaseGenericType_WhenProvidedWitClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveOneBaseGenericType_WhenProvidedWitStruct#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveOneBaseGenericType_WhenProvidedWithRecord#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveOneBaseGenericType_WhenProvidedWithInterface#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveMultipleBaseGenericTypes_WhenProvidedWithClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveMultipleBaseConcreteGenericTypes_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveGenericModifiers_WhenProvidedWithGenericInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveGenericTypesWithPredefinedConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveGenericTypesWithMultipleConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorThatCallsOtherMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsMethodsFromAFieldOfADifferentClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsStaticMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsStaticMethodsFromUnknownClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsFuncLambdas#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsActionLambdas#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallMethodsInsideLambdas#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallHasCalledMethodsChained#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsLinqMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsMethodsFromDictionaryOfACastedObject#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsMethodsFromAnotherClassAsProperty#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedWithGenericMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveNoCalledMethods_WhenProvidedWithTypeofSyntax#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldExtractNameof_WhenProvidedWithNameofSyntax#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenGivenMethodWithAwaitStatement#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithPrimitiveTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithCustomClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithExternClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithArrayLocalVariable#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenOneClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenCompilationUnitText#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesInImbricatedNamespaces#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses_ButNoNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenStaticUsings#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithSystemAttributes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveDelegateNameOfGenericType_WhenProvidedWithGenericDelegate#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveDelegateNameGenericTypeWithMultipleContainedTypes_WhenProvidedWithGenericDelegate#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveGenericModifiers_WhenProvidedWithGenericDelegate#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveGenericTypesWithPredefinedConstrains_WhenProvidedWithDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveGenericTypesWithMultipleConstrains_WhenProvidedWithDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumAttributesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumAttributesTests@Extract_ShouldExtractAttribute_GivenEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumAttributesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumAttributesTests@Extract_ShouldExtractLabelAttributes_GivenEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenOneClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenOneDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesWithTheSameUsings#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesInMultipleNamespacesWithSharedUsings#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesInImbricatedNamespaces#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses_ButNoNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenText#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenStaticUsings#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveNoMethods_WhenGivenClassAndRecordsWithFieldsOnly#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveMethods_WhenGivenAClassHierarchy#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveMethodsWithMethodCalls_WhenGivenMethodsThatCallOtherMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveMethodsWithMethodCalls_WhenGivenMethodsThatCallStaticMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveMethodsWithMethodCallsWithParameterModifiers_WhenGivenMethodsThatCallOtherMethodsWithParameterModifiers#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldExtractNullDefaultValue#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveDefinitionClassNameAndLocationClassName_GivenClassHierarchy#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveNoMethodDefinitionNames_GivenExternClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpGenericFieldTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpGenericFieldTests@Extract_ShouldHaveFieldOfGenericType_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpGenericFieldTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpGenericFieldTests@Extract_ShouldHaveFieldOfGenericTypeWithMultipleContainedTypes_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefModifier_WhenGivenMethodWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefReadonlyModifier_WhenGivenMethodWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefModifier_WhenGivenConstructorWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefReadonlyModifier_WhenGivenConstructorWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefModifier_WhenGivenPropertyWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefReadonlyModifier_WhenGivenPropertyWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveNullableVariables_WhenEntitiesWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveNullableVariables_WhenEntitiesWithLocalVariablesOfClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldExtractStaticConstructor_WhenProvidedWithDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructors#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorsThatCallEachOther#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorsThatCallEachOtherAndBaseConstructor#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorsThatCallsBaseConstructor_ButBaseClassIsNotPresentInCompilationUnit#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldThrowEmptyContentException_WhenTryingToExtractFromEmptyString#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldThrowExtractionException_WhenParsingTextWithParsingErrors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetClassNameAndNamespace_WhenParsingTextWithOneEntity#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetClassModifiers_WhenParsingTextWithOneEntity#string,string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithMethodWithParameterWithModifiers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithExtensionMethod#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithMethodWithParameterWithParamsModifiers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithMethodWithParameterWithDefaultValues#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldNotHaveMetrics_WhenGivenAnEmptyListOfMetrics_ForOneClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetClassNameAndInterfaceAndNamespace_WhenParsingTextWithOneClassAndOneInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveNoFields_WhenGivenAnInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHavePrivateFieldsWithModifiers_WhenGivenClassWithFieldsAndModifiersWithDefaultAccess#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyFieldsAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyEventFieldsAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveFieldsWithNoModifiers_WhenGivenClassWithFieldsAndTheirVisibilityAndMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveNoMethods_WhenGivenClassTypeWithNoMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveMethods_WhenGivenAnInterfaceWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveMethods_WhenGivenAClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveReadonlyStructs_WhenGivenPathToAFileWithReadonlyStructs#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveReadonlyStructMembers_WhenGivenPathToAFileWithMutableStructWithReadonlyMembers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveReadonlyStaticStructMembers_WhenGivenPathToAFileWithStructWithStaticReadonlyMembers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveRefStructs_WhenGivenPathToAFileWithRefStructs#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveRefReturnMethod_WhenGivenPathToAFileWithRefStructs#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveNullableEntities_WhenProvidedWithClassWithNullableEntities#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveNullableEntities_WhenProvidedWithClassWithNullableClassEntities#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveContainingClassNames_GivenNestedClasses#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodReturnValueAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodReturnValueAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodReturnValueAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodReturnValueAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodReturnValueAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodReturnValueAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericMethod_WhenProvidedDifferentNonGenericClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericMethodWithMultipleGenericParams_WhenProvidedDifferentNonGenericClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericTypesWithPredefinedConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericTypesWithMultipleConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveLocalFunctionGenericMethodWithConstraints_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericLocalMethodWithMultipleConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumInfoTests@Extract_ShouldBasicInfo_WhenProvidedWithEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumInfoTests@Extract_ShouldHaveOtherType_WhenProvidedWithEnumWithOtherType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumInfoTests@Extract_ShouldContainingClass_WhenProvidedWithEnumInInnerClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithSystemAttributes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithPrimitiveTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithCustomClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithExternClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithArrayLocalVariable#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpGenericPropertyTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpGenericPropertyTests@Extract_ShouldHavePropertyOfGenericType_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpGenericPropertyTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpGenericPropertyTests@Extract_ShouldHavePropertyOfGenericTypeWithMultipleContainedTypes_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpGenericPropertyTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpGenericPropertyTests@Extract_ShouldHavePropertyOfGenericTypeWithMultipleNullableContainedTypes_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithPropertyAccessors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithPropertyAccessorsForReturnValue#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithPrimitiveTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithCustomClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithTypeofSyntax#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithNameofSyntax#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithExternClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithArrayLocalVariable#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionWithArrayLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalVariablesFromIfAndSwitch#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionsWithLocalVariablesFromIfAndSwitch#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalVariablesFromForeach#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionsWithLocalVariablesFromForeach#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveLocalVariablesDependencies_WhenGivenPropertyFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveNoLocalVariablesDependencies_WhenGivenUnknownClassMembers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveLocalVariableDependencies_WhenGivenMethodWithAwaitStatement#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveLocalVariableDependencies_WhenGivenMethodWithAwaitStatementWithUnknownClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveLocalVariableDependencies_WhenGivenMethodWithAwaitStatementWithUnknownGenericClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunction_WhenGivenMethodWithOneLocalFunctionThatReturnsVoidAndHasNoParameters#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunction_WhenGivenLocalFunctionWithReturnValueAndParameters#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractMultipleLocalFunctions_WhenGivenLocalFunctionsWithModifiers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionCyclomaticComplexity_WhenGivenLocalFunctionWithHighCyclomaticComplexity#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunction_WhenGivenMethodPropertyConstructorWithLocalFunction#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionAndUsages_WhenGivenMethodWithMultipleLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctions_WhenGivenMethodWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionsWithCalledMethods_WhenGivenMethodWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctions_WhenGivenPropertyWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionsWithCalledMethods_WhenGivenPropertyWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionsWithCalledMethods_WhenGivenEventPropertyWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePropertyInfo_WhenGivenTypeWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventPropertyInfo_WhenGivenTypeWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveAbstractModifier_WhenGivenPropertyInInterface#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveOnlyGetAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveOnlySetAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveOnlyInitAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveGetSetAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveGetInitAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldCalledMethods_WhenGivenPropertyWithExpressionBodiedMember#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveCyclomaticComplexity_WhenGivenClassWithProperties#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenAnInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePrivatePropertiesWithModifiers_WhenGivenClassWithPropertiesAndModifiersWithDefaultAccess#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePropertiesWithNoOtherModifiers_WhenGivenClassWithOnlyPropertiesAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePropertiesWithNoOtherModifiers_WhenGivenClassWithOnlyEventPropertiesAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePropertiesWithAccessors_WhenGivenClassWithPropertiesWithDifferentAccessors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenClassWithComputedEmptyProperties#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenClassWithComputedPropertyThatCallsInnerMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenClassWithComputedPropertyThatCallsMethodsFromOtherClassFromTheSameNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenClassWithComputedPropertyThatCallsStaticMethodsFromUnknownClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsInnerMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsMethodsFromOtherClassFromTheSameNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsStaticMethodsFromUnknownClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsMethodsFromOtherClassFromTheSameNamespaceAsProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveNoMethodDefinitionNames_GivenExternClass#string"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrWhiteSpace#string",
                        "->Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree@ParseText#string,Microsoft.CodeAnalysis.CSharp.CSharpParseOptions,string,System.Text.Encoding,System.Threading.CancellationToken"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "AccessFieldVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/AccessField/AccessFieldVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.AccessField",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.AccessField.AccessFieldVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.AccessedFields",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.Types.AccessedField"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.AccessedField",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetAccessField#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpSemanticModelCreator.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core",
                    "Microsoft.CodeAnalysis"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.Compilation"
                  ],
                  "methods": [
                    {
                      "name": "Create#Microsoft.CodeAnalysis.SyntaxTree",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/CSharpRepositoryLoader.cs->HoneydewExtractors.CSharp.RepositoryLoading.CSharpRepositoryLoader@Load#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests@GetFunction_ShouldReturnReferenceSolutionModelWithExtensionMethodType_WhenGivenClassWithExtensionMethod#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests@GetFunction_ShouldReturnReferenceSolutionModelWithDestructorMethodType_WhenGivenClassWithDestructor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests@LoadPartialClassesInRepositoryModel#string,string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsForImports.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsForImports@GetFunction_ShouldReturnImportNamespaceReference_WhenGivenClassWithImports#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveVoidReturnValues_WhenClassHasMethodsThatReturnVoid#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHavePrimitiveReturnValues_WhenClassHasMethodsThatReturnPrimitiveValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHavePrimitiveReturnValues_WhenInterfaceHasMethodsWithPrimitiveReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveDependenciesReturnValues_WhenInterfaceHasMethodsWithDependenciesReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveDependenciesReturnValues_WhenClassHasMethodsWithDependenciesReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveNoParameters_WhenClassHasMethodsWithNoParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveNoParameters_WhenClassHasConstructorWithNoParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHavePrimitiveParameters_WhenClassHasMethodsWithPrimitiveParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHavePrimitiveParameters_WhenInterfaceHasMethodsWithPrimitiveParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenInterfaceHasMethodsWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenClassHasMethodsWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenClassHasConstructorWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHavePrimitiveProperties_WhenClassHasPropertiesOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHavePrimitiveProperties_WhenClassHasEventPropertiesOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHaveDependenciesProperties_WhenClassHasProperties#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHaveDependenciesEventProperties_WhenClassHasEventProperties#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHavePrimitiveFields_WhenClassHasFieldsOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHavePrimitiveFields_WhenClassHasEventFieldsOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHaveDependenciesFields_WhenClassHasFields#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHaveDependenciesEventFields_WhenClassHasEventFields#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoLocalVariables_WhenClassHasMethodsThatDontUseLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHavePrimitiveLocalValues_WhenClassHasMethodsThatHaveLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoPrimitiveLocalVariables_WhenGivenAnInterface#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoDependencies_WhenGivenAnInterface#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasMethodsWithNonPrimitiveLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasConstructorLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasMethodsWithNonPrimitiveLocalVariablesInAForLoop#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenNamespaceHasMultipleClasses#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests@GetFunction_ShouldReturnReferenceSolutionModelWithMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithPrimitiveTypesAsParameters_UsingCSharpClassFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithPrimitiveTypesAsParameters_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithNumericValesAsParameters_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllClassReferences_WhenGivenASolutionModelWithClassHierarchy_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesWithClassHierarchyAsParameter_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@Process_ShouldHaveLocalFunctionReferences_WhenGivenMethodWithDeepNestedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/ConstructorAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.ConstructorAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenConstructorThatAccessesFieldsAndPropertiesFromInsideTheClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/ConstructorAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.ConstructorAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenStaticConstructorThatAccessesFieldsAndPropertiesFromInsideTheClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithClassWithMethodsAndProperties#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithClassAndDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithDelegateOnOneLine#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithDelegateOnMultipleLines#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenMethodWithLocalFunction#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenGivenPropertyWithGetAccessor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenGivenEventPropertyWithGetAccessor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/LocalFunctionsAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.LocalFunctionsAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenPropertyAccessorThatAccessesFieldsAndPropertiesFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/PropertyAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.PropertyAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenPropertyAccessorThatAccessesFieldsAndPropertiesFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/PropertyAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.PropertyAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenPropertyArrowSyntaxThatAccessesFieldsAndPropertiesFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Attributes/CSharpAttributeForGenericTypesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Attributes.CSharpAttributeForGenericTypesTests@Extract_ShouldHaveAttributesToGenericParameters_WhenProvidedWithTypesThatSupportGenericParameters#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseClassObject_WhenClassDoesNotExtendsAnyClass#string,string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseClass_WhenProvidedWithRecord#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveNoBaseClass_WhenProvidedWithInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseClassIMetric_WhenClassExtendsIMetricInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseObjectAndNoInterfaces_WhenClassOnlyExtendsOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseObjectAndInterfaces_WhenClassExtendsOtherClassAndImplementsMultipleInterfaces#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassInfoTests@Extract_ShouldHaveMethods_WhenProvidedWithInterfaceWithImplementedMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassInfoTests@Extract_ShouldHaveBaseObjectAndInterfaces_WhenClassExtendsOtherClassAndImplementsMultipleInterfaces#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesWithPrimitiveTypes#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesWithOtherClasses#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesWithParametersWithModifiers#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesInInnerClasses#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenMethodThatAccessesFieldsAndPropertiesFromInsideTheClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenMethodThatAccessesFieldsAndPropertiesFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenMethodThatAccessesFieldsAndPropertiesFromExternClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldNotHaveAccessedFields_WhenGivenArrayAccessor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenFieldsFromBaseClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldHave1CyclomaticComplexity_WhenGivenClassWithMethodsAndPropertiesAndDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromWhiles_WhenGivenClassWithMethodsAndPropertiesAndDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromIfs_WhenGivenClassWithMethodsAndProperties#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromFors_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromUnaryExpression_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromComplexBinaryExpression_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromComplexBinaryExpressionWithIsAndOr_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromDoWhile_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromForeach_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromSwitch_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromPatternSwitchWithOperators_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromReturnSwitchWithStrings_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromPatternSwitchWithClassHierarchy_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityForConditionalOperators_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveNoExceptionsThrown_WhenProvidedWithClassThatDoesntThrowExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveSystemExceptionsThrown_WhenProvidedWithClassThatThrowsSystemExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatThrowsCustomExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatRethrowsExplicitExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatRethrowsImplicitExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatTrowsExceptionsUsingVariablesParametersFieldsPropertiesAndMethodCalls#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExternalExceptionsThrown_WhenProvidedWithClassThatTrowsExternalExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithConditionalOperatorWithThrowException#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithNullCoalescingOperatorWithThrowException#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithLambdaThathrowsException#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHaveNoFields_WhenGivenAnInterface#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHavePrivateFieldsWithModifiers_WhenGivenClassWithFieldsAndModifiersWithDefaultAccess#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyFieldsAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyEventFieldsAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHaveFieldsWithNoModifiers_WhenGivenClassWithFieldsAndTheirVisibilityAndMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedConstructor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedDestructor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedMethod#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedPropertyAccessors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedMethodWithLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpFileScopedNamespaceTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpFileScopedNamespaceTests@Extract_ShouldHaveClassType_WhenGivenFileScopedNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveObjectCreation_WhenProvidedWithClassInTheSameNamespace#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveOArrayCreation_WhenProvidedWithClassInTheSameNamespace#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveObjectCreation_WhenProvidedWithClassUnknownClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithClassUnknownClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithClassPrimitiveTypes#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithClassPrimitiveTypesInUnknownClassMethod#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithArrayCreationOfLocalVariablesPropertiesFieldsAndMethodCallsInUnknownClassMethod#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithClassInSameNamespaceUsedWithUnknownClassMethod#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveClassNameOfGenericType_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveClassNameGenericTypeWithMultipleContainedTypes_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveOneBaseGenericType_WhenProvidedWitClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveOneBaseGenericType_WhenProvidedWitStruct#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveOneBaseGenericType_WhenProvidedWithRecord#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveOneBaseGenericType_WhenProvidedWithInterface#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveMultipleBaseGenericTypes_WhenProvidedWithClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveMultipleBaseConcreteGenericTypes_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveGenericModifiers_WhenProvidedWithGenericInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveGenericTypesWithPredefinedConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveGenericTypesWithMultipleConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorThatCallsOtherMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsMethodsFromAFieldOfADifferentClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsStaticMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsStaticMethodsFromUnknownClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsFuncLambdas#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsActionLambdas#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallMethodsInsideLambdas#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallHasCalledMethodsChained#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsLinqMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsMethodsFromDictionaryOfACastedObject#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsMethodsFromAnotherClassAsProperty#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedWithGenericMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveNoCalledMethods_WhenProvidedWithTypeofSyntax#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldExtractNameof_WhenProvidedWithNameofSyntax#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenGivenMethodWithAwaitStatement#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithPrimitiveTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithCustomClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithExternClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithArrayLocalVariable#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenOneClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenCompilationUnitText#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesInImbricatedNamespaces#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses_ButNoNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenStaticUsings#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithSystemAttributes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveDelegateNameOfGenericType_WhenProvidedWithGenericDelegate#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveDelegateNameGenericTypeWithMultipleContainedTypes_WhenProvidedWithGenericDelegate#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveGenericModifiers_WhenProvidedWithGenericDelegate#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveGenericTypesWithPredefinedConstrains_WhenProvidedWithDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveGenericTypesWithMultipleConstrains_WhenProvidedWithDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumAttributesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumAttributesTests@Extract_ShouldExtractAttribute_GivenEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumAttributesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumAttributesTests@Extract_ShouldExtractLabelAttributes_GivenEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenOneClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenOneDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesWithTheSameUsings#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesInMultipleNamespacesWithSharedUsings#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesInImbricatedNamespaces#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses_ButNoNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenText#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenStaticUsings#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveNoMethods_WhenGivenClassAndRecordsWithFieldsOnly#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveMethods_WhenGivenAClassHierarchy#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveMethodsWithMethodCalls_WhenGivenMethodsThatCallOtherMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveMethodsWithMethodCalls_WhenGivenMethodsThatCallStaticMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveMethodsWithMethodCallsWithParameterModifiers_WhenGivenMethodsThatCallOtherMethodsWithParameterModifiers#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldExtractNullDefaultValue#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveDefinitionClassNameAndLocationClassName_GivenClassHierarchy#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveNoMethodDefinitionNames_GivenExternClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpGenericFieldTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpGenericFieldTests@Extract_ShouldHaveFieldOfGenericType_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpGenericFieldTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpGenericFieldTests@Extract_ShouldHaveFieldOfGenericTypeWithMultipleContainedTypes_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefModifier_WhenGivenMethodWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefReadonlyModifier_WhenGivenMethodWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefModifier_WhenGivenConstructorWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefReadonlyModifier_WhenGivenConstructorWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefModifier_WhenGivenPropertyWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefReadonlyModifier_WhenGivenPropertyWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveNullableVariables_WhenEntitiesWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveNullableVariables_WhenEntitiesWithLocalVariablesOfClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldExtractStaticConstructor_WhenProvidedWithDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructors#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorsThatCallEachOther#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorsThatCallEachOtherAndBaseConstructor#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorsThatCallsBaseConstructor_ButBaseClassIsNotPresentInCompilationUnit#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldThrowExtractionException_WhenParsingTextWithParsingErrors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetClassNameAndNamespace_WhenParsingTextWithOneEntity#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetClassModifiers_WhenParsingTextWithOneEntity#string,string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithMethodWithParameterWithModifiers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithExtensionMethod#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithMethodWithParameterWithParamsModifiers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithMethodWithParameterWithDefaultValues#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldNotHaveMetrics_WhenGivenAnEmptyListOfMetrics_ForOneClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetClassNameAndInterfaceAndNamespace_WhenParsingTextWithOneClassAndOneInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveNoFields_WhenGivenAnInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHavePrivateFieldsWithModifiers_WhenGivenClassWithFieldsAndModifiersWithDefaultAccess#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyFieldsAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyEventFieldsAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveFieldsWithNoModifiers_WhenGivenClassWithFieldsAndTheirVisibilityAndMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveNoMethods_WhenGivenClassTypeWithNoMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveMethods_WhenGivenAnInterfaceWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveMethods_WhenGivenAClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveReadonlyStructs_WhenGivenPathToAFileWithReadonlyStructs#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveReadonlyStructMembers_WhenGivenPathToAFileWithMutableStructWithReadonlyMembers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveReadonlyStaticStructMembers_WhenGivenPathToAFileWithStructWithStaticReadonlyMembers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveRefStructs_WhenGivenPathToAFileWithRefStructs#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveRefReturnMethod_WhenGivenPathToAFileWithRefStructs#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveNullableEntities_WhenProvidedWithClassWithNullableEntities#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveNullableEntities_WhenProvidedWithClassWithNullableClassEntities#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveContainingClassNames_GivenNestedClasses#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodReturnValueAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodReturnValueAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodReturnValueAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodReturnValueAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodReturnValueAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodReturnValueAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericMethod_WhenProvidedDifferentNonGenericClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericMethodWithMultipleGenericParams_WhenProvidedDifferentNonGenericClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericTypesWithPredefinedConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericTypesWithMultipleConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveLocalFunctionGenericMethodWithConstraints_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericLocalMethodWithMultipleConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumInfoTests@Extract_ShouldBasicInfo_WhenProvidedWithEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumInfoTests@Extract_ShouldHaveOtherType_WhenProvidedWithEnumWithOtherType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumInfoTests@Extract_ShouldContainingClass_WhenProvidedWithEnumInInnerClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithSystemAttributes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithPrimitiveTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithCustomClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithExternClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithArrayLocalVariable#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpGenericPropertyTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpGenericPropertyTests@Extract_ShouldHavePropertyOfGenericType_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpGenericPropertyTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpGenericPropertyTests@Extract_ShouldHavePropertyOfGenericTypeWithMultipleContainedTypes_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpGenericPropertyTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpGenericPropertyTests@Extract_ShouldHavePropertyOfGenericTypeWithMultipleNullableContainedTypes_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithPropertyAccessors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithPropertyAccessorsForReturnValue#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithPrimitiveTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithCustomClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithTypeofSyntax#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithNameofSyntax#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithExternClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithArrayLocalVariable#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionWithArrayLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalVariablesFromIfAndSwitch#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionsWithLocalVariablesFromIfAndSwitch#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalVariablesFromForeach#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionsWithLocalVariablesFromForeach#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveLocalVariablesDependencies_WhenGivenPropertyFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveNoLocalVariablesDependencies_WhenGivenUnknownClassMembers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveLocalVariableDependencies_WhenGivenMethodWithAwaitStatement#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveLocalVariableDependencies_WhenGivenMethodWithAwaitStatementWithUnknownClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveLocalVariableDependencies_WhenGivenMethodWithAwaitStatementWithUnknownGenericClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunction_WhenGivenMethodWithOneLocalFunctionThatReturnsVoidAndHasNoParameters#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunction_WhenGivenLocalFunctionWithReturnValueAndParameters#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractMultipleLocalFunctions_WhenGivenLocalFunctionsWithModifiers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionCyclomaticComplexity_WhenGivenLocalFunctionWithHighCyclomaticComplexity#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunction_WhenGivenMethodPropertyConstructorWithLocalFunction#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionAndUsages_WhenGivenMethodWithMultipleLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctions_WhenGivenMethodWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionsWithCalledMethods_WhenGivenMethodWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctions_WhenGivenPropertyWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionsWithCalledMethods_WhenGivenPropertyWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionsWithCalledMethods_WhenGivenEventPropertyWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePropertyInfo_WhenGivenTypeWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventPropertyInfo_WhenGivenTypeWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveAbstractModifier_WhenGivenPropertyInInterface#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveOnlyGetAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveOnlySetAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveOnlyInitAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveGetSetAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveGetInitAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldCalledMethods_WhenGivenPropertyWithExpressionBodiedMember#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveCyclomaticComplexity_WhenGivenClassWithProperties#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenAnInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePrivatePropertiesWithModifiers_WhenGivenClassWithPropertiesAndModifiersWithDefaultAccess#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePropertiesWithNoOtherModifiers_WhenGivenClassWithOnlyPropertiesAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePropertiesWithNoOtherModifiers_WhenGivenClassWithOnlyEventPropertiesAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePropertiesWithAccessors_WhenGivenClassWithPropertiesWithDifferentAccessors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenClassWithComputedEmptyProperties#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenClassWithComputedPropertyThatCallsInnerMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenClassWithComputedPropertyThatCallsMethodsFromOtherClassFromTheSameNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenClassWithComputedPropertyThatCallsStaticMethodsFromUnknownClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsInnerMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsMethodsFromOtherClassFromTheSameNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsStaticMethodsFromUnknownClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsMethodsFromOtherClassFromTheSameNamespaceAsProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveNoMethodDefinitionNames_GivenExternClass#string"
                      ],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.ICompilationMaker@GetCompilation#",
                        "->Microsoft.CodeAnalysis.Compilation@AddSyntaxTrees#Microsoft.CodeAnalysis.SyntaxTree[]",
                        "->Microsoft.CodeAnalysis.Compilation@GetSemanticModel#Microsoft.CodeAnalysis.SyntaxTree,bool"
                      ]
                    },
                    {
                      "name": "CSharpSemanticModelCreator#HoneydewExtractors.Core.ICompilationMaker",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpCompilationMaker.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/CSharpCompilationMaker.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.CSharpCompilationMaker",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Linq",
                    "HoneydewExtractors.Core",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.MetadataReference",
                    "System.Collections.Generic.IEnumerable",
                    "object",
                    "Microsoft.CodeAnalysis.Compilation",
                    "Microsoft.CodeAnalysis.CSharp.CSharpCompilation",
                    "System.Collections.Generic.List",
                    "string",
                    "string[]",
                    "Microsoft.CodeAnalysis.PortableExecutableReference"
                  ],
                  "methods": [
                    {
                      "name": "GetCompilation#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpCompilationMaker.cs->HoneydewExtractors.CSharp.Metrics.CSharpCompilationMaker@FindTrustedReferences#",
                        "->Microsoft.CodeAnalysis.CSharp.CSharpCompilation@Create#string,System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.SyntaxTree>,System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.MetadataReference>,Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions"
                      ]
                    },
                    {
                      "name": "FindTrustedReferences#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpCompilationMaker.cs->HoneydewExtractors.CSharp.Metrics.CSharpCompilationMaker@GetCompilation#"
                      ],
                      "calledMethods": [
                        "->System.AppContext@GetData#string",
                        "->string@Split#string,System.StringSplitOptions",
                        "->System.Collections.Generic.IEnumerable@Select#System.Func<string, Microsoft.CodeAnalysis.PortableExecutableReference>",
                        "->string[]@Where#System.Func<string, bool>",
                        "->string@IsNullOrEmpty#string",
                        "->Microsoft.CodeAnalysis.MetadataReference@CreateFromFile#string,Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider",
                        "->System.Collections.Generic.List@Add#Microsoft.CodeAnalysis.MetadataReference"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "AttributeInfoVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Attribute/AttributeInfoVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute.AttributeInfoVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAttributeType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetAttributeTarget#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax",
                        "->string@IsNullOrEmpty#string",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IParameterType"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "BaseInfoClassVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Class/BaseInfoClassVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class.BaseInfoClassVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewCore.Utils",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@SetModifiers#string,string,string",
                        "->Microsoft.CodeAnalysis.SyntaxTokenList@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "->string@ToLower#",
                        "->string@Replace#string,string",
                        "->System.Enum@ToString#",
                        "->Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode@Kind#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetContainingNamespaceName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetContainingClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "BaseTypesClassVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Class/BaseTypesClassVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class.BaseTypesClassVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetBaseInterfaces#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IBaseType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetBaseClassName#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExceptionsThrownRelationVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ExceptionsThrownRelationVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ExceptionsThrownRelationVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax",
                    "System.Collections.Generic.Dictionary",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ExceptionsThrownRelationVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ExceptionsThrownRelationVisitor@AddDependencies#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.MetricModel",
                        "->System.Type@ToString#",
                        "->object@GetType#"
                      ]
                    },
                    {
                      "name": "AddDependencies#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ExceptionsThrownRelationVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ExceptionsThrownRelationVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType"
                      ],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<ThrowExpressionSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ExceptionsThrownRelationVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ExceptionsThrownRelationVisitor@AddDependency#System.Collections.Generic.IDictionary<string, int>,string",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Linq.Enumerable@OfType<ThrowStatementSyntax>#"
                      ]
                    },
                    {
                      "name": "AddDependency#System.Collections.Generic.IDictionary<string, int>,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ExceptionsThrownRelationVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ExceptionsThrownRelationVisitor@AddDependencies#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "->string@Trim#char",
                        "->System.Collections.Generic.IDictionary@ContainsKey#string",
                        "->System.Collections.Generic.IDictionary@Add#string,int"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ConstructorSetterClassVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Class/ConstructorSetterClassVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class.ConstructorSetterClassVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<ConstructorDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Constructors.ICSharpConstructorVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IConstructorType"
                      ]
                    },
                    {
                      "name": "ConstructorSetterClassVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Constructors.IConstructorVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MethodSetterClassVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Class/MethodSetterClassVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class.MethodSetterClassVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<MethodDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Methods.ICSharpMethodVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IMethodType"
                      ]
                    },
                    {
                      "name": "MethodSetterClassVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Methods.IMethodVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "FieldSetterClassVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Class/FieldSetterClassVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class.FieldSetterClassVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Fields",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<BaseFieldDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Fields.ICSharpFieldVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,System.Collections.Generic.IList<HoneydewModels.Types.IFieldType>",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IFieldType"
                      ]
                    },
                    {
                      "name": "FieldSetterClassVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Fields.IFieldVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "PropertySetterClassVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Class/PropertySetterClassVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class.PropertySetterClassVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<BasePropertyDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Properties.ICSharpPropertyVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IPropertyType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IPropertyType"
                      ]
                    },
                    {
                      "name": "PropertySetterClassVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Properties.IPropertyVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ObjectCreationRelationVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ObjectCreationRelationVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ObjectCreationRelationVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Utils",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax",
                    "System.Collections.Generic.Dictionary",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitObjectCreationExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax",
                    "Microsoft.CodeAnalysis.SyntaxNode"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ObjectCreationRelationVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ObjectCreationRelationVisitor@AddDependencies#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.MetricModel",
                        "->System.Type@ToString#",
                        "->object@GetType#"
                      ]
                    },
                    {
                      "name": "AddDependencies#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ObjectCreationRelationVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ObjectCreationRelationVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType"
                      ],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<ObjectCreationExpressionSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ObjectCreationRelationVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ObjectCreationRelationVisitor@AddDependency#System.Collections.Generic.IDictionary<string, int>,string",
                        "->System.Linq.Enumerable@OfType<ImplicitObjectCreationExpressionSyntax>#",
                        "->System.Linq.Enumerable@OfType<ArrayCreationExpressionSyntax>#",
                        "->System.Linq.Enumerable@OfType<ImplicitArrayCreationExpressionSyntax>#",
                        "->System.Collections.Generic.IEnumerable@Select#System.Func<Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax, Microsoft.CodeAnalysis.SyntaxNode>",
                        "->System.Collections.Generic.IEnumerable@Where#System.Func<Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax, bool>",
                        "->System.Linq.Enumerable@OfType<InitializerExpressionSyntax>#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetContainingType#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    },
                    {
                      "name": "AddDependency#System.Collections.Generic.IDictionary<string, int>,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ObjectCreationRelationVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ObjectCreationRelationVisitor@AddDependencies#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "->string@Trim#char",
                        "->System.Collections.Generic.IDictionary@ContainsKey#string",
                        "->System.Collections.Generic.IDictionary@Add#string,int"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "DestructorSetterClassVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Class/DestructorSetterClassVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Class.DestructorSetterClassVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<DestructorDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Destructors.ICSharpDestructorVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels"
                      ]
                    },
                    {
                      "name": "DestructorSetterClassVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Destructors.IDestructorVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpFactExtractor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Linq",
                    "HoneydewExtractors.Core",
                    "HoneydewExtractors.Core.Metrics.Extraction",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax",
                    "Microsoft.CodeAnalysis.Diagnostic",
                    "System.Collections.Generic.IEnumerable",
                    "Microsoft.CodeAnalysis.Diagnostic[]",
                    "string"
                  ],
                  "methods": [
                    {
                      "name": "Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests@GetFunction_ShouldReturnReferenceSolutionModelWithExtensionMethodType_WhenGivenClassWithExtensionMethod#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests@GetFunction_ShouldReturnReferenceSolutionModelWithDestructorMethodType_WhenGivenClassWithDestructor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests@LoadPartialClassesInRepositoryModel#string,string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsForImports.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsForImports@GetFunction_ShouldReturnImportNamespaceReference_WhenGivenClassWithImports#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveVoidReturnValues_WhenClassHasMethodsThatReturnVoid#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHavePrimitiveReturnValues_WhenClassHasMethodsThatReturnPrimitiveValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHavePrimitiveReturnValues_WhenInterfaceHasMethodsWithPrimitiveReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveDependenciesReturnValues_WhenInterfaceHasMethodsWithDependenciesReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveDependenciesReturnValues_WhenClassHasMethodsWithDependenciesReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveNoParameters_WhenClassHasMethodsWithNoParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveNoParameters_WhenClassHasConstructorWithNoParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHavePrimitiveParameters_WhenClassHasMethodsWithPrimitiveParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHavePrimitiveParameters_WhenInterfaceHasMethodsWithPrimitiveParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenInterfaceHasMethodsWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenClassHasMethodsWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenClassHasConstructorWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHavePrimitiveProperties_WhenClassHasPropertiesOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHavePrimitiveProperties_WhenClassHasEventPropertiesOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHaveDependenciesProperties_WhenClassHasProperties#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHaveDependenciesEventProperties_WhenClassHasEventProperties#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHavePrimitiveFields_WhenClassHasFieldsOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHavePrimitiveFields_WhenClassHasEventFieldsOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHaveDependenciesFields_WhenClassHasFields#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHaveDependenciesEventFields_WhenClassHasEventFields#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoLocalVariables_WhenClassHasMethodsThatDontUseLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHavePrimitiveLocalValues_WhenClassHasMethodsThatHaveLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoPrimitiveLocalVariables_WhenGivenAnInterface#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoDependencies_WhenGivenAnInterface#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasMethodsWithNonPrimitiveLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasConstructorLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasMethodsWithNonPrimitiveLocalVariablesInAForLoop#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenNamespaceHasMultipleClasses#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests@GetFunction_ShouldReturnReferenceSolutionModelWithMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithPrimitiveTypesAsParameters_UsingCSharpClassFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithPrimitiveTypesAsParameters_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithNumericValesAsParameters_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllClassReferences_WhenGivenASolutionModelWithClassHierarchy_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesWithClassHierarchyAsParameter_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@Process_ShouldHaveLocalFunctionReferences_WhenGivenMethodWithDeepNestedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/ConstructorAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.ConstructorAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenConstructorThatAccessesFieldsAndPropertiesFromInsideTheClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/ConstructorAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.ConstructorAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenStaticConstructorThatAccessesFieldsAndPropertiesFromInsideTheClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithClassWithMethodsAndProperties#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithClassAndDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithDelegateOnOneLine#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenProvidedWithDelegateOnMultipleLines#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenMethodWithLocalFunction#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenGivenPropertyWithGetAccessor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests@Extract_ShouldHaveLinesOfCode_WhenGivenEventPropertyWithGetAccessor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/LocalFunctionsAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.LocalFunctionsAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenPropertyAccessorThatAccessesFieldsAndPropertiesFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/PropertyAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.PropertyAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenPropertyAccessorThatAccessesFieldsAndPropertiesFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/PropertyAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.PropertyAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenPropertyArrowSyntaxThatAccessesFieldsAndPropertiesFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Attributes/CSharpAttributeForGenericTypesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Attributes.CSharpAttributeForGenericTypesTests@Extract_ShouldHaveAttributesToGenericParameters_WhenProvidedWithTypesThatSupportGenericParameters#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseClassObject_WhenClassDoesNotExtendsAnyClass#string,string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseClass_WhenProvidedWithRecord#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveNoBaseClass_WhenProvidedWithInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseClassIMetric_WhenClassExtendsIMetricInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseObjectAndNoInterfaces_WhenClassOnlyExtendsOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests@Extract_ShouldHaveBaseObjectAndInterfaces_WhenClassExtendsOtherClassAndImplementsMultipleInterfaces#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassInfoTests@Extract_ShouldHaveMethods_WhenProvidedWithInterfaceWithImplementedMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassInfoTests@Extract_ShouldHaveBaseObjectAndInterfaces_WhenClassExtendsOtherClassAndImplementsMultipleInterfaces#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesWithPrimitiveTypes#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesWithOtherClasses#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesWithParametersWithModifiers#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests@Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesInInnerClasses#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenMethodThatAccessesFieldsAndPropertiesFromInsideTheClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenMethodThatAccessesFieldsAndPropertiesFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenMethodThatAccessesFieldsAndPropertiesFromExternClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldNotHaveAccessedFields_WhenGivenArrayAccessor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests@Extract_ShouldHaveAccessedFields_WhenGivenFieldsFromBaseClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldHave1CyclomaticComplexity_WhenGivenClassWithMethodsAndPropertiesAndDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromWhiles_WhenGivenClassWithMethodsAndPropertiesAndDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromIfs_WhenGivenClassWithMethodsAndProperties#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromFors_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromUnaryExpression_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromComplexBinaryExpression_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromComplexBinaryExpressionWithIsAndOr_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromDoWhile_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromForeach_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromSwitch_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromPatternSwitchWithOperators_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromReturnSwitchWithStrings_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityFromPatternSwitchWithClassHierarchy_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests@Extract_ShouldCountCyclomaticComplexityForConditionalOperators_WhenGivenClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveNoExceptionsThrown_WhenProvidedWithClassThatDoesntThrowExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveSystemExceptionsThrown_WhenProvidedWithClassThatThrowsSystemExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatThrowsCustomExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatRethrowsExplicitExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatRethrowsImplicitExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatTrowsExceptionsUsingVariablesParametersFieldsPropertiesAndMethodCalls#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExternalExceptionsThrown_WhenProvidedWithClassThatTrowsExternalExceptions#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithConditionalOperatorWithThrowException#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithNullCoalescingOperatorWithThrowException#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests@Extract_ShouldHaveExceptionsThrown_WhenProvidedWithLambdaThathrowsException#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHaveNoFields_WhenGivenAnInterface#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHavePrivateFieldsWithModifiers_WhenGivenClassWithFieldsAndModifiersWithDefaultAccess#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyFieldsAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyEventFieldsAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests@Extract_ShouldHaveFieldsWithNoModifiers_WhenGivenClassWithFieldsAndTheirVisibilityAndMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedConstructor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedDestructor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedMethod#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedPropertyAccessors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedMethodWithLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpFileScopedNamespaceTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpFileScopedNamespaceTests@Extract_ShouldHaveClassType_WhenGivenFileScopedNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveObjectCreation_WhenProvidedWithClassInTheSameNamespace#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveOArrayCreation_WhenProvidedWithClassInTheSameNamespace#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveObjectCreation_WhenProvidedWithClassUnknownClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithClassUnknownClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithClassPrimitiveTypes#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithClassPrimitiveTypesInUnknownClassMethod#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithArrayCreationOfLocalVariablesPropertiesFieldsAndMethodCallsInUnknownClassMethod#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests@Extract_ShouldHaveArrayCreation_WhenProvidedWithClassInSameNamespaceUsedWithUnknownClassMethod#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveClassNameOfGenericType_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveClassNameGenericTypeWithMultipleContainedTypes_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveOneBaseGenericType_WhenProvidedWitClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveOneBaseGenericType_WhenProvidedWitStruct#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveOneBaseGenericType_WhenProvidedWithRecord#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveOneBaseGenericType_WhenProvidedWithInterface#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveMultipleBaseGenericTypes_WhenProvidedWithClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveMultipleBaseConcreteGenericTypes_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveGenericModifiers_WhenProvidedWithGenericInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveGenericTypesWithPredefinedConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests@Extract_ShouldHaveGenericTypesWithMultipleConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorThatCallsOtherMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsMethodsFromAFieldOfADifferentClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsStaticMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsStaticMethodsFromUnknownClass#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsFuncLambdas#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsActionLambdas#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallMethodsInsideLambdas#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallHasCalledMethodsChained#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsLinqMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsMethodsFromDictionaryOfACastedObject#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsMethodsFromAnotherClassAsProperty#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenProvidedWithGenericMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveNoCalledMethods_WhenProvidedWithTypeofSyntax#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldExtractNameof_WhenProvidedWithNameofSyntax#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests@Extract_ShouldHaveCalledMethods_WhenGivenMethodWithAwaitStatement#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithPrimitiveTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithCustomClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithExternClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithArrayLocalVariable#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenOneClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenCompilationUnitText#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesInImbricatedNamespaces#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses_ButNoNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenStaticUsings#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithSystemAttributes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveDelegateNameOfGenericType_WhenProvidedWithGenericDelegate#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveDelegateNameGenericTypeWithMultipleContainedTypes_WhenProvidedWithGenericDelegate#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveGenericModifiers_WhenProvidedWithGenericDelegate#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveGenericTypesWithPredefinedConstrains_WhenProvidedWithDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests@Extract_ShouldHaveGenericTypesWithMultipleConstrains_WhenProvidedWithDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumAttributesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumAttributesTests@Extract_ShouldExtractAttribute_GivenEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumAttributesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumAttributesTests@Extract_ShouldExtractLabelAttributes_GivenEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenOneClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenOneDelegate#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesWithTheSameUsings#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesInMultipleNamespacesWithSharedUsings#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesInImbricatedNamespaces#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses_ButNoNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenText#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenStaticUsings#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests@Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveNoMethods_WhenGivenClassAndRecordsWithFieldsOnly#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveMethods_WhenGivenAClassHierarchy#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveMethodsWithMethodCalls_WhenGivenMethodsThatCallOtherMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveMethodsWithMethodCalls_WhenGivenMethodsThatCallStaticMethods#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveMethodsWithMethodCallsWithParameterModifiers_WhenGivenMethodsThatCallOtherMethodsWithParameterModifiers#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldExtractNullDefaultValue#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveDefinitionClassNameAndLocationClassName_GivenClassHierarchy#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests@Extract_ShouldHaveNoMethodDefinitionNames_GivenExternClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpGenericFieldTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpGenericFieldTests@Extract_ShouldHaveFieldOfGenericType_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpGenericFieldTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpGenericFieldTests@Extract_ShouldHaveFieldOfGenericTypeWithMultipleContainedTypes_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefModifier_WhenGivenMethodWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefReadonlyModifier_WhenGivenMethodWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefModifier_WhenGivenConstructorWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefReadonlyModifier_WhenGivenConstructorWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefModifier_WhenGivenPropertyWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveRefReadonlyModifier_WhenGivenPropertyWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveNullableVariables_WhenEntitiesWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests@Extract_ShouldHaveNullableVariables_WhenEntitiesWithLocalVariablesOfClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldExtractStaticConstructor_WhenProvidedWithDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructors#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorsThatCallEachOther#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorsThatCallEachOtherAndBaseConstructor#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorsThatCallsBaseConstructor_ButBaseClassIsNotPresentInCompilationUnit#",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldThrowExtractionException_WhenParsingTextWithParsingErrors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetClassNameAndNamespace_WhenParsingTextWithOneEntity#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetClassModifiers_WhenParsingTextWithOneEntity#string,string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithMethodWithParameterWithModifiers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithExtensionMethod#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithMethodWithParameterWithParamsModifiers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithMethodWithParameterWithDefaultValues#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldNotHaveMetrics_WhenGivenAnEmptyListOfMetrics_ForOneClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldSetClassNameAndInterfaceAndNamespace_WhenParsingTextWithOneClassAndOneInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveNoFields_WhenGivenAnInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHavePrivateFieldsWithModifiers_WhenGivenClassWithFieldsAndModifiersWithDefaultAccess#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyFieldsAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyEventFieldsAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveFieldsWithNoModifiers_WhenGivenClassWithFieldsAndTheirVisibilityAndMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveNoMethods_WhenGivenClassTypeWithNoMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveMethods_WhenGivenAnInterfaceWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveMethods_WhenGivenAClassWithMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveReadonlyStructs_WhenGivenPathToAFileWithReadonlyStructs#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveReadonlyStructMembers_WhenGivenPathToAFileWithMutableStructWithReadonlyMembers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveReadonlyStaticStructMembers_WhenGivenPathToAFileWithStructWithStaticReadonlyMembers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveRefStructs_WhenGivenPathToAFileWithRefStructs#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveRefReturnMethod_WhenGivenPathToAFileWithRefStructs#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveNullableEntities_WhenProvidedWithClassWithNullableEntities#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveNullableEntities_WhenProvidedWithClassWithNullableClassEntities#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs->HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests@Extract_ShouldHaveContainingClassNames_GivenNestedClasses#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodReturnValueAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodReturnValueAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodReturnValueAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodReturnValueAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodReturnValueAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodReturnValueAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericMethod_WhenProvidedDifferentNonGenericClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericMethodWithMultipleGenericParams_WhenProvidedDifferentNonGenericClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericTypesWithPredefinedConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericTypesWithMultipleConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveLocalFunctionGenericMethodWithConstraints_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests@Extract_ShouldHaveGenericLocalMethodWithMultipleConstrains_WhenProvidedWithClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumInfoTests@Extract_ShouldBasicInfo_WhenProvidedWithEnum#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumInfoTests@Extract_ShouldHaveOtherType_WhenProvidedWithEnumWithOtherType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumInfoTests@Extract_ShouldContainingClass_WhenProvidedWithEnumInInnerClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithSystemAttributes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithPrimitiveTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithCustomClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithExternClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithArrayLocalVariable#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpGenericPropertyTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpGenericPropertyTests@Extract_ShouldHavePropertyOfGenericType_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpGenericPropertyTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpGenericPropertyTests@Extract_ShouldHavePropertyOfGenericTypeWithMultipleContainedTypes_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpGenericPropertyTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpGenericPropertyTests@Extract_ShouldHavePropertyOfGenericTypeWithMultipleNullableContainedTypes_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithPropertyAccessors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests@Extract_ShouldExtractAttribute_WhenProvidedWithPropertyAccessorsForReturnValue#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithPrimitiveTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithCustomClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithTypeofSyntax#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithNameofSyntax#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithExternClassTypes#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithArrayLocalVariable#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionWithLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionWithArrayLocalVariables#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalVariablesFromIfAndSwitch#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionsWithLocalVariablesFromIfAndSwitch#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalVariablesFromForeach#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionsWithLocalVariablesFromForeach#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveLocalVariablesDependencies_WhenGivenPropertyFromOtherClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveNoLocalVariablesDependencies_WhenGivenUnknownClassMembers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveLocalVariableDependencies_WhenGivenMethodWithAwaitStatement#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveLocalVariableDependencies_WhenGivenMethodWithAwaitStatementWithUnknownClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests@Extract_ShouldHaveLocalVariableDependencies_WhenGivenMethodWithAwaitStatementWithUnknownGenericClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunction_WhenGivenMethodWithOneLocalFunctionThatReturnsVoidAndHasNoParameters#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunction_WhenGivenLocalFunctionWithReturnValueAndParameters#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractMultipleLocalFunctions_WhenGivenLocalFunctionsWithModifiers#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionCyclomaticComplexity_WhenGivenLocalFunctionWithHighCyclomaticComplexity#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunction_WhenGivenMethodPropertyConstructorWithLocalFunction#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionAndUsages_WhenGivenMethodWithMultipleLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctions_WhenGivenMethodWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionsWithCalledMethods_WhenGivenMethodWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctions_WhenGivenPropertyWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionsWithCalledMethods_WhenGivenPropertyWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests@Extract_ShouldExtractLocalFunctionsWithCalledMethods_WhenGivenEventPropertyWithImbricatedLocalFunctions#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePropertyInfo_WhenGivenTypeWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventPropertyInfo_WhenGivenTypeWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveAbstractModifier_WhenGivenPropertyInInterface#",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveOnlyGetAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveOnlySetAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveOnlyInitAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveGetSetAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveGetInitAccessors_WhenGivenClassWithProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldCalledMethods_WhenGivenPropertyWithExpressionBodiedMember#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveCyclomaticComplexity_WhenGivenClassWithProperties#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenAnInterface#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePrivatePropertiesWithModifiers_WhenGivenClassWithPropertiesAndModifiersWithDefaultAccess#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePropertiesWithNoOtherModifiers_WhenGivenClassWithOnlyPropertiesAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePropertiesWithNoOtherModifiers_WhenGivenClassWithOnlyEventPropertiesAndTheirModifier#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHavePropertiesWithAccessors_WhenGivenClassWithPropertiesWithDifferentAccessors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenClassWithComputedEmptyProperties#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenClassWithComputedPropertyThatCallsInnerMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenClassWithComputedPropertyThatCallsMethodsFromOtherClassFromTheSameNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveProperties_WhenGivenClassWithComputedPropertyThatCallsStaticMethodsFromUnknownClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsInnerMethods#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsMethodsFromOtherClassFromTheSameNamespace#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsStaticMethodsFromUnknownClass#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsMethodsFromOtherClassFromTheSameNamespaceAsProperty#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests@Extract_ShouldHaveNoMethodDefinitionNames_GivenExternClass#string"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@GetCompilationUnitSyntaxTree#Microsoft.CodeAnalysis.SyntaxTree",
                        "->HoneydewExtractors.Core.Metrics.Visitors.ICompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit.ICSharpCompilationUnitVisitor@Visit#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICompilationUnitType"
                      ]
                    },
                    {
                      "name": "GetCompilationUnitSyntaxTree#Microsoft.CodeAnalysis.SyntaxTree",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.CSharp.CSharpExtensions@GetCompilationUnitRoot#System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax@GetDiagnostics#",
                        "->System.Collections.Generic.IEnumerable@ToArray#",
                        "->Microsoft.CodeAnalysis.Diagnostic[]@Any#System.Func<Microsoft.CodeAnalysis.Diagnostic, bool>",
                        "->Microsoft.CodeAnalysis.Diagnostic[]@Aggregate#string,System.Func<string, Microsoft.CodeAnalysis.Diagnostic, string>"
                      ]
                    },
                    {
                      "name": "CSharpFactExtractor#HoneydewExtractors.Core.Metrics.Visitors.ICompositeVisitor",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LinesOfCodeVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LinesOfCodeVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common.LinesOfCodeVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpLinesOfCodeCounter",
                    "bool",
                    "object",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                    "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode",
                    "int",
                    "HoneydewModels.LinesOfCode",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IPropertyType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@Count#string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@Count#string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@Count#string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@Count#string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@Count#string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@Count#string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@Count#string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@Count#string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@Count#string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICompilationUnitType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@Count#string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->Microsoft.CodeAnalysis.SyntaxTriviaList@ToString#",
                        "->Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode@GetLeadingTrivia#"
                      ]
                    },
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.Metrics.Visitors.IVisitor@Visit#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "AttributeSetterVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Fields",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "string",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax",
                    "System.Collections.Generic.IEnumerable",
                    "System.Collections.Generic.List"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributes#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithAttributes,string"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributesFromMethod#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IAttributeType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributesFromMethod#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IAttributeType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributes#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithAttributes,string"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributes#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithAttributes,string"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,System.Collections.Generic.IList<HoneydewModels.Types.IFieldType>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributes#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithAttributes,string"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IPropertyType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributes#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithAttributes,string"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributes#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithAttributes,string"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributes#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithAttributes,string"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumLabelType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributes#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithAttributes,string"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IParameterType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributes#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithAttributes,string"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IGenericParameterType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@ExtractAttributes#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithAttributes,string"
                      ]
                    },
                    {
                      "name": "ExtractAttributes#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithAttributes,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,System.Collections.Generic.IList<HoneydewModels.Types.IFieldType>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IPropertyType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumLabelType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IParameterType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IGenericParameterType"
                      ],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<AttributeListSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ChildNodes#",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Attributes.ICSharpAttributeVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAttributeType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IAttributeType"
                      ]
                    },
                    {
                      "name": "ExtractAttributesFromMethod#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AttributeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType"
                      ],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<AttributeListSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ChildNodes#",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Attributes.ICSharpAttributeVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAttributeType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.List@Add#HoneydewModels.Types.IAttributeType"
                      ]
                    },
                    {
                      "name": "AttributeSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Attributes.IAttributeVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ClassSetterCompilationUnitVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/CompilationUnit/ClassSetterCompilationUnitVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit.ClassSetterCompilationUnitVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICompilationUnitType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<TypeDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Classes.ICSharpClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IClassType"
                      ]
                    },
                    {
                      "name": "ClassSetterCompilationUnitVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Classes.IClassVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CalledMethodSetterVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax",
                    "System.Collections.Generic.List",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@SetMethodCalls#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICallingMethodsType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@SetMethodCalls#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICallingMethodsType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@SetMethodCalls#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICallingMethodsType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@SetMethodCalls#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICallingMethodsType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@SetMethodCalls#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICallingMethodsType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Linq.Enumerable@OfType<InvocationExpressionSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ChildNodes#",
                        "->System.Linq.Enumerable@OfType<ReturnStatementSyntax>#",
                        "->System.Collections.Generic.List@AddRange#System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax>",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "->System.Linq.Enumerable@OfType<AwaitExpressionSyntax>#",
                        "->System.Linq.Enumerable@OfType<LocalDeclarationStatementSyntax>#",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.MethodCalls.ICSharpMethodCallVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodCallType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IMethodCallType"
                      ]
                    },
                    {
                      "name": "SetMethodCalls#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICallingMethodsType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/CalledMethodSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType"
                      ],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<InvocationExpressionSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "->Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax@GetParentDeclarationSyntax<LocalFunctionStatementSyntax>#",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.MethodCalls.ICSharpMethodCallVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodCallType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IMethodCallType"
                      ]
                    },
                    {
                      "name": "CalledMethodSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.MethodCalls.IMethodCallVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "GotoStatementVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GotoStatementVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common.GotoStatementVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Linq",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                    "int",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "HoneydewModels.CSharp.MetricModel"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.MetricModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GotoStatementVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GotoStatementVisitor@CalculateGotoStatements#Microsoft.CodeAnalysis.SyntaxNode"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.MetricModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GotoStatementVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GotoStatementVisitor@CalculateGotoStatements#Microsoft.CodeAnalysis.SyntaxNode"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.MetricModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GotoStatementVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GotoStatementVisitor@CalculateGotoStatements#Microsoft.CodeAnalysis.SyntaxNode"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.MetricModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GotoStatementVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GotoStatementVisitor@CalculateGotoStatements#Microsoft.CodeAnalysis.SyntaxNode"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@Count#",
                        "->System.Linq.Enumerable@OfType<GotoStatementSyntax>#",
                        "->System.Collections.Generic.IEnumerable@Where#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<LocalFunctionStatementSyntax>#",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.MetricModel"
                      ]
                    },
                    {
                      "name": "CalculateGotoStatements#Microsoft.CodeAnalysis.SyntaxNode",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GotoStatementVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GotoStatementVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GotoStatementVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GotoStatementVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GotoStatementVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GotoStatementVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GotoStatementVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GotoStatementVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@Count#",
                        "->System.Linq.Enumerable@OfType<GotoStatementSyntax>#",
                        "->System.Collections.Generic.IEnumerable@Where#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<LocalFunctionStatementSyntax>#"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "EnumSetterCompilationUnitVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/CompilationUnit/EnumSetterCompilationUnitVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit.EnumSetterCompilationUnitVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICompilationUnitType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<EnumDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Classes.ICSharpEnumVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IClassType"
                      ]
                    },
                    {
                      "name": "EnumSetterCompilationUnitVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Classes.IEnumVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ParameterSetterVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ParameterSetterVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common.ParameterSetterVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ParameterSetterVisitor@ExtractParameterInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodSignatureType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ParameterSetterVisitor@ExtractParameterInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodSignatureType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ParameterSetterVisitor@ExtractParameterInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodSignatureType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ParameterSetterVisitor@ExtractParameterInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodSignatureType"
                      ]
                    },
                    {
                      "name": "ExtractParameterInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodSignatureType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ParameterSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ParameterSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ParameterSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ParameterSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions"
                      ],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<ParameterListSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ChildNodes#",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Parameters.ICSharpParameterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IParameterType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IParameterType"
                      ]
                    },
                    {
                      "name": "ParameterSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Parameters.IParameterVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ConstructorCallsVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorCallsVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorCallsVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Utils",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.IMethodSymbol",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorCallsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorCallsVisitor@ExtractInfoAboutConstructorCalls#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IMethodCallType"
                      ]
                    },
                    {
                      "name": "ExtractInfoAboutConstructorCalls#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorCallsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorCallsVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetBaseClassName#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetMethodSymbol#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.IMethodSymbol",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetDefinitionClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetLocationClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "DelegateSetterCompilationUnitVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/CompilationUnit/DelegateSetterCompilationUnitVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit.DelegateSetterCompilationUnitVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICompilationUnitType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<DelegateDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Classes.ICSharpDelegateVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IClassType"
                      ]
                    },
                    {
                      "name": "DelegateSetterCompilationUnitVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Classes.IDelegateVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "AccessedFieldsSetterVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.AccessedFields",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "System.Collections.Generic.List",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax",
                    "System.Collections.Generic.IEnumerable",
                    "HoneydewModels.Types.AccessedField",
                    "bool",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@SetAccessedFields#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IContainedTypeWithAccessedFields"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@SetAccessedFields#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IContainedTypeWithAccessedFields"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@SetAccessedFields#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IContainedTypeWithAccessedFields"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@SetAccessedFields#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IContainedTypeWithAccessedFields"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@SetAccessedFields#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IContainedTypeWithAccessedFields"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ChildNodes#",
                        "->System.Collections.Generic.IEnumerable@SelectMany#System.Func<Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>>",
                        "->System.Linq.Enumerable@OfType<LocalDeclarationStatementSyntax>#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@GetPossibleAccessFields#System.Collections.Generic.List<Microsoft.CodeAnalysis.SyntaxNode>",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "->System.Collections.Generic.IEnumerable@Concat#System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>",
                        "->System.Collections.Generic.IEnumerable@SelectMany#System.Func<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>>",
                        "->System.Collections.Generic.List@OfType<ExpressionStatementSyntax>#",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.AccessedFields.ICSharpAccessedFieldsVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.AccessedField",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.AccessedField"
                      ]
                    },
                    {
                      "name": "SetAccessedFields#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IContainedTypeWithAccessedFields",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@GetPossibleAccessFields#System.Collections.Generic.List<Microsoft.CodeAnalysis.SyntaxNode>",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<LocalFunctionStatementSyntax>#",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.AccessedFields.ICSharpAccessedFieldsVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.AccessedField",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->string@IsNullOrEmpty#string",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.AccessedField"
                      ]
                    },
                    {
                      "name": "GetPossibleAccessFields#System.Collections.Generic.List<Microsoft.CodeAnalysis.SyntaxNode>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/AccessedFieldsSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor@SetAccessedFields#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IContainedTypeWithAccessedFields"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Linq.Enumerable@Cast<ExpressionSyntax>#",
                        "->System.Linq.Enumerable@OfType<MemberAccessExpressionSyntax>#",
                        "->System.Collections.Generic.List@Concat#System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>",
                        "->System.Collections.Generic.IEnumerable@Select#System.Func<Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax, Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>",
                        "->System.Linq.Enumerable@OfType<VariableDeclaratorSyntax>#",
                        "->System.Collections.Generic.IEnumerable@SelectMany#System.Func<Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax, System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax>>",
                        "->System.Linq.Enumerable@OfType<AssignmentExpressionSyntax>#",
                        "->System.Collections.Generic.List@Distinct#"
                      ]
                    },
                    {
                      "name": "AccessedFieldsSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.AccessedFields.IAccessedFieldsVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpLinesOfCodeCounter.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpLinesOfCodeCounter.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpLinesOfCodeCounter",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Extraction"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter"
                  ],
                  "methods": [
                    {
                      "name": "CSharpLinesOfCodeCounter#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Extraction/LinesOfCodeCounter.cs->HoneydewExtractors.Core.Metrics.Extraction.LinesOfCodeCounter@LinesOfCodeCounter#string,string,string"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LocalVariablesTypeSetterVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LocalVariablesTypeSetterVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewCore.Utils",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.LocalVariables",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                    "string",
                    "int",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LocalVariablesTypeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor@SetLocalVariables#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalVariables"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LocalVariablesTypeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor@SetLocalVariables#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalVariables"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LocalVariablesTypeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor@SetLocalVariables#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalVariables"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LocalVariablesTypeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor@SetLocalVariables#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalVariables"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<LocalDeclarationStatementSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ChildNodes#",
                        "->System.Linq.Enumerable@OfType<VariableDeclaratorSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.LocalVariables.ICSharpLocalVariablesVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->string@IsNullOrEmpty#string",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.ILocalVariableType",
                        "->System.Linq.Enumerable@OfType<DeclarationPatternSyntax>#",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<LocalFunctionStatementSyntax>#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.LocalVariables.ICSharpLocalVariablesVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType",
                        "->System.Linq.Enumerable@OfType<ForEachStatementSyntax>#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.LocalVariables.ICSharpLocalVariablesVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType"
                      ]
                    },
                    {
                      "name": "SetLocalVariables#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalVariables",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LocalVariablesTypeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LocalVariablesTypeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LocalVariablesTypeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/LocalVariablesTypeSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType"
                      ],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<VariableDeclaratorSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.LocalVariables.ICSharpLocalVariablesVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->string@IsNullOrEmpty#string",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.ILocalVariableType",
                        "->System.Linq.Enumerable@OfType<DeclarationPatternSyntax>#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.LocalVariables.ICSharpLocalVariablesVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType",
                        "->System.Linq.Enumerable@OfType<ForEachStatementSyntax>#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.LocalVariables.ICSharpLocalVariablesVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType"
                      ]
                    },
                    {
                      "name": "LocalVariablesTypeSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.LocalVariables.ILocalVariablesVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ConstructorInfoVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorInfoVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorInfoVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewCore.Utils",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax",
                    "string"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorInfoVisitor@GetModifiersForNode#Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax,string,string",
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"
                      ]
                    },
                    {
                      "name": "GetModifiersForNode#Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax,string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.SyntaxTokenList@ToString#",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@SetModifiers#string,string,string"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "DestructorInfoVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Destructor/DestructorInfoVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Destructor",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Destructor.DestructorInfoVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "GenericParameterSetterVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GenericParameterSetterVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common.GenericParameterSetterVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GenericParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GenericParameterSetterVisitor@ExtractParameterInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithGenericParameters"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GenericParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GenericParameterSetterVisitor@ExtractParameterInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithGenericParameters"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GenericParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GenericParameterSetterVisitor@ExtractParameterInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithGenericParameters"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GenericParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GenericParameterSetterVisitor@ExtractParameterInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithGenericParameters"
                      ]
                    },
                    {
                      "name": "ExtractParameterInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithGenericParameters",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GenericParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GenericParameterSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GenericParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GenericParameterSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GenericParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GenericParameterSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/GenericParameterSetterVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.GenericParameterSetterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions"
                      ],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<TypeParameterListSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ChildNodes#",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Parameters.ICSharpGenericParameterVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IGenericParameterType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IGenericParameterType"
                      ]
                    },
                    {
                      "name": "GenericParameterSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Parameters.IGenericParameterVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "BasicEnumLabelInfoVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Enum/BasicEnumLabelInfoVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Enum",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Enum.BasicEnumLabelInfoVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumLabelType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "BaseInfoEnumVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Enum/BaseInfoEnumVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Enum",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Enum.BaseInfoEnumVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewCore.Utils",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string",
                    "HoneydewModels.Types.GenericType",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@SetModifiers#string,string,string",
                        "->Microsoft.CodeAnalysis.SyntaxTokenList@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetContainingNamespaceName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetContainingClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "->Microsoft.CodeAnalysis.SeparatedSyntaxList@FirstOrDefault#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IBaseType"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ImportsVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ImportsVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string",
                    "System.Collections.Generic.HashSet",
                    "HoneydewModels.CSharp.UsingModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "System.Collections.Generic.List",
                    "bool",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICompilationUnitType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<UsingDirectiveSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->System.Collections.Generic.HashSet@Contains#string",
                        "->System.Collections.Generic.HashSet@Add#string",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ImportsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor@GetUsingModelFromUsingSyntax#Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IImportType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ImportsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor@ExtractParentImports#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IImportType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ImportsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor@ExtractParentImports#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IImportType"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ImportsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor@ExtractParentImports#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IImportType"
                      ]
                    },
                    {
                      "name": "ExtractParentImports#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ImportsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ImportsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ImportsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType"
                      ],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<UsingDirectiveSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ChildNodes#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->System.Collections.Generic.HashSet@Contains#string",
                        "->System.Collections.Generic.HashSet@Add#string",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ImportsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor@GetUsingModelFromUsingSyntax#Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.List@Add#HoneydewModels.Types.IImportType"
                      ]
                    },
                    {
                      "name": "GetUsingModelFromUsingSyntax#Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ImportsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor@Visit#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ICompilationUnitType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ImportsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor@ExtractParentImports#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->@nameof#HoneydewModels.Types.EAliasType",
                        "->string@IsNullOrEmpty#string",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetAliasTypeOfNamespace#Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    },
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MethodCallInfoVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/MethodCall/MethodCallInfoVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall.MethodCallInfoVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.MethodCallModel"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodCallType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetMethodCallModel#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "EnumLabelsSetterVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Enum/EnumLabelsSetterVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Enum",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Enum.EnumLabelsSetterVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Classes.ICSharpEnumLabelVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumLabelType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IEnumLabelType"
                      ]
                    },
                    {
                      "name": "EnumLabelsSetterVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Classes.IEnumLabelVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "FieldInfoVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Field/FieldInfoVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Field",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Field.FieldInfoVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Utils",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Fields",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "System.Collections.Generic.IList",
                    "string",
                    "bool",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,System.Collections.Generic.IList<HoneydewModels.Types.IFieldType>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.SyntaxTokenList@ToString#",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@SetModifiers#string,string,string",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "->System.Collections.Generic.ICollection@Add#HoneydewModels.Types.IFieldType",
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ParameterInfoVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Parameter/ParameterInfoVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter.ParameterInfoVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "bool",
                    "string",
                    "HoneydewModels.CSharp.ParameterModel"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IParameterType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@ExtractInfoAboutParameter#Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MethodAccessorSetterPropertyVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Property/MethodAccessorSetterPropertyVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Property.MethodAccessorSetterPropertyVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IPropertyType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Methods.ICSharpArrowExpressionMethodVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IAccessorType",
                        "->HoneydewExtractors.Core.Metrics.Visitors.Methods.ICSharpMethodAccessorVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType"
                      ]
                    },
                    {
                      "name": "MethodAccessorSetterPropertyVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Methods.IMethodVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MethodInfoVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Method/MethodInfoVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Method.MethodInfoVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax",
                    "HoneydewCore.Utils.CSharpConstants",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string",
                    "bool",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<InterfaceDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxTokenList@ToString#",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@SetModifiers#string,string,string",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@SetTypeModifier#string,string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.SyntaxTokenList@ToString#",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@SetModifiers#string,string,string",
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<BasePropertyDeclarationSyntax>#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<BasePropertyDeclarationSyntax>#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "SyntaxNodeExtensions.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/SyntaxNodeExtensions.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions",
                  "type": "Class",
                  "usingStatements": ["Microsoft.CodeAnalysis"],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "T"
                  ],
                  "methods": [
                    {
                      "name": "GetParentDeclarationSyntax#Microsoft.CodeAnalysis.SyntaxNode",
                      "type": "Extension",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ICSharpLocalFunctionVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Visitors/Method/ICSharpLocalFunctionVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Visitors.Method.ICSharpLocalFunctionVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.IExtractionVisitor"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "PropertyInfoVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Property/PropertyInfoVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Property.PropertyInfoVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewCore.Utils",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax",
                    "bool",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IPropertyType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.SyntaxTokenList@ToString#",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@SetModifiers#string,string,string",
                        "->string@IsNullOrEmpty#string",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@SetTypeModifier#string,string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LocalFunctionsSetterClassVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor@SetLocalFunctionInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalFunctions"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor@SetLocalFunctionInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalFunctions"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor@SetLocalFunctionInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalFunctions"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor@SetLocalFunctionInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalFunctions"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor@SetLocalFunctionInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalFunctions"
                      ]
                    },
                    {
                      "name": "SetLocalFunctionInfo#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ITypeWithLocalFunctions",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctionsSetterClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions"
                      ],
                      "calledMethods": [
                        "->System.Linq.Enumerable@OfType<LocalFunctionStatementSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ChildNodes#",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.CSharp.Metrics.Visitors.Method.ICSharpLocalFunctionVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IMethodTypeWithLocalFunctions"
                      ]
                    },
                    {
                      "name": "LocalFunctionsSetterClassVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Methods.ILocalFunctionVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LocalVariableInfoVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/LocalVariables/LocalVariableInfoVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.LocalVariables",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.LocalVariables.LocalVariableInfoVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Linq",
                    "HoneydewCore.Utils",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.LocalVariables",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax",
                    "HoneydewModels.Types.GenericType",
                    "System.Collections.Generic.IList"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<VariableDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@SetTypeModifier#string,string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->string@IsNullOrEmpty#string",
                        "->string@Contains#string",
                        "->string@Trim#",
                        "->string@Replace#string,string",
                        "->System.Collections.Generic.IEnumerable@SingleOrDefault#",
                        "->System.Linq.Enumerable@OfType<MemberAccessExpressionSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ChildNodes#"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool"
                      ]
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IProjectLoader.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/ProjectRead/IProjectLoader.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead.IProjectLoader",
                  "type": "interface",
                  "usingStatements": [
                    "System.Threading.Tasks",
                    "HoneydewModels.CSharp"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewModels.CSharp.ProjectModel",
                    "System.Threading.Tasks.Task"
                  ],
                  "methods": [
                    {
                      "name": "Load#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "BaseInfoDelegateVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Delegate/BaseInfoDelegateVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Delegate",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Delegate.BaseInfoDelegateVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewCore.Utils",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@SetModifiers#string,string,string",
                        "->Microsoft.CodeAnalysis.SyntaxTokenList@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@SetTypeModifier#string,string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IBaseType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetContainingClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetContainingNamespaceName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LocalFunctionInfoVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctions/LocalFunctionInfoVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions.LocalFunctionInfoVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string",
                    "bool"
                  ],
                  "methods": [
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctions/LocalFunctionInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions.LocalFunctionInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@SetTypeModifier#string,string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#",
                        "->Microsoft.CodeAnalysis.SyntaxTokenList@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                        "->System.Linq.Enumerable@OfType<LocalFunctionStatementSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ChildNodes#",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@GetContainedVisitors#",
                        "->HoneydewExtractors.CSharp.Metrics.Visitors.Method.ICSharpLocalFunctionVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctions/LocalFunctionInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions.LocalFunctionInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IMethodTypeWithLocalFunctions"
                      ]
                    },
                    {
                      "name": "LocalFunctionInfoVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.Methods.ILocalFunctionVisitor>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@CompositeVisitor#System.Collections.Generic.IEnumerable<HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IProjectProvider.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/ProjectRead/IProjectProvider.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead.IProjectProvider",
                  "type": "interface",
                  "usingStatements": [
                    "System.Threading.Tasks",
                    "Microsoft.CodeAnalysis"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "Microsoft.CodeAnalysis.Project",
                    "System.Threading.Tasks.Task"
                  ],
                  "methods": [
                    {
                      "name": "GetProject#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ProjectNotFoundException.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/ProjectRead/ProjectNotFoundException.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead.ProjectNotFoundException",
                  "type": "Class",
                  "usingStatements": ["System"],
                  "attributes": [],
                  "usedClasses": ["System.Exception"],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "MsBuildProjectProvider.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/ProjectRead/MsBuildProjectProvider.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead.MsBuildProjectProvider",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Threading.Tasks",
                    "Microsoft.Build.Locator",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.MSBuild"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "string",
                    "Microsoft.CodeAnalysis.Project",
                    "System.Threading.Tasks.Task",
                    "Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace"
                  ],
                  "methods": [
                    {
                      "name": "GetProject#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Microsoft.Build.Locator.MSBuildLocator@RegisterDefaults#",
                        "->Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace@Create#",
                        "->Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace@OpenProjectAsync#string,System.IProgress<Microsoft.CodeAnalysis.MSBuild.ProjectLoadProgress>,System.Threading.CancellationToken"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RawCSharpFileRepositoryLoader.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/RawCSharpFileRepositoryLoader.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.RawCSharpFileRepositoryLoader",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Threading.Tasks",
                    "HoneydewCore.IO.Readers",
                    "HoneydewCore.Logging",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Importers"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewModels.Importers.JsonModelImporter",
                    "object",
                    "HoneydewCore.IO.Readers.IRepositoryLoader",
                    "string",
                    "System.Threading.Tasks.Task"
                  ],
                  "methods": [
                    {
                      "name": "Load#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->HoneydewModels.Importers.JsonModelImporter@Import#string",
                        "->System.Threading.Tasks.Task@FromResult#HoneydewModels.CSharp.RepositoryModel"
                      ]
                    },
                    {
                      "name": "RawCSharpFileRepositoryLoader#HoneydewCore.Logging.ILogger,HoneydewModels.Importers.JsonModelImporter<HoneydewModels.CSharp.RepositoryModel>",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ProjectWithErrorsException.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/ProjectRead/ProjectWithErrorsException.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead.ProjectWithErrorsException",
                  "type": "Class",
                  "usingStatements": ["System"],
                  "attributes": [],
                  "usedClasses": ["System.Exception"],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ISolutionLoader.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/SolutionRead/ISolutionLoader.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.ISolutionLoader",
                  "type": "interface",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Threading.Tasks"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.ISet",
                    "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.SolutionLoadingResult",
                    "System.Threading.Tasks.Task"
                  ],
                  "methods": [
                    {
                      "name": "LoadSolution#string,System.Collections.Generic.ISet<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ISolutionProvider.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/SolutionRead/ISolutionProvider.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.ISolutionProvider",
                  "type": "interface",
                  "usingStatements": [
                    "System.Threading.Tasks",
                    "Microsoft.CodeAnalysis"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "Microsoft.CodeAnalysis.Solution",
                    "System.Threading.Tasks.Task"
                  ],
                  "methods": [
                    {
                      "name": "GetSolution#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MsBuildSolutionProvider.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/SolutionRead/MsBuildSolutionProvider.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.MsBuildSolutionProvider",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Threading.Tasks",
                    "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead",
                    "Microsoft.Build.Locator",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.MSBuild"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "string",
                    "Microsoft.CodeAnalysis.Solution",
                    "System.Threading.Tasks.Task",
                    "Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace"
                  ],
                  "methods": [
                    {
                      "name": "GetSolution#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Microsoft.Build.Locator.MSBuildLocator@RegisterDefaults#",
                        "->Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace@Create#",
                        "->Microsoft.CodeAnalysis.MSBuild.MSBuildWorkspace@OpenSolutionAsync#string,System.IProgress<Microsoft.CodeAnalysis.MSBuild.ProjectLoadProgress>,System.Threading.CancellationToken"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "SolutionLoadingResult.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/SolutionRead/SolutionLoadingResult.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.SolutionLoadingResult",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.CSharp"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.SolutionLoadingResult",
                    "System.IEquatable"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "SolutionNotFoundException.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/SolutionRead/SolutionNotFoundException.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.SolutionNotFoundException",
                  "type": "Class",
                  "usingStatements": ["System"],
                  "attributes": [],
                  "usedClasses": ["System.Exception"],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ProjectLoader.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/ProjectRead/ProjectLoader.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead.ProjectLoader",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Threading.Tasks",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core",
                    "HoneydewExtractors.CSharp.RepositoryLoading.Strategies",
                    "HoneydewModels.CSharp"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "string",
                    "HoneydewModels.CSharp.ProjectModel",
                    "System.Threading.Tasks.Task",
                    "Microsoft.CodeAnalysis.Project"
                  ],
                  "methods": [
                    {
                      "name": "Load#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["none", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/CSharpRepositoryLoader.cs->HoneydewExtractors.CSharp.RepositoryLoading.CSharpRepositoryLoader@Load#string"
                      ],
                      "calledMethods": [
                        "->HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead.IProjectProvider@GetProject#string",
                        "->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.IProjectLoadingStrategy@Load#Microsoft.CodeAnalysis.Project,HoneydewExtractors.Core.IFactExtractorCreator",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->HoneydewCore.Logging.IProgressLogger@Log#object"
                      ]
                    },
                    {
                      "name": "ProjectLoader#HoneydewExtractors.Core.IFactExtractorCreator,HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead.IProjectProvider,HoneydewExtractors.CSharp.RepositoryLoading.Strategies.IProjectLoadingStrategy,HoneydewCore.Logging.ILogger,HoneydewCore.Logging.IProgressLogger",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "SolutionFileLoader.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/SolutionRead/SolutionFileLoader.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.SolutionFileLoader",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "System.Threading.Tasks",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core",
                    "HoneydewExtractors.CSharp.RepositoryLoading.Strategies"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "string",
                    "System.Collections.Generic.ISet",
                    "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.SolutionLoadingResult",
                    "System.Threading.Tasks.Task",
                    "Microsoft.CodeAnalysis.Solution"
                  ],
                  "methods": [
                    {
                      "name": "LoadSolution#string,System.Collections.Generic.ISet<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["none", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/CSharpRepositoryLoader.cs->HoneydewExtractors.CSharp.RepositoryLoading.CSharpRepositoryLoader@Load#string"
                      ],
                      "calledMethods": [
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.ISolutionProvider@GetSolution#string",
                        "->System.Collections.Generic.IEnumerable@Count#",
                        "->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ISolutionLoadingStrategy@Load#Microsoft.CodeAnalysis.Solution,HoneydewExtractors.Core.IFactExtractorCreator,System.Collections.Generic.ISet<string>",
                        "->HoneydewCore.Logging.IProgressLogger@Log#object"
                      ]
                    },
                    {
                      "name": "SolutionFileLoader#HoneydewCore.Logging.ILogger,HoneydewCore.Logging.IProgressLogger,HoneydewExtractors.Core.IFactExtractorCreator,HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.ISolutionProvider,HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ISolutionLoadingStrategy",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "GenericParameterInfoVisitor.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/Parameter/GenericParameterInfoVisitor.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter.GenericParameterInfoVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax",
                    "System.Collections.Generic.List",
                    "T",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax"
                  ],
                  "methods": [
                    {
                      "name": "Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IGenericParameterType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Parameter/GenericParameterInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Parameter.GenericParameterInfoVisitor@ExtractConstraints#Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IGenericParameterType"
                      ]
                    },
                    {
                      "name": "ExtractConstraints#Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IGenericParameterType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Parameter/GenericParameterInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Parameter.GenericParameterInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IGenericParameterType"
                      ],
                      "calledMethods": [
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.Parameter.GenericParameterInfoVisitor@ExtractConstraintsFromParent<DelegateDeclarationSyntax>#",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.Parameter.GenericParameterInfoVisitor@ExtractConstraintsFromParent<BaseTypeDeclarationSyntax>#",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.Parameter.GenericParameterInfoVisitor@ExtractConstraintsFromParent<BaseMethodDeclarationSyntax>#",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.Parameter.GenericParameterInfoVisitor@ExtractConstraintsFromParent<LocalFunctionStatementSyntax>#",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IEntityType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpFullNameProvider.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Linq",
                    "System.Text",
                    "HoneydewCore.Utils",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "bool",
                    "HoneydewModels.Types.GenericType",
                    "System.Collections.Generic.IList",
                    "string",
                    "Microsoft.CodeAnalysis.ISymbol",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax",
                    "int",
                    "Microsoft.CodeAnalysis.SymbolInfo",
                    "Microsoft.CodeAnalysis.TypeInfo",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax",
                    "System.Text.StringBuilder",
                    "Microsoft.CodeAnalysis.IPropertySymbol",
                    "Microsoft.CodeAnalysis.ILocalSymbol",
                    "Microsoft.CodeAnalysis.IFieldSymbol",
                    "Microsoft.CodeAnalysis.IMethodSymbol",
                    "Microsoft.CodeAnalysis.IParameterSymbol",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax",
                    "System.Collections.Generic.HashSet",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax"
                  ],
                  "methods": [
                    {
                      "name": "GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetExpressionType#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->Microsoft.CodeAnalysis.ModelExtensions@GetDeclaredSymbol#Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.ISymbol@ToDisplayString#Microsoft.CodeAnalysis.SymbolDisplayFormat",
                        "->System.Collections.Generic.IEnumerable@FirstOrDefault#",
                        "->System.Linq.Enumerable@OfType<TypeParameterListSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ChildNodes#",
                        "->string@IndexOf#char",
                        "->Microsoft.CodeAnalysis.CSharp.CSharpExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.ISymbol@ToString#",
                        "->string@IsNullOrEmpty#string",
                        "->string@EndsWith#char",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@CreateEntityTypeModel#string,bool",
                        "->Microsoft.CodeAnalysis.CSharp.CSharpExtensions@GetTypeInfo#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.ITypeSymbol@ToString#",
                        "->Microsoft.CodeAnalysis.ModelExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.ISymbol,bool,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "->Microsoft.CodeAnalysis.SyntaxList@ToString#",
                        "->Microsoft.CodeAnalysis.CSharp.CSharpExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,System.Threading.CancellationToken",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@ReconstructFullName#HoneydewModels.Types.GenericType",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<BasePropertyDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#",
                        "->Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax@GetParentDeclarationSyntax<CatchClauseSyntax>#"
                      ]
                    },
                    {
                      "name": "CreateEntityTypeModel#string,bool",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.ISymbol,bool,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetExpressionType#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetBaseInterfaces#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetBaseClassName#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetBaseClassName#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.IMethodSymbol",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetContainingType#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "HoneydewCore/Utils/FullTypeNameBuilder.cs->HoneydewCore.Utils.FullTypeNameBuilder@CreateEntityTypeModel#string,bool"
                      ]
                    },
                    {
                      "name": "ReconstructFullName#HoneydewModels.Types.GenericType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@ReconstructFullName#HoneydewModels.Types.GenericType"
                      ],
                      "calledMethods": [
                        "->System.Text.StringBuilder@Append#string",
                        "->System.Text.StringBuilder@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@ReconstructFullName#HoneydewModels.Types.GenericType"
                      ]
                    },
                    {
                      "name": "GetFullName#Microsoft.CodeAnalysis.ISymbol,bool,bool",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.ISymbol@ToDisplayString#Microsoft.CodeAnalysis.SymbolDisplayFormat",
                        "->string@EndsWith#char",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@CreateEntityTypeModel#string,bool"
                      ]
                    },
                    {
                      "name": "GetFullName#Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetExpressionType#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.CSharp.CSharpExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.ISymbol@ToDisplayString#Microsoft.CodeAnalysis.SymbolDisplayFormat",
                        "->string@EndsWith#char",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@CreateEntityTypeModel#string,bool",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<VariableDeclarationSyntax>#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<BasePropertyDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "GetFullName#Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool"
                      ],
                      "calledMethods": [
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<BasePropertyDeclarationSyntax>#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<BaseFieldDeclarationSyntax>#",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<VariableDeclarationSyntax>#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetExpressionType#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "->System.Collections.Generic.HashSet@Add#string",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->System.Collections.Generic.HashSet@First#",
                        "->System.Collections.Generic.HashSet@Contains#string"
                      ]
                    },
                    {
                      "name": "GetExpressionType#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool"
                      ],
                      "calledMethods": [
                        "->object@GetType#",
                        "->string@IsNullOrEmpty#string",
                        "->string@EndsWith#char",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@CreateEntityTypeModel#string,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.CSharp.Syntax.BaseObjectCreationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ISolutionLoadingStrategy.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ISolutionLoadingStrategy.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ISolutionLoadingStrategy",
                  "type": "interface",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Threading.Tasks",
                    "HoneydewExtractors.Core",
                    "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead",
                    "Microsoft.CodeAnalysis"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.Solution",
                    "string",
                    "System.Collections.Generic.ISet",
                    "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.SolutionLoadingResult",
                    "System.Threading.Tasks.Task"
                  ],
                  "methods": [
                    {
                      "name": "Load#Microsoft.CodeAnalysis.Solution,HoneydewExtractors.Core.IFactExtractorCreator,System.Collections.Generic.ISet<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IProjectLoadingStrategy.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/IProjectLoadingStrategy.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies.IProjectLoadingStrategy",
                  "type": "interface",
                  "usingStatements": [
                    "System.Threading.Tasks",
                    "HoneydewExtractors.Core",
                    "HoneydewModels.CSharp",
                    "Microsoft.CodeAnalysis"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Microsoft.CodeAnalysis.Project",
                    "HoneydewModels.CSharp.ProjectModel",
                    "System.Threading.Tasks.Task"
                  ],
                  "methods": [
                    {
                      "name": "Load#Microsoft.CodeAnalysis.Project,HoneydewExtractors.Core.IFactExtractorCreator",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ActualFilePathProvider.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider",
                  "type": "Class",
                  "usingStatements": ["System.IO"],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "string",
                    "System.IO.DirectoryInfo",
                    "System.IO.FileInfo"
                  ],
                  "methods": [
                    {
                      "name": "GetActualFilePath#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/BasicSolutionLoadingStrategy.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.BasicSolutionLoadingStrategy@Load#Microsoft.CodeAnalysis.Solution,HoneydewExtractors.Core.IFactExtractorCreator,System.Collections.Generic.ISet<string>",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/BasicProjectLoadingStrategy.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.BasicProjectLoadingStrategy@Load#Microsoft.CodeAnalysis.Project,HoneydewExtractors.Core.IFactExtractorCreator",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ParallelSolutionLoadingStrategy.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ParallelSolutionLoadingStrategy@Load#Microsoft.CodeAnalysis.Solution,HoneydewExtractors.Core.IFactExtractorCreator,System.Collections.Generic.ISet<string>",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ParallelProjectLoadingStrategy.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ParallelProjectLoadingStrategy@Load#Microsoft.CodeAnalysis.Project,HoneydewExtractors.Core.IFactExtractorCreator"
                      ],
                      "calledMethods": [
                        "->System.IO.File@Exists#string",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider@GetProperFilePathCapitalization#string",
                        "->System.IO.Directory@Exists#string",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider@GetProperDirectoryCapitalization#System.IO.DirectoryInfo"
                      ]
                    },
                    {
                      "name": "GetProperDirectoryCapitalization#System.IO.DirectoryInfo",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider@GetActualFilePath#string",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider@GetProperDirectoryCapitalization#System.IO.DirectoryInfo",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider@GetProperFilePathCapitalization#string"
                      ],
                      "calledMethods": [
                        "->System.IO.Path@Combine#string,string",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider@GetProperDirectoryCapitalization#System.IO.DirectoryInfo",
                        "->System.IO.DirectoryInfo@GetDirectories#string"
                      ]
                    },
                    {
                      "name": "GetProperFilePathCapitalization#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider@GetActualFilePath#string"
                      ],
                      "calledMethods": [
                        "->System.IO.Path@Combine#string,string",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider@GetProperDirectoryCapitalization#System.IO.DirectoryInfo",
                        "->System.IO.DirectoryInfo@GetFiles#string"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": ".NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "path": "HoneydewExtractors/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "namespaces": []
        },
        {
          "name": "HoneydewExtractors.AssemblyInfo.cs",
          "path": "HoneydewExtractors/obj/Debug/net6.0/HoneydewExtractors.AssemblyInfo.cs",
          "namespaces": []
        },
        {
          "name": "CSharpExtractionHelperContainingTypes.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewCore.Utils",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string",
                    "Microsoft.CodeAnalysis.ISymbol",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseNamespaceDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax",
                    "Microsoft.CodeAnalysis.SymbolInfo",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax",
                    "Microsoft.CodeAnalysis.IFieldSymbol",
                    "Microsoft.CodeAnalysis.ILocalSymbol",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.IMethodSymbol",
                    "Microsoft.CodeAnalysis.IPropertySymbol",
                    "bool"
                  ],
                  "methods": [
                    {
                      "name": "GetContainingNamespaceName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/BaseInfoClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.BaseInfoClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Enum/BaseInfoEnumVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Enum.BaseInfoEnumVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Delegate/BaseInfoDelegateVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Delegate.BaseInfoDelegateVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.ModelExtensions@GetDeclaredSymbol#Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.INamespaceSymbol@ToString#",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<BaseNamespaceDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "GetContainingClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/BaseInfoClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.BaseInfoClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Enum/BaseInfoEnumVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Enum.BaseInfoEnumVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Delegate/BaseInfoDelegateVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Delegate.BaseInfoDelegateVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType"
                      ],
                      "calledMethods": [
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<BaseTypeDeclarationSyntax>#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    },
                    {
                      "name": "GetDefinitionClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorCallsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorCallsVisitor@ExtractInfoAboutConstructorCalls#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetLocationClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetMethodCallModel#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetAccessField#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.ModelExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.INamedTypeSymbol@ToString#",
                        "->Microsoft.CodeAnalysis.ITypeSymbol@ToString#",
                        "->Microsoft.CodeAnalysis.ISymbol@ToString#",
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<BaseTypeDeclarationSyntax>#"
                      ]
                    },
                    {
                      "name": "GetLocationClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorCallsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorCallsVisitor@ExtractInfoAboutConstructorCalls#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetMethodCallModel#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetAccessField#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetLocationClassNameFromMemberAccessExpressionSyntax#Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax,string",
                        "->Microsoft.CodeAnalysis.ModelExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.ITypeSymbol@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetDefinitionClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "BasicSolutionLoadingStrategy.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/BasicSolutionLoadingStrategy.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies.BasicSolutionLoadingStrategy",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Linq",
                    "System.Threading.Tasks",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core",
                    "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead",
                    "HoneydewModels.CSharp",
                    "Microsoft.CodeAnalysis"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Microsoft.CodeAnalysis.Solution",
                    "string",
                    "System.Collections.Generic.ISet",
                    "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.SolutionLoadingResult",
                    "System.Threading.Tasks.Task",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.CSharp.SolutionModel",
                    "int",
                    "Microsoft.CodeAnalysis.ProjectDependencyGraph",
                    "HoneydewModels.CSharp.ProjectModel",
                    "System.Collections.Generic.List",
                    "Microsoft.CodeAnalysis.Project",
                    "Microsoft.CodeAnalysis.ProjectId"
                  ],
                  "methods": [
                    {
                      "name": "Load#Microsoft.CodeAnalysis.Solution,HoneydewExtractors.Core.IFactExtractorCreator,System.Collections.Generic.ISet<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["none", "public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider@GetActualFilePath#string",
                        "->System.Collections.Generic.IEnumerable@Count#",
                        "->HoneydewCore.Logging.IProgressLogger@CreateProgressLogger#int,string",
                        "->HoneydewCore.Logging.IProgressLoggerBar@Start#",
                        "->Microsoft.CodeAnalysis.Solution@GetProjectDependencyGraph#",
                        "->Microsoft.CodeAnalysis.ProjectDependencyGraph@GetTopologicallySortedProjects#System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.Solution@GetProject#Microsoft.CodeAnalysis.ProjectId",
                        "->System.Collections.Generic.IList@Add#string",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.IProjectLoadingStrategy@Load#Microsoft.CodeAnalysis.Project,HoneydewExtractors.Core.IFactExtractorCreator",
                        "->HoneydewCore.Logging.IProgressLoggerBar@Step#string",
                        "->System.Collections.Generic.ICollection@Contains#string",
                        "->HoneydewCore.Logging.IProgressLogger@Log#object",
                        "->System.Collections.Generic.List@Add#HoneydewModels.CSharp.ProjectModel",
                        "->HoneydewCore.Logging.IProgressLoggerBar@Stop#"
                      ]
                    },
                    {
                      "name": "BasicSolutionLoadingStrategy#HoneydewCore.Logging.ILogger,HoneydewExtractors.CSharp.RepositoryLoading.Strategies.IProjectLoadingStrategy,HoneydewCore.Logging.IProgressLogger",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "BasicProjectLoadingStrategy.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/BasicProjectLoadingStrategy.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies.BasicProjectLoadingStrategy",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Linq",
                    "System.Threading.Tasks",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core",
                    "HoneydewModels.CSharp",
                    "Microsoft.CodeAnalysis"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Microsoft.CodeAnalysis.Project",
                    "HoneydewModels.CSharp.ProjectModel",
                    "System.Threading.Tasks.Task",
                    "string",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.Compilation",
                    "int",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "string[]"
                  ],
                  "methods": [
                    {
                      "name": "Load#Microsoft.CodeAnalysis.Project,HoneydewExtractors.Core.IFactExtractorCreator",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["none", "public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider@GetActualFilePath#string",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.IReadOnlyList@Select#System.Func<Microsoft.CodeAnalysis.ProjectReference, string>",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/BasicProjectLoadingStrategy.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.BasicProjectLoadingStrategy@ExtractPathFromProjectId#string",
                        "->Microsoft.CodeAnalysis.ProjectId@ToString#",
                        "->HoneydewExtractors.Core.IFactExtractorCreator@Create#string",
                        "->Microsoft.CodeAnalysis.Project@GetCompilationAsync#System.Threading.CancellationToken",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IEnumerable@Count#",
                        "->Microsoft.CodeAnalysis.Compilation@GetSemanticModel#Microsoft.CodeAnalysis.SyntaxTree,bool",
                        "->HoneydewExtractors.Core.Metrics.Extraction.IFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewModels/CSharp/ProjectModel.cs->HoneydewModels.CSharp.ProjectModel@Add#HoneydewModels.Types.ICompilationUnitType"
                      ]
                    },
                    {
                      "name": "ExtractPathFromProjectId#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/BasicProjectLoadingStrategy.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.BasicProjectLoadingStrategy@Load#Microsoft.CodeAnalysis.Project,HoneydewExtractors.Core.IFactExtractorCreator"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrEmpty#string",
                        "->string@Split#string,System.StringSplitOptions"
                      ]
                    },
                    {
                      "name": "BasicProjectLoadingStrategy#HoneydewCore.Logging.ILogger",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ParallelSolutionLoadingStrategy.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ParallelSolutionLoadingStrategy.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ParallelSolutionLoadingStrategy",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Linq",
                    "System.Threading",
                    "System.Threading.Tasks",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core",
                    "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead",
                    "HoneydewModels.CSharp",
                    "Microsoft.CodeAnalysis"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Microsoft.CodeAnalysis.Solution",
                    "string",
                    "System.Collections.Generic.ISet",
                    "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.SolutionLoadingResult",
                    "System.Threading.Tasks.Task",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.CSharp.SolutionModel",
                    "int",
                    "Microsoft.CodeAnalysis.ProjectDependencyGraph",
                    "HoneydewModels.CSharp.ProjectModel",
                    "System.Collections.Generic.List",
                    "System.Threading.Semaphore",
                    "Microsoft.CodeAnalysis.Project"
                  ],
                  "methods": [
                    {
                      "name": "Load#Microsoft.CodeAnalysis.Solution,HoneydewExtractors.Core.IFactExtractorCreator,System.Collections.Generic.ISet<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["none", "public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider@GetActualFilePath#string",
                        "->System.Collections.Generic.IEnumerable@Count#",
                        "->HoneydewCore.Logging.IProgressLogger@CreateProgressLogger#int,string",
                        "->HoneydewCore.Logging.IProgressLoggerBar@Start#",
                        "->Microsoft.CodeAnalysis.Solution@GetProjectDependencyGraph#",
                        "->System.Threading.Tasks.Parallel@ForEachAsync#System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.ProjectId>,System.Func<Microsoft.CodeAnalysis.ProjectId, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>",
                        "->Microsoft.CodeAnalysis.ProjectDependencyGraph@GetTopologicallySortedProjects#System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.Solution@GetProject#Microsoft.CodeAnalysis.ProjectId",
                        "->System.Threading.Semaphore@WaitOne#",
                        "->System.Collections.Generic.IList@Add#string",
                        "->System.Threading.Semaphore@Release#",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.IProjectLoadingStrategy@Load#Microsoft.CodeAnalysis.Project,HoneydewExtractors.Core.IFactExtractorCreator",
                        "->HoneydewCore.Logging.IProgressLoggerBar@Step#string",
                        "->System.Collections.Generic.ICollection@Contains#string",
                        "->HoneydewCore.Logging.IProgressLogger@Log#object",
                        "->System.Collections.Generic.List@Add#HoneydewModels.CSharp.ProjectModel",
                        "->System.Threading.Interlocked@Increment#int",
                        "->HoneydewCore.Logging.IProgressLoggerBar@Stop#"
                      ]
                    },
                    {
                      "name": "ParallelSolutionLoadingStrategy#HoneydewCore.Logging.ILogger,HoneydewExtractors.CSharp.RepositoryLoading.Strategies.IProjectLoadingStrategy,HoneydewCore.Logging.IProgressLogger",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ParallelProjectLoadingStrategy.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ParallelProjectLoadingStrategy.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ParallelProjectLoadingStrategy",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Linq",
                    "System.Threading",
                    "System.Threading.Tasks",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core",
                    "HoneydewModels.CSharp",
                    "Microsoft.CodeAnalysis"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Microsoft.CodeAnalysis.Project",
                    "HoneydewModels.CSharp.ProjectModel",
                    "System.Threading.Tasks.Task",
                    "string",
                    "System.Collections.Generic.IList",
                    "int",
                    "System.Threading.Semaphore",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "string[]"
                  ],
                  "methods": [
                    {
                      "name": "Load#Microsoft.CodeAnalysis.Project,HoneydewExtractors.Core.IFactExtractorCreator",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["none", "public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ActualFilePathProvider.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ActualFilePathProvider@GetActualFilePath#string",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.IReadOnlyList@Select#System.Func<Microsoft.CodeAnalysis.ProjectReference, string>",
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ParallelProjectLoadingStrategy.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ParallelProjectLoadingStrategy@ExtractPathFromProjectId#string",
                        "->Microsoft.CodeAnalysis.ProjectId@ToString#",
                        "->HoneydewExtractors.Core.IFactExtractorCreator@Create#string",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->System.Collections.Generic.IEnumerable@Count#",
                        "->System.Threading.Tasks.Parallel@ForEachAsync#System.Collections.Generic.IEnumerable<Microsoft.CodeAnalysis.Document>,System.Func<Microsoft.CodeAnalysis.Document, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>",
                        "->Microsoft.CodeAnalysis.Document@GetSyntaxTreeAsync#System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.Document@GetSemanticModelAsync#System.Threading.CancellationToken",
                        "->HoneydewExtractors.Core.Metrics.Extraction.IFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Threading.Semaphore@WaitOne#",
                        "HoneydewModels/CSharp/ProjectModel.cs->HoneydewModels.CSharp.ProjectModel@Add#HoneydewModels.Types.ICompilationUnitType",
                        "->System.Threading.Semaphore@Release#",
                        "->System.Threading.Interlocked@Increment#int"
                      ]
                    },
                    {
                      "name": "ExtractPathFromProjectId#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/Strategies/ParallelProjectLoadingStrategy.cs->HoneydewExtractors.CSharp.RepositoryLoading.Strategies.ParallelProjectLoadingStrategy@Load#Microsoft.CodeAnalysis.Project,HoneydewExtractors.Core.IFactExtractorCreator"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrEmpty#string",
                        "->string@Split#string,System.StringSplitOptions"
                      ]
                    },
                    {
                      "name": "ParallelProjectLoadingStrategy#HoneydewCore.Logging.ILogger",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpRepositoryLoader.cs",
          "path": "HoneydewExtractors/CSharp/RepositoryLoading/CSharpRepositoryLoader.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.RepositoryLoading",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.RepositoryLoading.CSharpRepositoryLoader",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Linq",
                    "System.Threading",
                    "System.Threading.Tasks",
                    "HoneydewCore.IO.Readers",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead",
                    "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead",
                    "HoneydewExtractors.CSharp.RepositoryLoading.Strategies",
                    "HoneydewModels.CSharp"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpCompilationMaker",
                    "bool",
                    "string",
                    "object",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewCore.IO.Readers.IRepositoryLoader",
                    "System.Threading.Tasks.Task",
                    "HoneydewModels.CSharp.SolutionModel",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.CSharp.ProjectModel",
                    "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.SolutionFileLoader",
                    "System.Collections.Generic.HashSet",
                    "HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.SolutionLoadingResult",
                    "HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead.ProjectLoader",
                    "string[]",
                    "int",
                    "System.Collections.Generic.List",
                    "System.Threading.Semaphore",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel"
                  ],
                  "methods": [
                    {
                      "name": "Load#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["none", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.IO.File@Exists#string",
                        "->string@EndsWith#string",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->HoneydewCore.Logging.IProgressLogger@Log#object",
                        "->HoneydewCore.Logging.IProgressLogger@Log#",
                        "->HoneydewCore.Logging.IProgressLogger@CreateProgressBars#System.Collections.Generic.IEnumerable<string>",
                        "HoneydewExtractors/CSharp/RepositoryLoading/CSharpRepositoryLoader.cs->HoneydewExtractors.CSharp.RepositoryLoading.CSharpRepositoryLoader@GetSolutionLoadingStrategy#HoneydewCore.Logging.ILogger,HoneydewCore.Logging.IProgressLogger,HoneydewExtractors.CSharp.RepositoryLoading.Strategies.IProjectLoadingStrategy,bool",
                        "HoneydewExtractors/CSharp/RepositoryLoading/CSharpRepositoryLoader.cs->HoneydewExtractors.CSharp.RepositoryLoading.CSharpRepositoryLoader@GetProjectLoadingStrategy#HoneydewCore.Logging.ILogger,bool",
                        "HoneydewExtractors/CSharp/RepositoryLoading/SolutionRead/SolutionFileLoader.cs->HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.SolutionFileLoader@LoadSolution#string,System.Collections.Generic.ISet<string>",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.SolutionModel",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.ProjectModel",
                        "HoneydewExtractors/CSharp/RepositoryLoading/ProjectRead/ProjectLoader.cs->HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead.ProjectLoader@Load#string",
                        "->System.IO.Directory@Exists#string",
                        "->System.IO.Directory@GetFiles#string,string,System.IO.SearchOption",
                        "->System.Collections.Generic.HashSet@Add#string",
                        "->HoneydewCore.Logging.IProgressLogger@StopProgressBar#string",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.IEnumerable@Where#System.Func<string, bool>",
                        "->System.Linq.Enumerable@Select#System.Func<string, string>",
                        "->System.Collections.Generic.HashSet@Contains#string",
                        "->HoneydewCore.Logging.IProgressLogger@CreateProgressLogger#int,string",
                        "->HoneydewCore.Logging.IProgressLoggerBar@Start#",
                        "->System.Threading.Tasks.Parallel@ForEachAsync#System.Collections.Generic.IEnumerable<string>,System.Func<string, System.Threading.CancellationToken, System.Threading.Tasks.ValueTask>",
                        "->HoneydewCore.Logging.IProgressLoggerBar@Step#string",
                        "->System.Threading.Semaphore@WaitOne#",
                        "->System.Threading.Semaphore@Release#",
                        "->HoneydewCore.Logging.IProgressLoggerBar@Stop#",
                        "->HoneydewExtractors.Core.IFactExtractorCreator@Create#string",
                        "->System.IO.File@ReadAllTextAsync#string,System.Threading.CancellationToken",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "->HoneydewExtractors.Core.Metrics.Extraction.IFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewModels/CSharp/ProjectModel.cs->HoneydewModels.CSharp.ProjectModel@Add#HoneydewModels.Types.ICompilationUnitType"
                      ]
                    },
                    {
                      "name": "GetProjectLoadingStrategy#HoneydewCore.Logging.ILogger,bool",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/CSharpRepositoryLoader.cs->HoneydewExtractors.CSharp.RepositoryLoading.CSharpRepositoryLoader@Load#string"
                      ],
                      "calledMethods": []
                    },
                    {
                      "name": "GetSolutionLoadingStrategy#HoneydewCore.Logging.ILogger,HoneydewCore.Logging.IProgressLogger,HoneydewExtractors.CSharp.RepositoryLoading.Strategies.IProjectLoadingStrategy,bool",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/RepositoryLoading/CSharpRepositoryLoader.cs->HoneydewExtractors.CSharp.RepositoryLoading.CSharpRepositoryLoader@Load#string"
                      ],
                      "calledMethods": []
                    },
                    {
                      "name": "CSharpRepositoryLoader#HoneydewExtractors.CSharp.RepositoryLoading.SolutionRead.ISolutionProvider,HoneydewExtractors.CSharp.RepositoryLoading.ProjectRead.IProjectProvider,HoneydewCore.Logging.ILogger,HoneydewCore.Logging.IProgressLogger,HoneydewCore.Logging.ILogger,HoneydewExtractors.Core.IFactExtractorCreator,HoneydewExtractors.CSharp.Metrics.CSharpCompilationMaker,bool",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpExtractionHelperMethods.cs",
          "path": "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractors.CSharp.Metrics.Extraction",
              "classes": [
                {
                  "name": "HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "System.Text",
                    "HoneydewCore.Utils",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Microsoft.CodeAnalysis",
                    "Microsoft.CodeAnalysis.CSharp",
                    "Microsoft.CodeAnalysis.CSharp.Syntax"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Microsoft.CodeAnalysis.SyntaxNode",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "bool",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax",
                    "System.Collections.Generic.IEnumerable",
                    "Microsoft.CodeAnalysis.INamedTypeSymbol",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.ITypeSymbol",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax",
                    "string",
                    "Microsoft.CodeAnalysis.ISymbol",
                    "Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode",
                    "Microsoft.CodeAnalysis.IMethodSymbol",
                    "Microsoft.CodeAnalysis.SymbolInfo",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax",
                    "HoneydewModels.CSharp.MethodCallModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax",
                    "System.Collections.Generic.List",
                    "int",
                    "Microsoft.CodeAnalysis.IParameterSymbol",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterSyntax",
                    "HoneydewModels.CSharp.ParameterModel",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax",
                    "System.Text.StringBuilder",
                    "Microsoft.CodeAnalysis.TypeInfo",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax",
                    "Microsoft.CodeAnalysis.CSharp.SyntaxKind",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax",
                    "HoneydewModels.Types.AccessedField",
                    "Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax"
                  ],
                  "methods": [
                    {
                      "name": "GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Field/FieldInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Field.FieldInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,System.Collections.Generic.IList<HoneydewModels.Types.IFieldType>",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Method/MethodInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Method.MethodInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Method/MethodInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Method.MethodInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Method/MethodInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Method.MethodInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Property/PropertyInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Property.PropertyInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IPropertyType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/LocalVariables/LocalVariableInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.LocalVariables.LocalVariableInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/LocalVariables/LocalVariableInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.LocalVariables.LocalVariableInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/LocalVariables/LocalVariableInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.LocalVariables.LocalVariableInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType",
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctions/LocalFunctionInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions.LocalFunctionInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@ExtractInfoAboutParameter#Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool"
                      ]
                    },
                    {
                      "name": "GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Attribute/AttributeInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Attribute.AttributeInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAttributeType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/BaseInfoClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.BaseInfoClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ExceptionsThrownRelationVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ExceptionsThrownRelationVisitor@AddDependencies#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ObjectCreationRelationVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ObjectCreationRelationVisitor@AddDependencies#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Enum/BaseInfoEnumVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Enum.BaseInfoEnumVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IEnumType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Delegate/BaseInfoDelegateVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Delegate.BaseInfoDelegateVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Parameter/GenericParameterInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Parameter.GenericParameterInfoVisitor@ExtractConstraints#Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IGenericParameterType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetContainingClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetContainingType#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool"
                      ]
                    },
                    {
                      "name": "GetBaseInterfaces#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/BaseTypesClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.BaseTypesClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.CSharp.CSharpExtensions@GetDeclaredSymbol#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,System.Threading.CancellationToken",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IEntityType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@CreateEntityTypeModel#string,bool",
                        "->Microsoft.CodeAnalysis.INamedTypeSymbol@ToString#"
                      ]
                    },
                    {
                      "name": "GetBaseClassName#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetBaseClassName#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.ModelExtensions@GetDeclaredSymbol#Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@CreateEntityTypeModel#string,bool",
                        "->Microsoft.CodeAnalysis.INamedTypeSymbol@ToString#"
                      ]
                    },
                    {
                      "name": "GetBaseClassName#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/BaseTypesClassVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.BaseTypesClassVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMembersClassType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorCallsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorCallsVisitor@ExtractInfoAboutConstructorCalls#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetBaseClassName#Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@CreateEntityTypeModel#string,bool"
                      ]
                    },
                    {
                      "name": "GetMethodSymbol#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorCallsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorCallsVisitor@ExtractInfoAboutConstructorCalls#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetGenericParameters#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.ModelExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken"
                      ]
                    },
                    {
                      "name": "GetMethodCallModel#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/MethodCall/MethodCallInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall.MethodCallInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodCallType"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetDefinitionClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetLocationClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetMethodDefinitionNames#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetGenericParameters#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    },
                    {
                      "name": "GetGenericParameters#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetMethodCallModel#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetMethodSymbol#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Linq.Enumerable@Cast<IEntityType>#",
                        "->System.Collections.Immutable.ImmutableArray@Select#System.Func<Microsoft.CodeAnalysis.ITypeParameterSymbol, HoneydewModels.CSharp.EntityTypeModel>",
                        "HoneydewCore/Utils/FullTypeNameBuilder.cs->HoneydewCore.Utils.FullTypeNameBuilder@CreateEntityTypeModel#string,bool"
                      ]
                    },
                    {
                      "name": "GetMethodDefinitionNames#Microsoft.CodeAnalysis.ISymbol",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetMethodDefinitionNames#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.ISymbol@ToString#",
                        "->Microsoft.CodeAnalysis.INamespaceSymbol@ToString#",
                        "->string@Trim#char",
                        "->string@Replace#string,string",
                        "->string@IndexOf#string,System.StringComparison",
                        "->string@Remove#int",
                        "->System.Collections.Generic.List@Add#string",
                        "->string@Join#string,System.Collections.Generic.IEnumerable<string?>",
                        "->System.Collections.Immutable.ImmutableArray@Select#System.Func<Microsoft.CodeAnalysis.IParameterSymbol, string>",
                        "->Microsoft.CodeAnalysis.ITypeSymbol@ToString#",
                        "->System.Collections.Generic.List@Reverse#"
                      ]
                    },
                    {
                      "name": "GetMethodDefinitionNames#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetMethodCallModel#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.CSharp.CSharpExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetMethodDefinitionNames#Microsoft.CodeAnalysis.ISymbol"
                      ]
                    },
                    {
                      "name": "GetParameters#Microsoft.CodeAnalysis.IMethodSymbol",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorCallsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorCallsVisitor@ExtractInfoAboutConstructorCalls#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "->object@ToString#",
                        "->string@ToLower#",
                        "->System.Collections.Generic.IList@Add#HoneydewModels.Types.IParameterType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@CreateEntityTypeModel#string,bool",
                        "->Microsoft.CodeAnalysis.ITypeSymbol@ToString#"
                      ]
                    },
                    {
                      "name": "GetAliasTypeOfNamespace#Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Common/ImportsVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor@GetUsingModelFromUsingSyntax#Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.ModelExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken",
                        "->@nameof#HoneydewModels.Types.EAliasType"
                      ]
                    },
                    {
                      "name": "ExtractInfoAboutParameter#Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Parameter/ParameterInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Parameter.ParameterInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IParameterType"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,bool",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#",
                        "->Microsoft.CodeAnalysis.SyntaxTokenList@ToString#"
                      ]
                    },
                    {
                      "name": "GetContainingType#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Class/Relations/ObjectCreationRelationVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations.ObjectCreationRelationVisitor@AddDependencies#Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "->string@IsNullOrEmpty#string",
                        "->Microsoft.CodeAnalysis.ModelExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.ISymbol@ToDisplayString#Microsoft.CodeAnalysis.SymbolDisplayFormat",
                        "->System.Text.StringBuilder@Append#string",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@CreateEntityTypeModel#string,bool",
                        "->System.Text.StringBuilder@ToString#",
                        "->Microsoft.CodeAnalysis.ModelExtensions@GetTypeInfo#Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<BaseFieldDeclarationSyntax>#",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<BasePropertyDeclarationSyntax>#",
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<VariableDeclarationSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "GetParameters#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetMethodCallModel#Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetMethodSymbol#Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "->Microsoft.CodeAnalysis.ModelExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken",
                        "->System.Collections.Generic.List@Add#HoneydewModels.Types.IParameterType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@CreateEntityTypeModel#string,bool",
                        "->object@GetType#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.IMethodSymbol"
                      ]
                    },
                    {
                      "name": "SetTypeModifier#string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Method/MethodInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Method.MethodInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Property/PropertyInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Property.PropertyInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IPropertyType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/LocalVariables/LocalVariableInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.LocalVariables.LocalVariableInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.ILocalVariableType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Delegate/BaseInfoDelegateVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Delegate.BaseInfoDelegateVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDelegateType",
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctions/LocalFunctionInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions.LocalFunctionInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions"
                      ],
                      "calledMethods": [
                        "->string@StartsWith#string",
                        "->string@Trim#"
                      ]
                    },
                    {
                      "name": "CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Method/MethodInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Method.MethodInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexityForSyntaxNode#Microsoft.CodeAnalysis.SyntaxNode"
                      ]
                    },
                    {
                      "name": "CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Method/MethodInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Method.MethodInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAccessorType"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexityForSyntaxNode#Microsoft.CodeAnalysis.SyntaxNode"
                      ]
                    },
                    {
                      "name": "CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Constructor/ConstructorInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Constructor.ConstructorInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IConstructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Destructor/DestructorInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Destructor.DestructorInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IDestructorType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Method/MethodInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Method.MethodInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Property/PropertyInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Property.PropertyInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IPropertyType"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexityForSyntaxNode#Microsoft.CodeAnalysis.SyntaxNode"
                      ]
                    },
                    {
                      "name": "CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Visitors/Method/LocalFunctions/LocalFunctionInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions.LocalFunctionInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IMethodTypeWithLocalFunctions"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexityForSyntaxNode#Microsoft.CodeAnalysis.SyntaxNode"
                      ]
                    },
                    {
                      "name": "IsAbstractModifier#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexityForSyntaxNode#Microsoft.CodeAnalysis.SyntaxNode"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@Count#System.Func<Microsoft.CodeAnalysis.SyntaxToken, bool>",
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantTokens#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "->Microsoft.CodeAnalysis.CSharp.CSharpExtensions@Kind#"
                      ]
                    },
                    {
                      "name": "CalculateCyclomaticComplexityForSyntaxNode#Microsoft.CodeAnalysis.SyntaxNode",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.SyntaxNode@DescendantNodes#System.Func<Microsoft.CodeAnalysis.SyntaxNode, bool>,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@CalculateCyclomaticComplexity#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax",
                        "->Microsoft.CodeAnalysis.CSharp.CSharpExtensions@Kind#"
                      ]
                    },
                    {
                      "name": "GetParameters#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Attribute/AttributeInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Attribute.AttributeInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAttributeType"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.CSharp.CSharpExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,System.Threading.CancellationToken",
                        "->Microsoft.CodeAnalysis.CSharp.CSharpExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken",
                        "->System.Collections.Generic.List@Add#HoneydewModels.Types.IParameterType",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetFullName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "->object@GetType#",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpFullNameProvider.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpFullNameProvider@CreateEntityTypeModel#string,bool",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetParameters#Microsoft.CodeAnalysis.IMethodSymbol"
                      ]
                    },
                    {
                      "name": "GetAttributeTarget#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/Attribute/AttributeInfoVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.Attribute.AttributeInfoVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.IAttributeType"
                      ],
                      "calledMethods": [
                        "->HoneydewExtractors.CSharp.Metrics.Extraction.SyntaxNodeExtensions@GetParentDeclarationSyntax<AttributeListSyntax>#",
                        "->Microsoft.CodeAnalysis.SyntaxToken@ToString#"
                      ]
                    },
                    {
                      "name": "GetAccessField#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/AccessField/AccessFieldVisitor.cs->HoneydewExtractors.CSharp.Metrics.Extraction.AccessField.AccessFieldVisitor@Visit#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel,HoneydewModels.Types.AccessedField"
                      ],
                      "calledMethods": [
                        "->Microsoft.CodeAnalysis.CSharp.CSharpExtensions@GetSymbolInfo#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetDefinitionClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperContainingTypes.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetLocationClassName#Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetAccessType#Microsoft.CodeAnalysis.SyntaxNode",
                        "->Microsoft.CodeAnalysis.SyntaxNode@ToString#"
                      ]
                    },
                    {
                      "name": "GetAccessType#Microsoft.CodeAnalysis.SyntaxNode",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractors/CSharp/Metrics/Extraction/CSharpExtractionHelperMethods.cs->HoneydewExtractors.CSharp.Metrics.Extraction.CSharpExtractionHelperMethods@GetAccessField#Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SemanticModel"
                      ],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "projectReferences": ["HoneydewCore", "HoneydewModels"],
      "externalReferences": []
    },
    {
      "name": "HoneydewTests",
      "path": "HoneydewTests/HoneydewTests.csproj",
      "files": [
        {
          "name": "JsonSolutionModelImporterTests.cs",
          "path": "HoneydewTests/IO/Models/Importers/JsonSolutionModelImporterTests.cs",
          "namespaces": []
        },
        {
          "name": "SolutionModelJsonExporterTests.cs",
          "path": "HoneydewTests/IO/Writers/Exporters/SolutionModelJsonExporterTests.cs",
          "namespaces": []
        },
        {
          "name": "FileDataAttribute.cs",
          "path": "HoneydewTests/FileDataAttribute.cs",
          "namespaces": [
            {
              "name": "HoneydewTests",
              "classes": [
                {
                  "name": "HoneydewTests.FileDataAttribute",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Reflection",
                    "Xunit.Sdk"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "Xunit.Sdk.DataAttribute",
                    "System.Reflection.MethodInfo",
                    "object[]",
                    "System.Collections.Generic.IEnumerable",
                    "System.Threading.Tasks.Task"
                  ],
                  "methods": [
                    {
                      "name": "GetData#System.Reflection.MethodInfo",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.IO.File@ReadAllTextAsync#string,System.Threading.CancellationToken"
                      ]
                    },
                    {
                      "name": "FileDataAttribute#string,bool",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.IO.Path@Combine#string,string",
                        "->System.IO.Directory@GetCurrentDirectory#"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MultiFileDataAttribute.cs",
          "path": "HoneydewTests/MultiFileDataAttribute.cs",
          "namespaces": [
            {
              "name": "HoneydewTests",
              "classes": [
                {
                  "name": "HoneydewTests.MultiFileDataAttribute",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Linq",
                    "System.Reflection",
                    "System.Threading.Tasks",
                    "Xunit.Sdk"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string[]",
                    "Xunit.Sdk.DataAttribute",
                    "System.Reflection.MethodInfo",
                    "object[]",
                    "System.Collections.Generic.IEnumerable",
                    "string",
                    "System.Threading.Tasks.Task"
                  ],
                  "methods": [
                    {
                      "name": "GetData#System.Reflection.MethodInfo",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->string[]@Select#System.Func<string, System.Threading.Tasks.Task<string>>",
                        "->System.IO.File@ReadAllTextAsync#string,System.Threading.CancellationToken",
                        "->System.Threading.Tasks.Task@WhenAll#System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task<string>>",
                        "->System.Array@ConvertAll<string, object>#string[],System.Converter<string, object>"
                      ]
                    },
                    {
                      "name": "MultiFileDataAttribute#string[]",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToArray#",
                        "->System.Linq.Enumerable@Select#System.Func<string, string>",
                        "->System.IO.Path@Combine#string,string",
                        "->System.IO.Directory@GetCurrentDirectory#"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ProjectNamespaceTests.cs",
          "path": "HoneydewTests/Models/ProjectNamespaceTests.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.Models",
              "classes": [
                {
                  "name": "HoneydewTests.Models.ProjectNamespaceTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewModels.CSharp.NamespaceModel",
                    "object",
                    "void",
                    "string",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.CSharp.MetricModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Add_ShouldAddNewClass_WhenClassIsFromDefaultNamespace#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewModels/CSharp/NamespaceModel.cs->HoneydewModels.CSharp.NamespaceModel@Add#HoneydewModels.Types.IClassType",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Add_ShouldAddNewClass_WhenANewClassModelIsAdded#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewModels/CSharp/NamespaceModel.cs->HoneydewModels.CSharp.NamespaceModel@Add#HoneydewModels.Types.IClassType",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Add_ShouldAddNewClasses_WhenMultipleClassNamesAreAdded#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewModels/CSharp/NamespaceModel.cs->HoneydewModels.CSharp.NamespaceModel@Add#HoneydewModels.Types.IClassType",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Add_ShouldAddNewClassOnce_WhenTheSameClassNamesAdded#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewModels/CSharp/NamespaceModel.cs->HoneydewModels.CSharp.NamespaceModel@Add#HoneydewModels.Types.IClassType",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Add_ShouldNotAddClassOnce_WhenNamespaceIsDifferentInClass#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewModels/CSharp/NamespaceModel.cs->HoneydewModels.CSharp.NamespaceModel@Add#HoneydewModels.Types.IClassType",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Add_ShouldAddClassModelWithAllAttributes_WhenMultipleClassNamesAreAdded#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewModels.CSharp.MetricModel",
                        "HoneydewModels/CSharp/NamespaceModel.cs->HoneydewModels.CSharp.NamespaceModel@Add#HoneydewModels.Types.IClassType",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "ProjectNamespaceTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ClassRelationsRepresentationTests.cs",
          "path": "HoneydewTests/Models/Representations/ClassRelationsRepresentationTests.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.Models.Representations",
              "classes": [
                {
                  "name": "HoneydewTests.Models.Representations.ClassRelationsRepresentationTests",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewCore.ModelRepresentations",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewCore.ModelRepresentations.RelationsRepresentation",
                    "object",
                    "string",
                    "void",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "System.Collections.Generic.ISet"
                  ],
                  "methods": [
                    {
                      "name": "Add_ShouldHaveNoRelations_WhenAddedEmptySource#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string,string,string,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Add_WithOneParameter_ShouldHaveNoRelations_WhenAddedEmptySource#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Add_ShouldHaveNoRelations_WhenAddedEmptyTarget#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string,string,string,int",
                        "->Xunit.Assert@NotEmpty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Add_ShouldHaveNoRelations_WhenAddedEmptyDependency#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string,string,string,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Add_ShouldHaveRelation_WhenAddedOneDependency#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string,string,string,int",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@True#bool",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, int>>",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,System.Collections.Generic.IDictionary<string, int>",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,int",
                        "->System.Collections.Generic.ICollection@Contains#string"
                      ]
                    },
                    {
                      "name": "Add_ShouldHaveRelation_WhenAddedTwoDependenciesForTheSameSourceAndTarget#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string,string,string,int",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@True#bool",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, int>>",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,System.Collections.Generic.IDictionary<string, int>",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,int",
                        "->System.Collections.Generic.ICollection@Contains#string"
                      ]
                    },
                    {
                      "name": "Add_ShouldHaveRelation_WhenAddedMultipleDependenciesForMultipleSourceAndTargets#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string,string,string,int",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@True#bool",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, int>>",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,System.Collections.Generic.IDictionary<string, int>",
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,int",
                        "->System.Collections.Generic.ICollection@Contains#string"
                      ]
                    },
                    {
                      "name": "ClassRelationsRepresentationTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests.cs",
          "path": "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.Processors",
              "classes": [
                {
                  "name": "HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Fields",
                    "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Destructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Field",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions",
                    "HoneydewModels.CSharp",
                    "HoneydewScriptBeePlugin.Loaders",
                    "HoneydewScriptBeePlugin.Models",
                    "Moq",
                    "Xunit",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewModels.CSharp.ProjectModel",
                    "HoneydewModels.CSharp.RepositoryModel"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor",
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewModels.CSharp.ProjectModel",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "GetFunction_ShouldReturnReferenceSolutionModelWithExtensionMethodType_WhenGivenClassWithExtensionMethod#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@NotNull#object",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.MethodType,HoneydewScriptBeePlugin.Models.MethodType"
                      ]
                    },
                    {
                      "name": "GetFunction_ShouldReturnReferenceSolutionModelWithDestructorMethodType_WhenGivenClassWithDestructor#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@NotNull#object",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.MethodType,HoneydewScriptBeePlugin.Models.MethodType"
                      ]
                    },
                    {
                      "name": "RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs",
          "path": "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.Processors",
              "classes": [
                {
                  "name": "HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Fields",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Destructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Field",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewModels.CSharp",
                    "HoneydewScriptBeePlugin.Loaders",
                    "HoneydewScriptBeePlugin.Models",
                    "Moq",
                    "Xunit",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewModels.CSharp.ProjectModel",
                    "HoneydewModels.CSharp.RepositoryModel"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor",
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.GenericParameterModel",
                    "HoneydewScriptBeePlugin.Models.NamespaceModel",
                    "bool",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewScriptBeePlugin.Models.AttributeModel",
                    "HoneydewScriptBeePlugin.Models.FieldModel",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "HoneydewScriptBeePlugin.Models.ImportModel",
                    "HoneydewModels.CSharp.ProjectModel",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel"
                  ],
                  "methods": [
                    {
                      "name": "Process_ShouldReferenceModelHavePartialClasses_WhenGivenTwoFilesContainingPartialClasses#string,string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.MultiFileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests@LoadPartialClassesInRepositoryModel#string,string",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@NotNull#object",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.ClassModel,HoneydewScriptBeePlugin.Models.ClassModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.ClassType,HoneydewScriptBeePlugin.Models.ClassType",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Contains#HoneydewScriptBeePlugin.Models.Modifier,System.Collections.Generic.IEnumerable<HoneydewScriptBeePlugin.Models.Modifier>"
                      ]
                    },
                    {
                      "name": "Process_ShouldPartialClassHaveAllTheMembers_WhenGivenTwoFilesContainingPartialClasses#string,string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.MultiFileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests@LoadPartialClassesInRepositoryModel#string,string",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@NotNull#object",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<HoneydewScriptBeePlugin.Models.AttributeModel>",
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<HoneydewScriptBeePlugin.Models.EntityType>",
                        "->Xunit.Assert@Null#object",
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<HoneydewScriptBeePlugin.Models.MethodModel>"
                      ]
                    },
                    {
                      "name": "LoadPartialClassesInRepositoryModel#string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests@Process_ShouldReferenceModelHavePartialClasses_WhenGivenTwoFilesContainingPartialClasses#string,string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests@Process_ShouldPartialClassHaveAllTheMembers_WhenGivenTwoFilesContainingPartialClasses#string,string"
                      ],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    },
                    {
                      "name": "RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RepositoryModelToReferenceRepositoryModelProcessorTestsForImports.cs",
          "path": "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsForImports.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.Processors",
              "classes": [
                {
                  "name": "HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsForImports",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewModels.CSharp",
                    "HoneydewScriptBeePlugin.Loaders",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor",
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "HoneydewScriptBeePlugin.Models.NamespaceModel",
                    "HoneydewScriptBeePlugin.Models.ImportModel",
                    "HoneydewModels.CSharp.ProjectModel",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel"
                  ],
                  "methods": [
                    {
                      "name": "GetFunction_ShouldReturnImportNamespaceReference_WhenGivenClassWithImports#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    },
                    {
                      "name": "RepositoryModelToReferenceRepositoryModelProcessorTestsForImports#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RepositoryModelToCyclomaticComplexityPerFileProcessorTests.cs",
          "path": "HoneydewTests/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessorTests.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.Processors",
              "classes": [
                {
                  "name": "HoneydewTests.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessorTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "Honeydew.Processors",
                    "HoneydewScriptBeePlugin.Models",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor",
                    "object",
                    "void",
                    "HoneydewCore.ModelRepresentations.Concern",
                    "System.Collections.Generic.List",
                    "HoneydewCore.ModelRepresentations.FileWrapper",
                    "HoneydewCore.ModelRepresentations.CyclomaticComplexityPerFileRepresentation",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.SolutionModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "string",
                    "HoneydewScriptBeePlugin.Models.FieldModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "int",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "HoneydewScriptBeePlugin.Models.ReturnValueModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel"
                  ],
                  "methods": [
                    {
                      "name": "Process_ShouldReturnEmptyRepresentation_WhenRepositoryModelIsNull#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Process_ShouldReturnEmptyRepresentation_WhenRepositoryModelIsEmpty#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Process_ShouldReturn4ConcernsWith0Strength_WhenRepositoryModelHasOneClassWithNoMethodsOrProperties#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.FileModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.SolutionModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.ProjectModel",
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Process_ShouldReturn4Concerns_WhenRepositoryModelHasOneClassWithOneMethodInOneFile#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.FileModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.SolutionModel",
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Process_ShouldReturn4Concerns_WhenRepositoryModelHasMultipleClassesWithOneMethodInOneFile#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.FileModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.SolutionModel",
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Process_ShouldReturn4Concerns_WhenRepositoryModelHasOneClassWithMultipleMethodInOneFile#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.FileModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.SolutionModel",
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Process_ShouldReturn4Concerns_WhenRepositoryModelHasMultipleClassesWithInMultipleFiles#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.FileModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.SolutionModel",
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "RepositoryModelToCyclomaticComplexityPerFileProcessorTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Microsoft.NET.Test.Sdk.Program.cs",
          "path": "C:/Users/Andrei/.nuget/packages/microsoft.net.test.sdk/16.11.0/build/netcoreapp2.1/Microsoft.NET.Test.Sdk.Program.cs",
          "namespaces": [
            {
              "name": "<global namespace>",
              "classes": [
                {
                  "name": "AutoGeneratedProgram",
                  "type": "Class",
                  "usingStatements": ["System"],
                  "attributes": [
                    "Microsoft.VisualStudio.TestPlatform.TestSDKAutoGeneratedCode"
                  ],
                  "usedClasses": [
                    "object",
                    "Microsoft.VisualStudio.TestPlatform.TestSDKAutoGeneratedCode",
                    "string[]",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Main#string[]",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": ".NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "path": "HoneydewTests/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "namespaces": []
        },
        {
          "name": "HoneydewTests.AssemblyInfo.cs",
          "path": "HoneydewTests/obj/Debug/net6.0/HoneydewTests.AssemblyInfo.cs",
          "namespaces": []
        },
        {
          "name": "CSharpReturnValueRelationMetricTests.cs",
          "path": "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.RelationMetric",
              "classes": [
                {
                  "name": "HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "Honeydew.PostExtraction.ReferenceRelations",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "HoneydewScriptBeePlugin.Loaders",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Honeydew.PostExtraction.ReferenceRelations.ReturnValueRelationVisitor",
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewModels.CSharp.ProjectModel",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "System.Collections.Generic.Dictionary"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveVoidReturnValues_WhenClassHasMethodsThatReturnVoid#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/ReturnValueRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.ReturnValueRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePrimitiveReturnValues_WhenClassHasMethodsThatReturnPrimitiveValues#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/ReturnValueRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.ReturnValueRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePrimitiveReturnValues_WhenInterfaceHasMethodsWithPrimitiveReturnValues#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/ReturnValueRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.ReturnValueRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveDependenciesReturnValues_WhenInterfaceHasMethodsWithDependenciesReturnValues#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/ReturnValueRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.ReturnValueRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveDependenciesReturnValues_WhenClassHasMethodsWithDependenciesReturnValues#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/ReturnValueRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.ReturnValueRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "CSharpReturnValueRelationMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpParameterRelationMetricTests.cs",
          "path": "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.RelationMetric",
              "classes": [
                {
                  "name": "HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "Honeydew.PostExtraction.ReferenceRelations",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "HoneydewScriptBeePlugin.Loaders",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor",
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewModels.CSharp.ProjectModel",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "System.Collections.Generic.Dictionary"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveNoParameters_WhenClassHasMethodsWithNoParameters#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/ParameterRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNoParameters_WhenClassHasConstructorWithNoParameters#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/ParameterRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePrimitiveParameters_WhenClassHasMethodsWithPrimitiveParameters#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/ParameterRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePrimitiveParameters_WhenInterfaceHasMethodsWithPrimitiveParameters#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/ParameterRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveDependenciesParameters_WhenInterfaceHasMethodsWithDependenciesParameters#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/ParameterRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveDependenciesParameters_WhenClassHasMethodsWithDependenciesParameters#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/ParameterRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveDependenciesParameters_WhenClassHasConstructorWithDependenciesParameters#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/ParameterRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "CSharpParameterRelationMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpPropertiesRelationMetricTests.cs",
          "path": "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.RelationMetric",
              "classes": [
                {
                  "name": "HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "Honeydew.PostExtraction.ReferenceRelations",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "HoneydewScriptBeePlugin.Loaders",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Honeydew.PostExtraction.ReferenceRelations.PropertiesRelationVisitor",
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewModels.CSharp.ProjectModel",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "System.Collections.Generic.Dictionary"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHavePrimitiveProperties_WhenClassHasPropertiesOfPrimitiveTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/PropertiesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.PropertiesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePrimitiveProperties_WhenClassHasEventPropertiesOfPrimitiveTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/PropertiesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.PropertiesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveDependenciesProperties_WhenClassHasProperties#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/PropertiesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.PropertiesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveDependenciesEventProperties_WhenClassHasEventProperties#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/PropertiesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.PropertiesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "CSharpPropertiesRelationMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpFieldsRelationMetricTests.cs",
          "path": "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.RelationMetric",
              "classes": [
                {
                  "name": "HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "Honeydew.PostExtraction.ReferenceRelations",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Fields",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Field",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "HoneydewScriptBeePlugin.Loaders",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Honeydew.PostExtraction.ReferenceRelations.FieldsRelationVisitor",
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewModels.CSharp.ProjectModel",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "System.Collections.Generic.Dictionary"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHavePrimitiveFields_WhenClassHasFieldsOfPrimitiveTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/FieldsRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.FieldsRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePrimitiveFields_WhenClassHasEventFieldsOfPrimitiveTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/FieldsRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.FieldsRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveDependenciesFields_WhenClassHasFields#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/FieldsRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.FieldsRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveDependenciesEventFields_WhenClassHasEventFields#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/FieldsRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.FieldsRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "CSharpFieldsRelationVisitorTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpLocalVariablesRelationMetricTests.cs",
          "path": "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.RelationMetric",
              "classes": [
                {
                  "name": "HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "Honeydew.PostExtraction.ReferenceRelations",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.LocalVariables",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.LocalVariables",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "HoneydewScriptBeePlugin.Loaders",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor",
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewModels.CSharp.ProjectModel",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "System.Collections.Generic.Dictionary"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveNoLocalVariables_WhenClassHasMethodsThatDontUseLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePrimitiveLocalValues_WhenClassHasMethodsThatHaveLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNoPrimitiveLocalVariables_WhenGivenAnInterface#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNoDependencies_WhenGivenAnInterface#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasMethodsWithNonPrimitiveLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasConstructorLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasMethodsWithNonPrimitiveLocalVariablesInAForLoop#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLocalVariablesDependencies_WhenNamespaceHasMultipleClasses#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "CSharpLocalVariablesRelationVisitorTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RepositoryModelToReferenceRepositoryModelProcessorTests.cs",
          "path": "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.Processors",
              "classes": [
                {
                  "name": "HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "HoneydewScriptBeePlugin.Loaders",
                    "HoneydewScriptBeePlugin.Models",
                    "Moq",
                    "Xunit",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.CSharp.FieldModel",
                    "HoneydewModels.CSharp.MethodModel",
                    "HoneydewModels.CSharp.NamespaceModel",
                    "HoneydewModels.CSharp.ParameterModel",
                    "HoneydewModels.CSharp.ProjectModel",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewModels.CSharp.ReturnValueModel",
                    "HoneydewModels.CSharp.SolutionModel"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "void",
                    "HoneydewScriptBeePlugin.Models.SolutionModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "string",
                    "HoneydewScriptBeePlugin.Models.NamespaceModel",
                    "HoneydewModels.CSharp.SolutionModel",
                    "HoneydewModels.CSharp.ProjectModel",
                    "HoneydewModels.CSharp.NamespaceModel",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.NamespaceModel?[]",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewModels.CSharp.MetricModel",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.FieldModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewScriptBeePlugin.Models.ReturnValueModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "HoneydewScriptBeePlugin.Models.MethodCall",
                    "HoneydewScriptBeePlugin.Models.ParameterModel",
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "bool"
                  ],
                  "methods": [
                    {
                      "name": "GetFunction_ShouldReturnEmptyProjects_WhenSolutionModelIsNull#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "GetFunction_ShouldReturnEmptyProjects_WhenSolutionModelIsEmpty#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "GetFunction_ShouldReturnReferenceSolutionModelWithProjectsAndNamespaces_WhenGivenASolutionModelWithProjectAndNamespaces#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->Xunit.Assert@NotNull#object"
                      ]
                    },
                    {
                      "name": "GetFunction_ShouldReturnReferenceSolutionModelWithClasses_WhenGivenASolutionModelWithClasses#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "GetFunction_ShouldReturnReferenceSolutionModelWithMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesWithNonPrimitiveTypesAsParameters#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->Xunit.Assert@NotNull#object",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "GetFunction_ShouldReturnReferenceSolutionModelWithMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithPrimitiveTypesAsParameters_UsingCSharpClassFactExtractor#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->System.Collections.Generic.IList@FirstOrDefault#System.Func<HoneydewScriptBeePlugin.Models.ClassModel, bool>",
                        "->Xunit.Assert@NotNull#object",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "GetFunction_ShouldReturnReferenceSolutionModelWithFieldReferences_WhenGivenASolutionModelWithClassesWithFieldReferences#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->System.Collections.Generic.IList@FirstOrDefault#System.Func<HoneydewScriptBeePlugin.Models.ClassModel, bool>",
                        "->Xunit.Assert@NotNull#object",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "RepositoryModelToReferenceRepositoryModelProcessorTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs",
          "path": "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs",
          "namespaces": [
            {
              "name": "HoneydewTests.Processors",
              "classes": [
                {
                  "name": "HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Fields",
                    "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Destructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Field",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions",
                    "HoneydewModels.CSharp",
                    "HoneydewScriptBeePlugin.Loaders",
                    "HoneydewScriptBeePlugin.Models",
                    "Moq",
                    "Xunit",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewModels.CSharp.ProjectModel",
                    "HoneydewModels.CSharp.RepositoryModel"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor",
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "HoneydewScriptBeePlugin.Models.ParameterModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.FieldModel",
                    "HoneydewScriptBeePlugin.Models.ReturnValueModel",
                    "HoneydewScriptBeePlugin.Models.MethodCall",
                    "HoneydewModels.CSharp.ProjectModel",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "bool",
                    "HoneydewScriptBeePlugin.Models.PropertyModel"
                  ],
                  "methods": [
                    {
                      "name": "GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithPrimitiveTypesAsParameters_UsingCSharpFactExtractor#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewScriptBeePlugin.Models.ClassModel, bool>",
                        "->Xunit.Assert@NotNull#object",
                        "->Xunit.Assert@Equal#string,string",
                        "->System.Collections.Generic.IList@First#System.Func<HoneydewScriptBeePlugin.Models.MethodModel, bool>",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithNumericValesAsParameters_UsingCSharpFactExtractor#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewScriptBeePlugin.Models.ClassModel, bool>",
                        "->Xunit.Assert@NotNull#object",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "GetFunction_ShouldReturnReferenceSolutionModelWithAllClassReferences_WhenGivenASolutionModelWithClassHierarchy_UsingCSharpFactExtractor#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewScriptBeePlugin.Models.ClassModel, bool>",
                        "->Xunit.Assert@NotNull#object",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.ClassType,HoneydewScriptBeePlugin.Models.ClassType"
                      ]
                    },
                    {
                      "name": "GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesWithClassHierarchyAsParameter_UsingCSharpFactExtractor#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewScriptBeePlugin.Models.ClassModel, bool>",
                        "->Xunit.Assert@NotNull#object",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.MethodType,HoneydewScriptBeePlugin.Models.MethodType",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Process_ShouldHaveLocalFunctionReferences_WhenGivenMethodWithDeepNestedLocalFunctions#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->Xunit.Assert@Equal#int,int",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@AssertLocalFunctions#HoneydewScriptBeePlugin.Models.MethodModel"
                      ]
                    },
                    {
                      "name": "RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "projectReferences": [
        "Honeydew",
        "HoneydewCore",
        "HoneydewExtractors",
        "HoneydewModels",
        "HoneydewScriptBeePlugin"
      ],
      "externalReferences": []
    },
    {
      "name": "HoneydewScriptBeePlugin",
      "path": "HoneydewScriptBeePlugin/HoneydewScriptBeePlugin.csproj",
      "files": [
        {
          "name": "AccessKind.cs",
          "path": "HoneydewScriptBeePlugin/Models/AccessKind.cs",
          "namespaces": [
            { "name": "HoneydewScriptBeePlugin.Models", "classes": [] }
          ]
        },
        {
          "name": "AttributeTarget.cs",
          "path": "HoneydewScriptBeePlugin/Models/AttributeTarget.cs",
          "namespaces": [
            { "name": "HoneydewScriptBeePlugin.Models", "classes": [] }
          ]
        },
        {
          "name": "AliasType.cs",
          "path": "HoneydewScriptBeePlugin/Models/AliasType.cs",
          "namespaces": [
            { "name": "HoneydewScriptBeePlugin.Models", "classes": [] }
          ]
        },
        {
          "name": "ClassType.cs",
          "path": "HoneydewScriptBeePlugin/Models/ClassType.cs",
          "namespaces": [
            { "name": "HoneydewScriptBeePlugin.Models", "classes": [] }
          ]
        },
        {
          "name": "AccessModifier.cs",
          "path": "HoneydewScriptBeePlugin/Models/AccessModifier.cs",
          "namespaces": [
            { "name": "HoneydewScriptBeePlugin.Models", "classes": [] }
          ]
        },
        {
          "name": "AttributeModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/AttributeModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.AttributeModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "HoneydewScriptBeePlugin.Models.ParameterModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "DelegateModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/DelegateModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.DelegateModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Models.GenericParameterModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ParameterModel",
                    "HoneydewScriptBeePlugin.Models.ReturnValueModel",
                    "HoneydewScriptBeePlugin.Models.EntityModel"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "EntityModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/EntityModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.EntityModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "bool",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.NamespaceModel",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.ImportModel",
                    "HoneydewScriptBeePlugin.Models.AttributeModel",
                    "HoneydewScriptBeePlugin.Models.LinesOfCode",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "EnumLabelModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/EnumLabelModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.EnumLabelModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewScriptBeePlugin.Models.AttributeModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "EntityType.cs",
          "path": "HoneydewScriptBeePlugin/Models/EntityType.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.EntityType",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "string",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "System.Collections.Generic.IList",
                    "bool",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "FieldAccess.cs",
          "path": "HoneydewScriptBeePlugin/Models/FieldAccess.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.FieldAccess",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Models.FieldModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExpandoExtensions.cs",
          "path": "HoneydewScriptBeePlugin/ExpandoExtensions.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.ExpandoExtensions",
                  "type": "Class",
                  "usingStatements": ["Westwind.Utilities"],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Westwind.Utilities.Expando",
                    "string",
                    "bool"
                  ],
                  "methods": [
                    {
                      "name": "HasProperty#Westwind.Utilities.Expando,string",
                      "type": "Extension",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Westwind.Utilities.PropertyBag@ContainsKey#string"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "GenericParameterModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/GenericParameterModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.GenericParameterModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.AttributeModel",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "GenericParameterModifier.cs",
          "path": "HoneydewScriptBeePlugin/Models/GenericParameterModifier.cs",
          "namespaces": [
            { "name": "HoneydewScriptBeePlugin.Models", "classes": [] }
          ]
        },
        {
          "name": "ImportModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/ImportModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.ImportModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Models.NamespaceModel",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "bool",
                    "string",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "FileModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/FileModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.FileModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ImportModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "HoneydewScriptBeePlugin.Models.LinesOfCode",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LinesOfCode.cs",
          "path": "HoneydewScriptBeePlugin/Models/LinesOfCode.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.LinesOfCode",
                  "type": "Struct",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["int", "System.ValueType"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LocalVariableModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/LocalVariableModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.LocalVariableModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "bool",
                    "string",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "EnumModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/EnumModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.EnumModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewScriptBeePlugin.Models.EnumLabelModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.EntityModel"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MethodCall.cs",
          "path": "HoneydewScriptBeePlugin/Models/MethodCall.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.MethodCall",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MethodType.cs",
          "path": "HoneydewScriptBeePlugin/Models/MethodType.cs",
          "namespaces": [
            { "name": "HoneydewScriptBeePlugin.Models", "classes": [] }
          ]
        },
        {
          "name": "Modifier.cs",
          "path": "HoneydewScriptBeePlugin/Models/Modifier.cs",
          "namespaces": [
            { "name": "HoneydewScriptBeePlugin.Models", "classes": [] }
          ]
        },
        {
          "name": "NamespaceModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/NamespaceModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.NamespaceModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewScriptBeePlugin.Models.NamespaceModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ParameterModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/ParameterModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.ParameterModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "string",
                    "bool",
                    "HoneydewScriptBeePlugin.Models.AttributeModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MetricAdder.cs",
          "path": "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Loaders",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Loaders.MetricAdder",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewCore.Utils",
                    "HoneydewModels.Types",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "void",
                    "string",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewModels.CSharp.MetricModel",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "HoneydewScriptBeePlugin.Models.FieldModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel"
                  ],
                  "methods": [
                    {
                      "name": "AddMetrics#HoneydewScriptBeePlugin.Models.FileModel,HoneydewModels.Types.ITypeWithMetrics",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateWithEntityReferences#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsNumericType#string"
                      ]
                    },
                    {
                      "name": "AddMetrics#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewModels.Types.ITypeWithMetrics",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateWithEntityReferences#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsNumericType#string"
                      ]
                    },
                    {
                      "name": "AddMetrics#HoneydewScriptBeePlugin.Models.FieldModel,HoneydewModels.Types.ITypeWithMetrics",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertProperty#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewModels.Types.IPropertyType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertField#HoneydewScriptBeePlugin.Models.ClassModel,HoneydewModels.Types.IFieldType,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ],
                      "calledMethods": [
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsNumericType#string"
                      ]
                    },
                    {
                      "name": "AddMetrics#HoneydewScriptBeePlugin.Models.MethodModel,HoneydewModels.Types.ITypeWithMetrics",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertConstructor#HoneydewScriptBeePlugin.Models.ClassModel,HoneydewModels.Types.IConstructorType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertDestructor#HoneydewScriptBeePlugin.Models.ClassModel,HoneydewModels.Types.IDestructorType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertMethod#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewScriptBeePlugin.Models.MethodModel,HoneydewModels.Types.IMethodType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAccessor#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewScriptBeePlugin.Models.PropertyModel,HoneydewModels.Types.IAccessorType,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ],
                      "calledMethods": [
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsNumericType#string"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ParameterModifier.cs",
          "path": "HoneydewScriptBeePlugin/Models/ParameterModifier.cs",
          "namespaces": [
            { "name": "HoneydewScriptBeePlugin.Models", "classes": [] }
          ]
        },
        {
          "name": "PropertyModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/PropertyModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.PropertyModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.LinesOfCode",
                    "int",
                    "HoneydewScriptBeePlugin.Models.FieldModel"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ReferenceEntity.cs",
          "path": "HoneydewScriptBeePlugin/Models/ReferenceEntity.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.ReferenceEntity",
                  "type": "Class",
                  "usingStatements": ["ScriptBeePlugin"],
                  "attributes": [],
                  "usedClasses": ["ScriptBeePlugin.ScriptBeeModel"],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "ProjectModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/ProjectModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.ProjectModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "System.Collections.Generic.IList",
                    "System.Collections.Generic.ISet",
                    "HoneydewScriptBeePlugin.Models.NamespaceModel",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.SolutionModel",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ReturnValueModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/ReturnValueModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.ReturnValueModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "string",
                    "bool",
                    "HoneydewScriptBeePlugin.Models.AttributeModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "SolutionModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/SolutionModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.SolutionModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "HoneydewScriptBeePlugin.GlobalUsings.g.cs",
          "path": "HoneydewScriptBeePlugin/obj/Debug/net6.0/HoneydewScriptBeePlugin.GlobalUsings.g.cs",
          "namespaces": []
        },
        {
          "name": ".NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "path": "HoneydewScriptBeePlugin/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "namespaces": []
        },
        {
          "name": "ClassModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/ClassModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.ClassModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "bool",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.GenericParameterModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "HoneydewScriptBeePlugin.Models.FieldModel",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewScriptBeePlugin.Models.EntityModel"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Contains#HoneydewScriptBeePlugin.Models.Modifier"
                      ]
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "FieldModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/FieldModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.FieldModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "bool",
                    "HoneydewScriptBeePlugin.Models.FieldAccess",
                    "HoneydewScriptBeePlugin.Models.AttributeModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "init#",
                      "type": "init",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "HoneydewScriptBeePlugin.AssemblyInfo.cs",
          "path": "HoneydewScriptBeePlugin/obj/Debug/net6.0/HoneydewScriptBeePlugin.AssemblyInfo.cs",
          "namespaces": []
        },
        {
          "name": "InterfaceModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/InterfaceModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.InterfaceModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "bool",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.GenericParameterModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewScriptBeePlugin.Models.EntityModel"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Contains#HoneydewScriptBeePlugin.Models.Modifier"
                      ]
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MethodModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/MethodModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.MethodModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewScriptBeePlugin.Models.MethodCall",
                    "System.Collections.Generic.IEnumerable",
                    "HoneydewScriptBeePlugin.Models.FieldAccess",
                    "string",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ReturnValueModel",
                    "HoneydewScriptBeePlugin.Models.ParameterModel",
                    "HoneydewScriptBeePlugin.Models.GenericParameterModel",
                    "HoneydewScriptBeePlugin.Models.AttributeModel",
                    "HoneydewScriptBeePlugin.Models.LocalVariableModel",
                    "HoneydewScriptBeePlugin.Models.LinesOfCode",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Where#System.Func<HoneydewScriptBeePlugin.Models.MethodCall, bool>"
                      ]
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Where#System.Func<HoneydewScriptBeePlugin.Models.MethodCall, bool>"
                      ]
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Where#System.Func<HoneydewScriptBeePlugin.Models.FieldAccess, bool>"
                      ]
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@Where#System.Func<HoneydewScriptBeePlugin.Models.FieldAccess, bool>"
                      ]
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RepositoryModel.cs",
          "path": "HoneydewScriptBeePlugin/Models/RepositoryModel.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Models",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Models.RepositoryModel",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewScriptBeePlugin.Models.SolutionModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "HoneydewScriptBeePlugin.Models.NamespaceModel",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IEnumerable",
                    "HoneydewScriptBeePlugin.Models.FileModel"
                  ],
                  "methods": [
                    {
                      "name": "GetEnumerable#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@GroupClassesByFilePath#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Processors/RepositoryModelToFileRelationsProcessor.cs->Honeydew.Processors.RepositoryModelToFileRelationsProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Processors/RepositoryModelToClassRelationsProcessor.cs->Honeydew.Processors.RepositoryModelToClassRelationsProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ApplyPostExtractionVisitorsScript.cs->Honeydew.Scripts.ApplyPostExtractionVisitorsScript@RunForResult#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "NamespaceTreeHandler.cs",
          "path": "HoneydewScriptBeePlugin/Loaders/NamespaceTreeHandler.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Loaders",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Loaders.NamespaceTreeHandler",
                  "type": "Class",
                  "usingStatements": [
                    "System.Text",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewScriptBeePlugin.Models.NamespaceModel",
                    "System.Collections.Generic.Dictionary",
                    "object",
                    "System.Collections.Generic.IList",
                    "string[]",
                    "int",
                    "System.Text.StringBuilder",
                    "System.Collections.Generic.IReadOnlyList"
                  ],
                  "methods": [
                    {
                      "name": "GetRootNamespaces#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateModelWithSolutionProjectNamespacesCompilationUnitsAndClasses#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.Dictionary@Select#System.Func<System.Collections.Generic.KeyValuePair<string, HoneydewScriptBeePlugin.Models.NamespaceModel>, HoneydewScriptBeePlugin.Models.NamespaceModel>"
                      ]
                    },
                    {
                      "name": "GetOrAdd#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateModelWithSolutionProjectNamespacesCompilationUnitsAndClasses#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->string@Split#string,System.StringSplitOptions",
                        "->System.Collections.Generic.Dictionary@TryGetValue#string,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->System.Collections.Generic.IList@FirstOrDefault#System.Func<HoneydewScriptBeePlugin.Models.NamespaceModel, bool>",
                        "->System.Text.StringBuilder@Append#string",
                        "HoneydewScriptBeePlugin/Loaders/NamespaceTreeHandler.cs->HoneydewScriptBeePlugin.Loaders.NamespaceTreeHandler@CreateChildNamespaces#System.Collections.Generic.IReadOnlyList<string>,System.Text.StringBuilder,int",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->System.Collections.Generic.Dictionary@Add#string,HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    },
                    {
                      "name": "CreateChildNamespaces#System.Collections.Generic.IReadOnlyList<string>,System.Text.StringBuilder,int",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/NamespaceTreeHandler.cs->HoneydewScriptBeePlugin.Loaders.NamespaceTreeHandler@GetOrAdd#string",
                        "HoneydewScriptBeePlugin/Loaders/NamespaceTreeHandler.cs->HoneydewScriptBeePlugin.Loaders.NamespaceTreeHandler@CreateChildNamespaces#System.Collections.Generic.IReadOnlyList<string>,System.Text.StringBuilder,int"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrEmpty#string",
                        "->System.Text.StringBuilder@ToString#",
                        "->System.Text.StringBuilder@Append#string",
                        "HoneydewScriptBeePlugin/Loaders/NamespaceTreeHandler.cs->HoneydewScriptBeePlugin.Loaders.NamespaceTreeHandler@CreateChildNamespaces#System.Collections.Generic.IReadOnlyList<string>,System.Text.StringBuilder,int",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RepositoryModelToReferenceRepositoryModelProcessor.cs",
          "path": "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs",
          "namespaces": [
            {
              "name": "HoneydewScriptBeePlugin.Loaders",
              "classes": [
                {
                  "name": "HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Concurrent",
                    "HoneydewCore.Logging",
                    "HoneydewCore.Processors",
                    "HoneydewCore.Utils",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "HoneydewScriptBeePlugin.Models",
                    "HoneydewScriptBeePlugin.Loaders.MetricAdder",
                    "HoneydewScriptBeePlugin.Models.AttributeModel",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewModels.CSharp.DelegateModel",
                    "HoneydewModels.CSharp.EnumModel",
                    "HoneydewScriptBeePlugin.Models.FieldModel",
                    "HoneydewScriptBeePlugin.Models.GenericParameterModel",
                    "HoneydewScriptBeePlugin.Models.LocalVariableModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewScriptBeePlugin.Models.NamespaceModel",
                    "HoneydewScriptBeePlugin.Models.ParameterModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.ReturnValueModel",
                    "HoneydewScriptBeePlugin.Models.SolutionModel"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "(string className",
                    "int genericParameterCount)",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "System.Collections.Generic.IDictionary",
                    "string",
                    "HoneydewScriptBeePlugin.Models.NamespaceModel",
                    "(HoneydewScriptBeePlugin.Models.ProjectModel",
                    "string className",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "object",
                    "HoneydewModels.CSharp.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewCore.Processors.IProcessorFunction",
                    "void",
                    "HoneydewModels.CSharp.SolutionModel",
                    "HoneydewScriptBeePlugin.Models.SolutionModel",
                    "HoneydewModels.CSharp.ProjectModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewModels.LinesOfCode",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel",
                    "HoneydewModels.CSharp.NamespaceModel",
                    "HoneydewScriptBeePlugin.Models.LinesOfCode",
                    "bool",
                    "HoneydewScriptBeePlugin.Loaders.NamespaceTreeHandler",
                    "System.Collections.Generic.HashSet",
                    "HoneydewScriptBeePlugin.Models.DelegateModel",
                    "HoneydewScriptBeePlugin.Models.EnumModel",
                    "int",
                    "HoneydewModels.CSharp.DelegateModel",
                    "HoneydewModels.CSharp.EnumModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "System.Collections.Generic.ISet",
                    "System.Collections.Generic.List",
                    "HoneydewScriptBeePlugin.Models.ImportModel",
                    "HoneydewScriptBeePlugin.Models.AttributeModel",
                    "HoneydewScriptBeePlugin.Models.GenericParameterModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewScriptBeePlugin.Models.FieldModel",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "HoneydewScriptBeePlugin.Models.ParameterModel",
                    "HoneydewScriptBeePlugin.Models.ReturnValueModel",
                    "HoneydewScriptBeePlugin.Models.EnumLabelModel",
                    "System.Collections.Generic.IEnumerable",
                    "HoneydewModels.CSharp.ReturnValueModel",
                    "HoneydewModels.Types.GenericType",
                    "HoneydewModels.CSharp.EntityTypeModel",
                    "HoneydewScriptBeePlugin.Models.LocalVariableModel",
                    "HoneydewScriptBeePlugin.Models.FieldAccess",
                    "HoneydewModels.Types.AccessedField",
                    "HoneydewModels.CSharp.ParameterModel"
                  ],
                  "methods": [
                    {
                      "name": "Process#HoneydewModels.CSharp.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests@GetFunction_ShouldReturnReferenceSolutionModelWithExtensionMethodType_WhenGivenClassWithExtensionMethod#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorMethodTypesTests@GetFunction_ShouldReturnReferenceSolutionModelWithDestructorMethodType_WhenGivenClassWithDestructor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests@Process_ShouldReferenceModelHavePartialClasses_WhenGivenTwoFilesContainingPartialClasses#string,string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorPartialClassesTests@Process_ShouldPartialClassHaveAllTheMembers_WhenGivenTwoFilesContainingPartialClasses#string,string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsForImports.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsForImports@GetFunction_ShouldReturnImportNamespaceReference_WhenGivenClassWithImports#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveVoidReturnValues_WhenClassHasMethodsThatReturnVoid#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHavePrimitiveReturnValues_WhenClassHasMethodsThatReturnPrimitiveValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHavePrimitiveReturnValues_WhenInterfaceHasMethodsWithPrimitiveReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveDependenciesReturnValues_WhenInterfaceHasMethodsWithDependenciesReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveDependenciesReturnValues_WhenClassHasMethodsWithDependenciesReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveNoParameters_WhenClassHasMethodsWithNoParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveNoParameters_WhenClassHasConstructorWithNoParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHavePrimitiveParameters_WhenClassHasMethodsWithPrimitiveParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHavePrimitiveParameters_WhenInterfaceHasMethodsWithPrimitiveParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenInterfaceHasMethodsWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenClassHasMethodsWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenClassHasConstructorWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHavePrimitiveProperties_WhenClassHasPropertiesOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHavePrimitiveProperties_WhenClassHasEventPropertiesOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHaveDependenciesProperties_WhenClassHasProperties#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHaveDependenciesEventProperties_WhenClassHasEventProperties#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHavePrimitiveFields_WhenClassHasFieldsOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHavePrimitiveFields_WhenClassHasEventFieldsOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHaveDependenciesFields_WhenClassHasFields#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHaveDependenciesEventFields_WhenClassHasEventFields#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoLocalVariables_WhenClassHasMethodsThatDontUseLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHavePrimitiveLocalValues_WhenClassHasMethodsThatHaveLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoPrimitiveLocalVariables_WhenGivenAnInterface#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoDependencies_WhenGivenAnInterface#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasMethodsWithNonPrimitiveLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasConstructorLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasMethodsWithNonPrimitiveLocalVariablesInAForLoop#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenNamespaceHasMultipleClasses#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests@GetFunction_ShouldReturnEmptyProjects_WhenSolutionModelIsNull#",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests@GetFunction_ShouldReturnEmptyProjects_WhenSolutionModelIsEmpty#",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests@GetFunction_ShouldReturnReferenceSolutionModelWithProjectsAndNamespaces_WhenGivenASolutionModelWithProjectAndNamespaces#",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests@GetFunction_ShouldReturnReferenceSolutionModelWithClasses_WhenGivenASolutionModelWithClasses#",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests@GetFunction_ShouldReturnReferenceSolutionModelWithMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesWithNonPrimitiveTypesAsParameters#",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests@GetFunction_ShouldReturnReferenceSolutionModelWithMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithPrimitiveTypesAsParameters_UsingCSharpClassFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTests@GetFunction_ShouldReturnReferenceSolutionModelWithFieldReferences_WhenGivenASolutionModelWithClassesWithFieldReferences#",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithPrimitiveTypesAsParameters_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesOnlyWithNumericValesAsParameters_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllClassReferences_WhenGivenASolutionModelWithClassHierarchy_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@GetFunction_ShouldReturnReferenceSolutionModelWithAllMethodReferences_WhenGivenASolutionModelWithClassesWithMethodReferencesWithClassHierarchyAsParameter_UsingCSharpFactExtractor#string",
                        "HoneydewTests/Processors/RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler.cs->HoneydewTests.Processors.RepositoryModelToReferenceRepositoryModelProcessorTestsWithMissingReferencesHandler@Process_ShouldHaveLocalFunctionReferences_WhenGivenMethodWithDeepNestedLocalFunctions#string"
                      ],
                      "calledMethods": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Log#string",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateModelWithSolutionProjectNamespacesCompilationUnitsAndClasses#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateProjectWithProjectReferences#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateWithEntityReferences#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateModelWithMethodReferencesAndFieldAccesses#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.IDictionary@Select#System.Func<System.Collections.Generic.KeyValuePair<(string className, int genericParameterCount), HoneydewScriptBeePlugin.Models.ClassModel>, HoneydewScriptBeePlugin.Models.ClassModel>",
                        "->System.Collections.Generic.IDictionary@Select#System.Func<System.Collections.Generic.KeyValuePair<string, HoneydewScriptBeePlugin.Models.NamespaceModel>, HoneydewScriptBeePlugin.Models.NamespaceModel>"
                      ]
                    },
                    {
                      "name": "PopulateModelWithSolutionProjectNamespacesCompilationUnitsAndClasses#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel"
                      ],
                      "calledMethods": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Log#string",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.SolutionModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLoc#HoneydewModels.LinesOfCode",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.FileModel",
                        "HoneydewScriptBeePlugin/Loaders/NamespaceTreeHandler.cs->HoneydewScriptBeePlugin.Loaders.NamespaceTreeHandler@GetOrAdd#string",
                        "->System.Collections.Generic.HashSet@Add#string",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAccessModifier#string",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertModifierToModifierList#string",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->System.Collections.Generic.IDictionary@Add#(HoneydewScriptBeePlugin.Models.ProjectModel, string className, int genericParameterCount),System.Collections.Generic.IList<HoneydewScriptBeePlugin.Models.EntityModel>",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertClassType#string",
                        "->System.Collections.Generic.IDictionary@TryGetValue#(HoneydewScriptBeePlugin.Models.ProjectModel, string className, int genericParameterCount),System.Collections.Generic.IList<HoneydewScriptBeePlugin.Models.EntityModel>",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.ClassModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.InterfaceModel",
                        "->System.Collections.Generic.HashSet@Contains#string",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "HoneydewScriptBeePlugin/Loaders/NamespaceTreeHandler.cs->HoneydewScriptBeePlugin.Loaders.NamespaceTreeHandler@GetRootNamespaces#",
                        "->System.Collections.Generic.IList@FirstOrDefault#System.Func<HoneydewScriptBeePlugin.Models.ProjectModel, bool>"
                      ]
                    },
                    {
                      "name": "ConvertLoc#HoneydewModels.LinesOfCode",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateModelWithSolutionProjectNamespacesCompilationUnitsAndClasses#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": []
                    },
                    {
                      "name": "ConvertClassType#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateModelWithSolutionProjectNamespacesCompilationUnitsAndClasses#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->System.Enum@TryParse<ClassType>#string,bool,HoneydewScriptBeePlugin.Models.ClassType"
                      ]
                    },
                    {
                      "name": "ConvertModifierToModifierList#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateModelWithSolutionProjectNamespacesCompilationUnitsAndClasses#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->string@IsNullOrWhiteSpace#string",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.IEnumerable@Select#System.Func<string, HoneydewScriptBeePlugin.Models.Modifier>",
                        "->string@Split#string,System.StringSplitOptions"
                      ]
                    },
                    {
                      "name": "ConvertModifier#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Enum@TryParse<Modifier>#string,bool,HoneydewScriptBeePlugin.Models.Modifier"
                      ]
                    },
                    {
                      "name": "ConvertAccessModifier#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateModelWithSolutionProjectNamespacesCompilationUnitsAndClasses#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->System.Enum@TryParse<AccessModifier>#string,bool,HoneydewScriptBeePlugin.Models.AccessModifier"
                      ]
                    },
                    {
                      "name": "PopulateProjectWithProjectReferences#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.SolutionModel, System.Collections.Generic.IEnumerable<HoneydewScriptBeePlugin.Models.ProjectModel>>",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Log#string",
                        "->System.Collections.Generic.List@FirstOrDefault#System.Func<HoneydewScriptBeePlugin.Models.ProjectModel, bool>",
                        "->System.Collections.Generic.ISet@Add#string",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "PopulateWithEntityReferences#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel"
                      ],
                      "calledMethods": [
                        "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs->HoneydewScriptBeePlugin.Loaders.MetricAdder@AddMetrics#HoneydewScriptBeePlugin.Models.FileModel,HoneydewModels.Types.ITypeWithMetrics",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewModels.Types.IImportType, HoneydewScriptBeePlugin.Models.ImportModel>",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertImportType#HoneydewModels.Types.IImportType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Log#string",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAttributes#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IAttributeType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs->HoneydewScriptBeePlugin.Loaders.MetricAdder@AddMetrics#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewModels.Types.ITypeWithMetrics",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertGenericParameters#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IGenericParameterType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.EntityType",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEntityType#HoneydewModels.Types.IEntityType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateWithMethodModels#HoneydewScriptBeePlugin.Models.EntityModel,System.Collections.Generic.IEnumerable<HoneydewModels.Types.IMethodType>",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewModels.Types.IConstructorType, HoneydewScriptBeePlugin.Models.MethodModel>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertConstructor#HoneydewScriptBeePlugin.Models.ClassModel,HoneydewModels.Types.IConstructorType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertDestructor#HoneydewScriptBeePlugin.Models.ClassModel,HoneydewModels.Types.IDestructorType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewModels.Types.IFieldType, HoneydewScriptBeePlugin.Models.FieldModel>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertField#HoneydewScriptBeePlugin.Models.ClassModel,HoneydewModels.Types.IFieldType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateWithPropertyModels#HoneydewScriptBeePlugin.Models.EntityModel,System.Collections.Generic.IEnumerable<HoneydewModels.Types.IPropertyType>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertGenericParameters#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IGenericParameterType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEntityType#HoneydewModels.Types.IEntityType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertParameters#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IParameterType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertReturnValue#HoneydewModels.Types.IReturnValueType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEnumLabels#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IEnumLabelType>,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertEnumLabels#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IEnumLabelType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@Select#System.Func<HoneydewModels.Types.IEnumLabelType, HoneydewScriptBeePlugin.Models.EnumLabelModel>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAttributes#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IAttributeType>,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertReturnValue#HoneydewModels.Types.IReturnValueType,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEntityType#HoneydewModels.Types.IEntityType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAttributes#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IAttributeType>,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertImportType#HoneydewModels.Types.IImportType,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateWithEntityReferences#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAliasType#string",
                        "->System.Collections.Generic.IEnumerable@FirstOrDefault#",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@SearchEntityByName#string,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@CreateClassModel#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@SearchNamespaceByName#string,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertAliasType#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Enum@TryParse<AliasType>#string,bool,HoneydewScriptBeePlugin.Models.AliasType"
                      ]
                    },
                    {
                      "name": "SearchNamespaceByName#string,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->System.Collections.Generic.IList@FirstOrDefault#System.Func<HoneydewScriptBeePlugin.Models.NamespaceModel, bool>",
                        "->System.Collections.Generic.IEnumerable@FirstOrDefault#System.Func<HoneydewScriptBeePlugin.Models.NamespaceModel, bool>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.ProjectModel, System.Collections.Generic.IEnumerable<HoneydewScriptBeePlugin.Models.NamespaceModel>>",
                        "->System.Collections.Generic.IDictionary@Add#string,HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    },
                    {
                      "name": "SearchEntityByName#string,int,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->string@IsNullOrEmpty#string",
                        "->System.Collections.Generic.IDictionary@TryGetValue#(string className, int genericParameterCount),HoneydewScriptBeePlugin.Models.ClassModel",
                        "->System.Collections.Generic.IDictionary@TryGetValue#(HoneydewScriptBeePlugin.Models.ProjectModel, string className, int genericParameterCount),System.Collections.Generic.IList<HoneydewScriptBeePlugin.Models.EntityModel>",
                        "->System.Collections.Generic.IList@Any#System.Func<HoneydewScriptBeePlugin.Models.ProjectModel, bool>"
                      ]
                    },
                    {
                      "name": "SearchEntityByName#string,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->string@IsNullOrEmpty#string",
                        "HoneydewCore/Utils/FullTypeNameBuilder.cs->HoneydewCore.Utils.FullTypeNameBuilder@CreateEntityTypeModel#string,bool",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@SearchEntityByName#string,int,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertProperty#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewModels.Types.IPropertyType,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAccessModifier#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertModifierToModifierList#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLoc#HoneydewModels.LinesOfCode",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEntityType#HoneydewModels.Types.IEntityType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAttributes#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IAttributeType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs->HoneydewScriptBeePlugin.Loaders.MetricAdder@AddMetrics#HoneydewScriptBeePlugin.Models.FieldModel,HoneydewModels.Types.ITypeWithMetrics",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewModels.Types.IAccessorType, HoneydewScriptBeePlugin.Models.MethodModel>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAccessor#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewScriptBeePlugin.Models.PropertyModel,HoneydewModels.Types.IAccessorType,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertField#HoneydewScriptBeePlugin.Models.ClassModel,HoneydewModels.Types.IFieldType,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAccessModifier#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertModifierToModifierList#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEntityType#HoneydewModels.Types.IEntityType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAttributes#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IAttributeType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs->HoneydewScriptBeePlugin.Loaders.MetricAdder@AddMetrics#HoneydewScriptBeePlugin.Models.FieldModel,HoneydewModels.Types.ITypeWithMetrics"
                      ]
                    },
                    {
                      "name": "ConvertConstructor#HoneydewScriptBeePlugin.Models.ClassModel,HoneydewModels.Types.IConstructorType,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAccessModifier#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertModifierToModifierList#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLoc#HoneydewModels.LinesOfCode",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAttributes#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IAttributeType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertParameters#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IParameterType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLocalVariables#System.Collections.Generic.IEnumerable<HoneydewModels.Types.ILocalVariableType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs->HoneydewScriptBeePlugin.Loaders.MetricAdder@AddMetrics#HoneydewScriptBeePlugin.Models.MethodModel,HoneydewModels.Types.ITypeWithMetrics",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLocalFunctions#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewScriptBeePlugin.Models.MethodModel,System.Collections.Generic.IEnumerable<HoneydewModels.Types.IMethodTypeWithLocalFunctions>,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertDestructor#HoneydewScriptBeePlugin.Models.ClassModel,HoneydewModels.Types.IDestructorType,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAccessModifier#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertModifierToModifierList#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLoc#HoneydewModels.LinesOfCode",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAttributes#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IAttributeType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertParameters#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IParameterType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLocalVariables#System.Collections.Generic.IEnumerable<HoneydewModels.Types.ILocalVariableType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs->HoneydewScriptBeePlugin.Loaders.MetricAdder@AddMetrics#HoneydewScriptBeePlugin.Models.MethodModel,HoneydewModels.Types.ITypeWithMetrics",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLocalFunctions#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewScriptBeePlugin.Models.MethodModel,System.Collections.Generic.IEnumerable<HoneydewModels.Types.IMethodTypeWithLocalFunctions>,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertMethod#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewScriptBeePlugin.Models.MethodModel,HoneydewModels.Types.IMethodType,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLoc#HoneydewModels.LinesOfCode",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAccessModifier#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertModifierToModifierList#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertGenericParameters#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IGenericParameterType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAttributes#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IAttributeType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertReturnValue#HoneydewModels.Types.IReturnValueType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertParameters#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IParameterType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLocalVariables#System.Collections.Generic.IEnumerable<HoneydewModels.Types.ILocalVariableType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs->HoneydewScriptBeePlugin.Loaders.MetricAdder@AddMetrics#HoneydewScriptBeePlugin.Models.MethodModel,HoneydewModels.Types.ITypeWithMetrics",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLocalFunctions#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewScriptBeePlugin.Models.MethodModel,System.Collections.Generic.IEnumerable<HoneydewModels.Types.IMethodTypeWithLocalFunctions>,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertAccessor#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewScriptBeePlugin.Models.PropertyModel,HoneydewModels.Types.IAccessorType,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLoc#HoneydewModels.LinesOfCode",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAccessModifier#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertModifierToModifierList#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAttributes#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IAttributeType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertReturnValue#HoneydewModels.Types.IReturnValueType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertParameters#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IParameterType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLocalVariables#System.Collections.Generic.IEnumerable<HoneydewModels.Types.ILocalVariableType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewScriptBeePlugin/Loaders/MetricAdder.cs->HoneydewScriptBeePlugin.Loaders.MetricAdder@AddMetrics#HoneydewScriptBeePlugin.Models.MethodModel,HoneydewModels.Types.ITypeWithMetrics",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertLocalFunctions#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewScriptBeePlugin.Models.MethodModel,System.Collections.Generic.IEnumerable<HoneydewModels.Types.IMethodTypeWithLocalFunctions>,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertLocalFunctions#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewScriptBeePlugin.Models.MethodModel,System.Collections.Generic.IEnumerable<HoneydewModels.Types.IMethodTypeWithLocalFunctions>,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Linq.Enumerable@Select#System.Func<HoneydewModels.Types.IMethodTypeWithLocalFunctions, HoneydewScriptBeePlugin.Models.MethodModel>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertMethod#HoneydewScriptBeePlugin.Models.EntityModel,HoneydewScriptBeePlugin.Models.MethodModel,HoneydewModels.Types.IMethodType,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertLocalVariables#System.Collections.Generic.IEnumerable<HoneydewModels.Types.ILocalVariableType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Linq.Enumerable@Select#System.Func<HoneydewModels.Types.ILocalVariableType, HoneydewScriptBeePlugin.Models.LocalVariableModel>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEntityType#HoneydewModels.Types.IEntityType,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "PopulateModelWithMethodReferencesAndFieldAccesses#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IList@FirstOrDefault#System.Func<HoneydewModels.Types.IClassType, bool>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Log#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertFieldAccesses#System.Collections.Generic.IEnumerable<HoneydewModels.Types.AccessedField>,HoneydewScriptBeePlugin.Models.MethodModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertOutgoingCalls#HoneydewScriptBeePlugin.Models.MethodModel,HoneydewModels.Types.ICallingMethodsType"
                      ]
                    },
                    {
                      "name": "GetMethodReferenceByName#HoneydewScriptBeePlugin.Models.ClassModel,string,int,System.Collections.Generic.IList<HoneydewModels.Types.IParameterType>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.IList@Concat#System.Collections.Generic.IEnumerable<HoneydewScriptBeePlugin.Models.MethodModel>",
                        "->System.Collections.Generic.List@Add#HoneydewScriptBeePlugin.Models.MethodModel"
                      ]
                    },
                    {
                      "name": "GetFieldReference#HoneydewModels.Types.AccessedField,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@Cast<ClassModel>#",
                        "->System.Collections.Generic.IEnumerable@Where#System.Func<HoneydewScriptBeePlugin.Models.EntityModel, bool>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@SearchEntityByName#string,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->System.Collections.Generic.IList@FirstOrDefault#System.Func<HoneydewScriptBeePlugin.Models.FieldModel, bool>",
                        "->System.Collections.Generic.IList@FirstOrDefault#System.Func<HoneydewScriptBeePlugin.Models.PropertyModel, bool>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@CreateClassModel#string",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.FieldModel"
                      ]
                    },
                    {
                      "name": "ConvertAccessKind#HoneydewModels.Types.AccessedField.AccessKind",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "GetMethodReference#HoneydewModels.Types.IMethodCallType,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Linq.Enumerable@Cast<ClassModel>#",
                        "->System.Collections.Generic.IEnumerable@Where#System.Func<HoneydewScriptBeePlugin.Models.EntityModel, bool>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@SearchEntityByName#string,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@GetMethodReferenceByName#HoneydewScriptBeePlugin.Models.ClassModel,string,int,System.Collections.Generic.IList<HoneydewModels.Types.IParameterType>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@GetMethodReferenceFromLocalFunction#HoneydewModels.Types.IMethodCallType,HoneydewScriptBeePlugin.Models.ClassModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@CreateClassModel#string",
                        "->System.Collections.Generic.List@Add#HoneydewScriptBeePlugin.Models.GenericParameterModel",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.IEnumerable@Select#System.Func<HoneydewModels.Types.IParameterType, HoneydewScriptBeePlugin.Models.ParameterModel>",
                        "->System.Collections.Generic.IList@Where#System.Func<HoneydewModels.Types.IParameterType, bool>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEntityType#HoneydewModels.Types.IEntityType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.MethodModel"
                      ]
                    },
                    {
                      "name": "GetMethodReferenceFromLocalFunction#HoneydewModels.Types.IMethodCallType,HoneydewScriptBeePlugin.Models.ClassModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": [
                        "->string@IndexOf#char",
                        "->System.Collections.Generic.IEnumerable@Count#System.Func<char, bool>",
                        "->string@IsNullOrEmpty#string",
                        "->System.Linq.Enumerable@Select#System.Func<string, string>",
                        "->string@Split#string,System.StringSplitOptions",
                        "->string@Trim#",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Linq.Enumerable@Cast<IParameterType>#",
                        "->System.Collections.Generic.IEnumerable@Select#System.Func<string, HoneydewModels.CSharp.ParameterModel>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@GetMethodReferenceByName#HoneydewScriptBeePlugin.Models.ClassModel,string,int,System.Collections.Generic.IList<HoneydewModels.Types.IParameterType>",
                        "->System.Collections.Generic.IList@FirstOrDefault#System.Func<HoneydewScriptBeePlugin.Models.PropertyModel, bool>",
                        "->System.Collections.Generic.IList@FirstOrDefault#System.Func<HoneydewScriptBeePlugin.Models.MethodModel, bool>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@GetFunctionNameWithoutGeneric#string",
                        "->string@StartsWith#string"
                      ]
                    },
                    {
                      "name": "ConvertAttributes#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IAttributeType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateWithEntityReferences#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Linq.Enumerable@Select#System.Func<HoneydewModels.Types.IAttributeType, HoneydewScriptBeePlugin.Models.AttributeModel>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEntityType#HoneydewModels.Types.IEntityType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAttributeTarget#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertParameters#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IParameterType>,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertAttributeTarget#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Enum@TryParse<AttributeTarget>#string,bool,HoneydewScriptBeePlugin.Models.AttributeTarget"
                      ]
                    },
                    {
                      "name": "ConvertParameters#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IParameterType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEntityType#HoneydewModels.Types.IEntityType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAttributes#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IAttributeType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertParameterModifier#string",
                        "->System.Collections.Generic.List@Add#HoneydewScriptBeePlugin.Models.ParameterModel"
                      ]
                    },
                    {
                      "name": "ConvertParameterModifier#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Enum@TryParse<ParameterModifier>#string,bool,HoneydewScriptBeePlugin.Models.ParameterModifier"
                      ]
                    },
                    {
                      "name": "ConvertGenericParameters#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IGenericParameterType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateWithEntityReferences#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Linq.Enumerable@Select#System.Func<HoneydewModels.Types.IGenericParameterType, HoneydewScriptBeePlugin.Models.GenericParameterModel>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertGenericParameterModifier#string",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewModels.Types.IEntityType, HoneydewScriptBeePlugin.Models.EntityType>",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEntityType#HoneydewModels.Types.IEntityType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertAttributes#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IAttributeType>,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertGenericParameterModifier#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Enum@TryParse<GenericParameterModifier>#string,bool,HoneydewScriptBeePlugin.Models.GenericParameterModifier"
                      ]
                    },
                    {
                      "name": "ConvertEntityType#string,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertEntityType#HoneydewModels.Types.IEntityType,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "HoneydewCore/Utils/FullTypeNameBuilder.cs->HoneydewCore.Utils.FullTypeNameBuilder@CreateEntityTypeModel#string,bool"
                      ]
                    },
                    {
                      "name": "ConvertEntityType#HoneydewModels.Types.IEntityType,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateWithEntityReferences#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@FirstOrDefault#",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@SearchEntityByName#string,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@SearchEntityByName#string,int,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@CreateClassModel#string",
                        "->string@TrimEnd#char",
                        "->string@EndsWith#char",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertGeneric#System.Collections.Generic.IEnumerable<HoneydewModels.Types.GenericType>,HoneydewScriptBeePlugin.Models.ProjectModel"
                      ]
                    },
                    {
                      "name": "ConvertGeneric#System.Collections.Generic.IEnumerable<HoneydewModels.Types.GenericType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@FirstOrDefault#",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@SearchEntityByName#string,int,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@CreateClassModel#string",
                        "->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@ConvertGeneric#System.Collections.Generic.IEnumerable<HoneydewModels.Types.GenericType>,HoneydewScriptBeePlugin.Models.ProjectModel",
                        "->System.Collections.Generic.List@Add#HoneydewScriptBeePlugin.Models.EntityType"
                      ]
                    },
                    {
                      "name": "CreateClassModel#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewCore/Utils/FullTypeNameBuilder.cs->HoneydewCore.Utils.FullTypeNameBuilder@CreateEntityTypeModel#string,bool",
                        "->System.Collections.Generic.IDictionary@TryGetValue#(string className, int genericParameterCount),HoneydewScriptBeePlugin.Models.ClassModel",
                        "->System.Collections.Generic.List@Add#HoneydewScriptBeePlugin.Models.GenericParameterModel",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsPrimitive#string",
                        "->System.Collections.Generic.IDictionary@Add#(string className, int genericParameterCount),HoneydewScriptBeePlugin.Models.ClassModel"
                      ]
                    },
                    {
                      "name": "Log#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@Process#HoneydewModels.CSharp.RepositoryModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateModelWithSolutionProjectNamespacesCompilationUnitsAndClasses#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateProjectWithProjectReferences#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "HoneydewScriptBeePlugin/Loaders/RepositoryModelToReferenceRepositoryModelProcessor.cs->HoneydewScriptBeePlugin.Loaders.RepositoryModelToReferenceRepositoryModelProcessor@PopulateWithEntityReferences#HoneydewModels.CSharp.RepositoryModel,HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->HoneydewCore.Logging.IProgressLogger@Log#object"
                      ]
                    },
                    {
                      "name": "RepositoryModelToReferenceRepositoryModelProcessor#HoneydewCore.Logging.ILogger,HoneydewCore.Logging.IProgressLogger",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "projectReferences": ["HoneydewCore", "HoneydewModels"],
      "externalReferences": []
    },
    {
      "name": "HoneydewExtractorsTests",
      "path": "HoneydewExtractorsTests/HoneydewExtractorsTests.csproj",
      "files": [
        {
          "name": "ConstructorAccessedFieldsTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/ConstructorAccessedFieldsTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.ConstructorAccessedFieldsTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.AccessedFields",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.AccessField",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.Types.AccessedField"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveAccessedFields_WhenGivenConstructorThatAccessesFieldsAndPropertiesFromInsideTheClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveAccessedFields_WhenGivenStaticConstructorThatAccessesFieldsAndPropertiesFromInsideTheClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    },
                    {
                      "name": "ConstructorAccessedFieldsTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpClassFactExtractorLinesOfCodeTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorLinesOfCodeTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorLinesOfCodeTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "int",
                    "HoneydewModels.LinesOfCode",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.CSharp.EnumModel",
                    "HoneydewModels.CSharp.DelegateModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveLinesOfCode_WhenProvidedWithClassWithMethodsAndProperties#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLinesOfCode_WhenProvidedWithClassAndDelegate#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLinesOfCode_WhenProvidedWithEnum#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLinesOfCode_WhenProvidedWithDelegateOnOneLine#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLinesOfCode_WhenProvidedWithDelegateOnMultipleLines#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLinesOfCode_WhenMethodWithLocalFunction#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLinesOfCode_WhenGivenPropertyWithGetAccessor#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLinesOfCode_WhenGivenEventPropertyWithGetAccessor#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "CSharpClassFactExtractorLinesOfCodeTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LocalFunctionsAccessedFieldsTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/LocalFunctionsAccessedFieldsTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.LocalFunctionsAccessedFieldsTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.AccessedFields",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.AccessField",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.CSharp.MethodModel",
                    "HoneydewModels.Types.IMethodTypeWithLocalFunctions[]",
                    "int",
                    "HoneydewModels.Types.AccessedField"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveAccessedFields_WhenGivenPropertyAccessorThatAccessesFieldsAndPropertiesFromOtherClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    },
                    {
                      "name": "LocalFunctionsAccessedFieldsTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "PropertyAccessedFieldsTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/PropertyAccessedFieldsTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.PropertyAccessedFieldsTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.AccessedFields",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.AccessField",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.Types.AccessedField"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveAccessedFields_WhenGivenPropertyAccessorThatAccessesFieldsAndPropertiesFromOtherClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveAccessedFields_WhenGivenPropertyArrowSyntaxThatAccessesFieldsAndPropertiesFromOtherClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    },
                    {
                      "name": "PropertyAccessedFieldsTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpAttributeForGenericTypesTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Attributes/CSharpAttributeForGenericTypesTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Attributes",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Attributes.CSharpAttributeForGenericTypesTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Delegate",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.CSharp.MethodModel",
                    "HoneydewModels.Types.IGenericParameterType[]"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveAttributesToGenericParameters_WhenProvidedWithTypesThatSupportGenericParameters#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CSharpAttributeForGenericTypesTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpBaseClassMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpBaseClassMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpBaseClassMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "System.Collections.Generic.IList"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveBaseClassObject_WhenClassDoesNotExtendsAnyClass#string,string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveBaseClass_WhenProvidedWithRecord#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNoBaseClass_WhenProvidedWithInterface#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveBaseClassIMetric_WhenClassExtendsIMetricInterface#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveBaseObjectAndNoInterfaces_WhenClassOnlyExtendsOtherClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveBaseObjectAndInterfaces_WhenClassExtendsOtherClassAndImplementsMultipleInterfaces#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CSharpBaseClassMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpClassInfoTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassInfoTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassInfoTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveMethods_WhenProvidedWithInterfaceWithImplementedMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveBaseObjectAndInterfaces_WhenClassExtendsOtherClassAndImplementsMultipleInterfaces#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CSharpClassInfoTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpClassAttributeMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassAttributeMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassAttributeMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "bool",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "System.Collections.Generic.IList"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "CSharpClassAttributeMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpClassFactExtractorDelegateTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorDelegateTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorDelegateTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Delegate",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "void",
                    "string",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.CSharp.MetricModel",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.DelegateModel",
                    "HoneydewModels.CSharp.ParameterModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesWithPrimitiveTypes#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesWithOtherClasses#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesWithParametersWithModifiers#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldContainDelegates_WhenParsingTextWithDelegatesInInnerClasses#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "CSharpClassFactExtractorDelegateTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "MethodAccessedFieldsTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/AccessedFields/MethodAccessedFieldsTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.AccessedFields.MethodAccessedFieldsTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.AccessedFields",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.AccessField",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.Types.AccessedField"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveAccessedFields_WhenGivenMethodThatAccessesFieldsAndPropertiesFromInsideTheClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveAccessedFields_WhenGivenMethodThatAccessesFieldsAndPropertiesFromOtherClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveAccessedFields_WhenGivenMethodThatAccessesFieldsAndPropertiesFromExternClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    },
                    {
                      "name": "Extract_ShouldNotHaveAccessedFields_WhenGivenArrayAccessor#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveAccessedFields_WhenGivenFieldsFromBaseClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "MethodAccessedFieldsTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpCyclomaticComplexityTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCyclomaticComplexityTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCyclomaticComplexityTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Delegate",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHave1CyclomaticComplexity_WhenGivenClassWithMethodsAndPropertiesAndDelegate#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityFromWhiles_WhenGivenClassWithMethodsAndPropertiesAndDelegate#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityFromIfs_WhenGivenClassWithMethodsAndProperties#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityFromFors_WhenGivenClassWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityFromUnaryExpression_WhenGivenClassWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityFromComplexBinaryExpression_WhenGivenClassWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityFromComplexBinaryExpressionWithIsAndOr_WhenGivenClassWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityFromDoWhile_WhenGivenClassWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityFromForeach_WhenGivenClassWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityFromSwitch_WhenGivenClassWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityFromPatternSwitchWithOperators_WhenGivenClassWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityFromReturnSwitchWithStrings_WhenGivenClassWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityFromPatternSwitchWithClassHierarchy_WhenGivenClassWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCountCyclomaticComplexityForConditionalOperators_WhenGivenClassWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "CSharpCyclomaticComplexityTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpExceptionsThrownRelationMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpExceptionsThrownRelationMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpExceptionsThrownRelationMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "void",
                    "string",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "System.Collections.Generic.IList",
                    "int",
                    "System.Collections.Generic.Dictionary",
                    "System.Collections.Generic.IDictionary"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveNoExceptionsThrown_WhenProvidedWithClassThatDoesntThrowExceptions#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveSystemExceptionsThrown_WhenProvidedWithClassThatThrowsSystemExceptions#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatThrowsCustomExceptions#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatRethrowsExplicitExceptions#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatRethrowsImplicitExceptions#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveExceptionsThrown_WhenProvidedWithClassThatTrowsExceptionsUsingVariablesParametersFieldsPropertiesAndMethodCalls#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveExternalExceptionsThrown_WhenProvidedWithClassThatTrowsExternalExceptions#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveExceptionsThrown_WhenProvidedWithConditionalOperatorWithThrowException#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveExceptionsThrown_WhenProvidedWithNullCoalescingOperatorWithThrowException#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveExceptionsThrown_WhenProvidedWithLambdaThathrowsException#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>"
                      ]
                    },
                    {
                      "name": "CSharpExceptionsThrownRelationMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpFieldsInfoMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpFieldsInfoMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpFieldsInfoMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Fields",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Field",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "void",
                    "System.Collections.Generic.IList",
                    "string",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveNoFields_WhenGivenAnInterface#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePrivateFieldsWithModifiers_WhenGivenClassWithFieldsAndModifiersWithDefaultAccess#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyFieldsAndTheirModifier#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyEventFieldsAndTheirModifier#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveFieldsWithNoModifiers_WhenGivenClassWithFieldsAndTheirVisibilityAndMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool"
                      ]
                    },
                    {
                      "name": "CSharpFieldsInfoMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "GotoStatementVisitorTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Destructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.CSharp.MetricModel",
                    "HoneydewModels.CSharp.MethodModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractGotoStatements_WhenProvidedConstructor#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@TestGotoStatementInMetrics#System.Collections.Generic.IList<HoneydewModels.CSharp.MetricModel>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractGotoStatements_WhenProvidedDestructor#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@TestGotoStatementInMetrics#System.Collections.Generic.IList<HoneydewModels.CSharp.MetricModel>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractGotoStatements_WhenProvidedMethod#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@TestGotoStatementInMetrics#System.Collections.Generic.IList<HoneydewModels.CSharp.MetricModel>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractGotoStatements_WhenProvidedPropertyAccessors#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@TestGotoStatementInMetrics#System.Collections.Generic.IList<HoneydewModels.CSharp.MetricModel>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractGotoStatements_WhenProvidedMethodWithLocalFunctions#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<HoneydewModels.CSharp.MetricModel>",
                        "->Xunit.Assert@Equal#int,int",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@TestGotoStatementInMetrics#System.Collections.Generic.IList<HoneydewModels.CSharp.MetricModel>"
                      ]
                    },
                    {
                      "name": "TestGotoStatementInMetrics#System.Collections.Generic.IList<HoneydewModels.CSharp.MetricModel>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedConstructor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedDestructor#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedMethod#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedPropertyAccessors#string",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Common/GotoStatementVisitorTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Common.GotoStatementVisitorTests@Extract_ShouldExtractGotoStatements_WhenProvidedMethodWithLocalFunctions#string"
                      ],
                      "calledMethods": [
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<HoneydewModels.CSharp.MetricModel>",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "GotoStatementVisitorTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpFileScopedNamespaceTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpFileScopedNamespaceTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpFileScopedNamespaceTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveClassType_WhenGivenFileScopedNamespace#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IClassType>",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CSharpFileScopedNamespaceTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpObjectCreationRelationMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/RelationMetric/CSharpObjectCreationRelationMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.RelationMetric.CSharpObjectCreationRelationMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "void",
                    "string",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "System.Collections.Generic.IList",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "System.Collections.Generic.Dictionary"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveObjectCreation_WhenProvidedWithClassInTheSameNamespace#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveOArrayCreation_WhenProvidedWithClassInTheSameNamespace#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveObjectCreation_WhenProvidedWithClassUnknownClass#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, int>>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveArrayCreation_WhenProvidedWithClassUnknownClass#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveArrayCreation_WhenProvidedWithClassPrimitiveTypes#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveArrayCreation_WhenProvidedWithClassPrimitiveTypesInUnknownClassMethod#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveArrayCreation_WhenProvidedWithArrayCreationOfLocalVariablesPropertiesFieldsAndMethodCallsInUnknownClassMethod#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveArrayCreation_WhenProvidedWithClassInSameNamespaceUsedWithUnknownClassMethod#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CSharpObjectCreationRelationMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpGenericClassTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpGenericClassTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpGenericClassTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.Types.GenericType",
                    "bool"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveClassNameOfGenericType_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveClassNameGenericTypeWithMultipleContainedTypes_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveOneBaseGenericType_WhenProvidedWitClass#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveOneBaseGenericType_WhenProvidedWitStruct#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveOneBaseGenericType_WhenProvidedWithRecord#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveOneBaseGenericType_WhenProvidedWithInterface#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveMultipleBaseGenericTypes_WhenProvidedWithClass#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveMultipleBaseConcreteGenericTypes_WhenProvidedWithClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveGenericModifiers_WhenProvidedWithGenericInterface#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveGenericTypesWithPredefinedConstrains_WhenProvidedWithClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveGenericTypesWithMultipleConstrains_WhenProvidedWithClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "CSharpGenericClassTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpCalledMethodsTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpCalledMethodsTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpCalledMethodsTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "void",
                    "System.Collections.Generic.IList",
                    "string",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.CSharp.ParameterModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorThatCallsOtherMethods#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsMethodsFromAFieldOfADifferentClass#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsStaticMethods#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsStaticMethodsFromUnknownClass#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsFuncLambdas#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsActionLambdas#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallMethodsInsideLambdas#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallHasCalledMethodsChained#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsLinqMethods#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsMethodsFromDictionaryOfACastedObject#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCalledMethods_WhenProvidedClassThatCallsMethodsFromAnotherClassAsProperty#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCalledMethods_WhenProvidedWithGenericMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNoCalledMethods_WhenProvidedWithTypeofSyntax#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractNameof_WhenProvidedWithNameofSyntax#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCalledMethods_WhenGivenMethodWithAwaitStatement#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CSharpCalledMethodsTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpConstructorLocalVariablesTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorLocalVariablesTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorLocalVariablesTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.LocalVariables",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.LocalVariables",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "int"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithPrimitiveTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithCustomClassTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithExternClassTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithArrayLocalVariable#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->int@ToString#"
                      ]
                    },
                    {
                      "name": "CSharpConstructorLocalVariablesTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpCompilationUnitImportsMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/CompilationUnitLevel/CSharpCompilationUnitImportsMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.CompilationUnitLevel.CSharpCompilationUnitImportsMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "bool",
                    "HoneydewModels.CSharp.UsingModel",
                    "System.Collections.Generic.List"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveUsings_WhenGivenOneClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsings_WhenCompilationUnitText#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesInImbricatedNamespaces#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses_ButNoNamespace#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsingsInClassModels_WhenGivenStaticUsings#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.IList@Cast<UsingModel>#",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.List@SingleOrDefault#System.Func<HoneydewModels.CSharp.UsingModel, bool>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedNamespace#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>",
                        "->@nameof#HoneydewModels.Types.EAliasType"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>",
                        "->@nameof#HoneydewModels.Types.EAliasType"
                      ]
                    },
                    {
                      "name": "CSharpCompilationUnitImportsMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpConstructorParametersAttributeMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorParametersAttributeMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorParametersAttributeMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithSystemAttributes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "CSharpConstructorParametersAttributeMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpDelegateAttributeMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpDelegateAttributeMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpDelegateAttributeMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Delegate",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "System.Collections.Generic.IList",
                    "bool"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "CSharpDelegateAttributeMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpConstructorAttributeMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorAttributeMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorAttributeMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "bool",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "CSharpConstructorAttributeMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpGenericDelegateTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Delegate/CSharpGenericDelegateTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Delegate.CSharpGenericDelegateTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Delegate",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "void",
                    "string",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.DelegateModel",
                    "bool",
                    "HoneydewModels.Types.GenericType"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveDelegateNameOfGenericType_WhenProvidedWithGenericDelegate#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveDelegateNameGenericTypeWithMultipleContainedTypes_WhenProvidedWithGenericDelegate#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveGenericModifiers_WhenProvidedWithGenericDelegate#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveGenericTypesWithPredefinedConstrains_WhenProvidedWithDelegate#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveGenericTypesWithMultipleConstrains_WhenProvidedWithDelegate#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "CSharpGenericDelegateTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpEnumAttributesTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumAttributesTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumAttributesTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Enum",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "bool",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.EnumModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractAttribute_GivenEnum#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLabelAttributes_GivenEnum#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "CSharpEnumAttributesTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpClassImportsMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpClassImportsMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpClassImportsMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Delegate",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Enum",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "System.Collections.Generic.IList",
                    "bool",
                    "HoneydewModels.CSharp.UsingModel[]",
                    "HoneydewModels.CSharp.UsingModel",
                    "System.Collections.Generic.List"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveUsings_WhenGivenOneClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsings_WhenGivenEnum#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsings_WhenGivenOneDelegate#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesWithTheSameUsings#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesInMultipleNamespacesWithSharedUsings#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>",
                        "->Xunit.Assert@Contains#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IImportType>,System.Predicate<HoneydewModels.Types.IImportType>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsings_WhenGivenMultipleClassesAndDelegatesInImbricatedNamespaces#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>",
                        "->Xunit.Assert@Contains#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IImportType>,System.Predicate<HoneydewModels.Types.IImportType>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>",
                        "->Xunit.Assert@Null#object",
                        "->Xunit.Assert@Contains#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IImportType>,System.Predicate<HoneydewModels.Types.IImportType>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsings_WhenGivenMultipleClassesWithInnerClasses_ButNoNamespace#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsingsInClassModels_WhenGivenText#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>",
                        "->Xunit.Assert@Contains#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IImportType>,System.Predicate<HoneydewModels.Types.IImportType>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsingsInClassModels_WhenGivenStaticUsings#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->System.Collections.Generic.IEnumerable@ToArray#",
                        "->System.Collections.Generic.IList@Cast<UsingModel>#",
                        "->Xunit.Assert@NotNull#object",
                        "->HoneydewModels.CSharp.UsingModel[]@SingleOrDefault#System.Func<HoneydewModels.CSharp.UsingModel, bool>",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->Xunit.Assert@Contains#System.Collections.Generic.IEnumerable<HoneydewModels.CSharp.UsingModel>,System.Predicate<HoneydewModels.CSharp.UsingModel>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedNamespace#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>",
                        "->@nameof#HoneydewModels.Types.EAliasType",
                        "->Xunit.Assert@Contains#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IImportType>,System.Predicate<HoneydewModels.Types.IImportType>"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveUsingsInClassModels_WhenGivenAliasedClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@NotNull#object",
                        "->System.Collections.Generic.IList@SingleOrDefault#System.Func<HoneydewModels.Types.IImportType, bool>",
                        "->@nameof#HoneydewModels.Types.EAliasType"
                      ]
                    },
                    {
                      "name": "CSharpClassImportsMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LinesOfCodeCounterTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LinesOfCodeCounterTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.LinesOfCodeCounterTests",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewExtractors.Core.Metrics.Extraction",
                    "HoneydewExtractors.CSharp.Metrics.Extraction",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "int",
                    "string",
                    "HoneydewModels.LinesOfCode"
                  ],
                  "methods": [
                    {
                      "name": "Count_ShouldReturnSourceLinesCount_WhenProvidedWithContentWithOnlySourceLines#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.Metrics.Extraction.ILinesOfCodeCounter@Count#string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Count_ShouldReturnCommentLinesCount_WhenProvidedWithContentWithOnlySingleLineComments#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.Metrics.Extraction.ILinesOfCodeCounter@Count#string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Count_ShouldReturnCommentLinesCount_WhenProvidedWithContentWithOnlyMultiLineComments#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.Metrics.Extraction.ILinesOfCodeCounter@Count#string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Count_ShouldReturnWhitespaceLinesCount_WhenProvidedWithContentWithSourceAndWhitespaceLines#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.Metrics.Extraction.ILinesOfCodeCounter@Count#string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Count_ShouldReturnLinesOfCodeCount_WhenProvidedWithContentWithSourceAndCommentedAndWhitespaceLines#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.Metrics.Extraction.ILinesOfCodeCounter@Count#string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Count_ShouldReturnLinesOfCodeCount_WhenProvidedWithContentWithSourceAndCommentedOnTheSameLine#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.Metrics.Extraction.ILinesOfCodeCounter@Count#string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Count_ShouldReturnLinesOfCodeCount_WhenProvidedWithContentWithSourceAndImbricatedMultilineComments#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.Metrics.Extraction.ILinesOfCodeCounter@Count#string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Count_ShouldReturnLinesOfCodeCount_WhenProvidedWithContentWithSourceAndMultilineCommentsOnTheSameLine#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.Metrics.Extraction.ILinesOfCodeCounter@Count#string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Count_ShouldReturnLinesOfCodeCount_WhenProvidedWithContentWithSingleLineAndMultiLineComments#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewExtractors.Core.Metrics.Extraction.ILinesOfCodeCounter@Count#string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "LinesOfCodeCounterTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpMethodInfoMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/ClassLevel/CSharpMethodInfoMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.ClassLevel.CSharpMethodInfoMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "void",
                    "System.Collections.Generic.IList",
                    "string",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.CSharp.ParameterModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveNoMethods_WhenGivenClassAndRecordsWithFieldsOnly#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveMethods_WhenGivenAClassHierarchy#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveMethodsWithMethodCalls_WhenGivenMethodsThatCallOtherMethods#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveMethodsWithMethodCalls_WhenGivenMethodsThatCallStaticMethods#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveMethodsWithMethodCallsWithParameterModifiers_WhenGivenMethodsThatCallOtherMethodsWithParameterModifiers#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractNullDefaultValue#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveDefinitionClassNameAndLocationClassName_GivenClassHierarchy#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNoMethodDefinitionNames_GivenExternClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "CSharpMethodInfoMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpGenericFieldTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpGenericFieldTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpGenericFieldTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Fields",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Field",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.Types.GenericType",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveFieldOfGenericType_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveFieldOfGenericTypeWithMultipleContainedTypes_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "CSharpGenericFieldTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpFieldAttributeMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Field/CSharpFieldAttributeMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Field.CSharpFieldAttributeMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Fields",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Field",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "bool",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "CSharpFieldAttributeMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpLocalVariablesTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/LocalVariable/CSharpLocalVariablesTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.LocalVariable.CSharpLocalVariablesTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.LocalVariables",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.LocalVariables",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.Types.ITypeWithLocalVariables[]"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveRefModifier_WhenGivenMethodWithLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveRefReadonlyModifier_WhenGivenMethodWithLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveRefModifier_WhenGivenConstructorWithLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveRefReadonlyModifier_WhenGivenConstructorWithLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveRefModifier_WhenGivenPropertyWithLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveRefReadonlyModifier_WhenGivenPropertyWithLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNullableVariables_WhenEntitiesWithLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNullableVariables_WhenEntitiesWithLocalVariablesOfClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "CSharpLocalVariablesTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpMethodAttributeMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodAttributeMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodAttributeMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "bool",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "CSharpMethodAttributeMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpConstructorInfoTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Types",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.CSharp.ParameterModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractStaticConstructor_WhenProvidedWithDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveConstructors_WhenGivenClassWithConstructors#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorsThatCallEachOther#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorsThatCallEachOtherAndBaseConstructor#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@AssertBasicConstructorInfo#HoneydewModels.Types.IMethodSkeletonType,string",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveConstructors_WhenGivenClassWithConstructorsThatCallsBaseConstructor_ButBaseClassIsNotPresentInCompilationUnit#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Constructor/CSharpConstructorInfoTests.cs->HoneydewExtractorsTests.CSharp.Metrics.Extraction.Constructor.CSharpConstructorInfoTests@AssertBasicConstructorInfo#HoneydewModels.Types.IMethodSkeletonType,string",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "CSharpConstructorInfoTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpClassFactExtractorsTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/CSharpClassFactExtractorsTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.CSharpClassFactExtractorsTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Fields",
                    "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Field",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "HoneydewExtractors.Core.ExtractionException",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.CSharp.ParameterModel",
                    "HoneydewModels.CSharp.MetricModel",
                    "bool",
                    "HoneydewModels.Types.IEntityType[]"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldThrowEmptyContentException_WhenTryingToExtractFromEmptyString#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Xunit.Assert@Throws<ExtractionException>#System.Func<object>",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldThrowExtractionException_WhenParsingTextWithParsingErrors#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "->Xunit.Assert@Throws<ExtractionException>#System.Func<object>",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel"
                      ]
                    },
                    {
                      "name": "Extract_ShouldSetClassNameAndNamespace_WhenParsingTextWithOneEntity#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldSetClassModifiers_WhenParsingTextWithOneEntity#string,string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithMethodWithParameterWithModifiers#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithExtensionMethod#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithMethodWithParameterWithParamsModifiers#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldSetParameters_WhenParsingTextWithOneClassWithMethodWithParameterWithDefaultValues#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldNotHaveMetrics_WhenGivenAnEmptyListOfMetrics_ForOneClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->object@GetType#",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldSetClassNameAndInterfaceAndNamespace_WhenParsingTextWithOneClassAndOneInterface#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#HoneydewScriptBeePlugin.Models.NamespaceModel,HoneydewScriptBeePlugin.Models.NamespaceModel",
                        "->object@GetType#",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNoFields_WhenGivenAnInterface#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePrivateFieldsWithModifiers_WhenGivenClassWithFieldsAndModifiersWithDefaultAccess#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyFieldsAndTheirModifier#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveFieldsWithNoOtherModifiers_WhenGivenClassWithOnlyEventFieldsAndTheirModifier#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveFieldsWithNoModifiers_WhenGivenClassWithFieldsAndTheirVisibilityAndMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNoMethods_WhenGivenClassTypeWithNoMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveMethods_WhenGivenAnInterfaceWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveMethods_WhenGivenAClassWithMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Null#object",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveReadonlyStructs_WhenGivenPathToAFileWithReadonlyStructs#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveReadonlyStructMembers_WhenGivenPathToAFileWithMutableStructWithReadonlyMembers#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveReadonlyStaticStructMembers_WhenGivenPathToAFileWithStructWithStaticReadonlyMembers#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveRefStructs_WhenGivenPathToAFileWithRefStructs#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveRefReturnMethod_WhenGivenPathToAFileWithRefStructs#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNullableEntities_WhenProvidedWithClassWithNullableEntities#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNullableEntities_WhenProvidedWithClassWithNullableClassEntities#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveContainingClassNames_GivenNestedClasses#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CSharpClassFactExtractorsTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpMethodReturnValueAttributeMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodReturnValueAttributeMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodReturnValueAttributeMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "CSharpMethodReturnValueAttributeMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpGenericMethodTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpGenericMethodTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpGenericMethodTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "bool",
                    "HoneydewModels.Types.GenericType",
                    "HoneydewModels.CSharp.MethodModel",
                    "HoneydewModels.Types.IMethodTypeWithLocalFunctions[]",
                    "int"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHaveGenericMethod_WhenProvidedDifferentNonGenericClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveGenericMethodWithMultipleGenericParams_WhenProvidedDifferentNonGenericClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveGenericTypesWithPredefinedConstrains_WhenProvidedWithClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveGenericTypesWithMultipleConstrains_WhenProvidedWithClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLocalFunctionGenericMethodWithConstraints_WhenProvidedWithClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveGenericLocalMethodWithMultipleConstrains_WhenProvidedWithClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "CSharpGenericMethodTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpEnumInfoTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Enum/CSharpEnumInfoTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Enum.CSharpEnumInfoTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Enum",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.EnumModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldBasicInfo_WhenProvidedWithEnum#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Single#System.Collections.Generic.IEnumerable<HoneydewModels.Types.IBaseType>",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveOtherType_WhenProvidedWithEnumWithOtherType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldContainingClass_WhenProvidedWithEnumInInnerClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CSharpEnumInfoTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RawFileSolutionLoaderTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/RepositoryLoading/RawFileSolutionLoaderTests.cs",
          "namespaces": []
        },
        {
          "name": "FileDataAttribute.cs",
          "path": "HoneydewExtractorsTests/FileDataAttribute.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.FileDataAttribute",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Reflection",
                    "Xunit.Sdk"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "Xunit.Sdk.DataAttribute",
                    "System.Reflection.MethodInfo",
                    "object[]",
                    "System.Collections.Generic.IEnumerable",
                    "System.Threading.Tasks.Task"
                  ],
                  "methods": [
                    {
                      "name": "GetData#System.Reflection.MethodInfo",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.IO.File@ReadAllTextAsync#string,System.Threading.CancellationToken"
                      ]
                    },
                    {
                      "name": "FileDataAttribute#string,bool",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.IO.Path@Combine#string,string",
                        "->System.IO.Directory@GetCurrentDirectory#"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Microsoft.NET.Test.Sdk.Program.cs",
          "path": "C:/Users/Andrei/.nuget/packages/microsoft.net.test.sdk/17.0.0/build/netcoreapp2.1/Microsoft.NET.Test.Sdk.Program.cs",
          "namespaces": [
            {
              "name": "<global namespace>",
              "classes": [
                {
                  "name": "AutoGeneratedProgram",
                  "type": "Class",
                  "usingStatements": ["System"],
                  "attributes": [
                    "Microsoft.VisualStudio.TestPlatform.TestSDKAutoGeneratedCode"
                  ],
                  "usedClasses": [
                    "object",
                    "Microsoft.VisualStudio.TestPlatform.TestSDKAutoGeneratedCode",
                    "string[]",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Main#string[]",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": ".NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "path": "HoneydewExtractorsTests/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "namespaces": []
        },
        {
          "name": "HoneydewExtractorsTests.AssemblyInfo.cs",
          "path": "HoneydewExtractorsTests/obj/Debug/net6.0/HoneydewExtractorsTests.AssemblyInfo.cs",
          "namespaces": []
        },
        {
          "name": "CSharpMethodParametersAttributeMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodParametersAttributeMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodParametersAttributeMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithSystemAttributes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "CSharpMethodParametersAttributeMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpPropertyAccessorMethodLocalVariablesTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAccessorMethodLocalVariablesTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAccessorMethodLocalVariablesTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.LocalVariables",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.LocalVariables",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithPrimitiveTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithCustomClassTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithExternClassTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithArrayLocalVariable#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CSharpPropertyAccessorMethodLocalVariablesTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpGenericPropertyTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpGenericPropertyTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpGenericPropertyTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "HoneydewModels.Types.GenericType",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "bool"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHavePropertyOfGenericType_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePropertyOfGenericTypeWithMultipleContainedTypes_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePropertyOfGenericTypeWithMultipleNullableContainedTypes_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "CSharpGenericPropertyTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpPropertyAttributeMetricTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyAttributeMetricTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyAttributeMetricTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "bool",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedDifferentClassType#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithNoParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithOneAttributeWithOneParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithMultipleAttributesWitMultipleParams#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithCustomAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithExternAttribute#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithPropertyAccessors#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractAttribute_WhenProvidedWithPropertyAccessorsForReturnValue#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CSharpPropertyAttributeMetricTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpMethodLocalVariablesTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/CSharpMethodLocalVariablesTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.CSharpMethodLocalVariablesTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.LocalVariables",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.LocalVariables",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.CSharp.MethodModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithPrimitiveTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithCustomClassTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithTypeofSyntax#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithNameofSyntax#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithExternClassTypes#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithArrayLocalVariable#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionWithLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionWithArrayLocalVariables#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalVariablesFromIfAndSwitch#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionsWithLocalVariablesFromIfAndSwitch#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalVariablesFromForeach#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalVariables_WhenProvidedWithLocalFunctionsWithLocalVariablesFromForeach#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLocalVariablesDependencies_WhenGivenPropertyFromOtherClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNoLocalVariablesDependencies_WhenGivenUnknownClassMembers#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Moq.Mock@Verify#System.Linq.Expressions.Expression<System.Action<HoneydewCore.Logging.ILogger>>,System.Func<Moq.Times>",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLocalVariableDependencies_WhenGivenMethodWithAwaitStatement#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLocalVariableDependencies_WhenGivenMethodWithAwaitStatementWithUnknownClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveLocalVariableDependencies_WhenGivenMethodWithAwaitStatementWithUnknownGenericClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "CSharpMethodLocalVariablesTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LocalFunctionsExtractionTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Method/LocalFunctionsExtractionTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Method.LocalFunctionsExtractionTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.MethodModel",
                    "HoneydewModels.CSharp.ConstructorModel",
                    "HoneydewModels.CSharp.PropertyModel",
                    "HoneydewModels.Types.IMethodTypeWithLocalFunctions[]"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldExtractLocalFunction_WhenGivenMethodWithOneLocalFunctionThatReturnsVoidAndHasNoParameters#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalFunction_WhenGivenLocalFunctionWithReturnValueAndParameters#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractMultipleLocalFunctions_WhenGivenLocalFunctionsWithModifiers#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalFunctionCyclomaticComplexity_WhenGivenLocalFunctionWithHighCyclomaticComplexity#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalFunction_WhenGivenMethodPropertyConstructorWithLocalFunction#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalFunctionAndUsages_WhenGivenMethodWithMultipleLocalFunctions#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalFunctions_WhenGivenMethodWithImbricatedLocalFunctions#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalFunctionsWithCalledMethods_WhenGivenMethodWithImbricatedLocalFunctions#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalFunctions_WhenGivenPropertyWithImbricatedLocalFunctions#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalFunctionsWithCalledMethods_WhenGivenPropertyWithImbricatedLocalFunctions#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldExtractLocalFunctionsWithCalledMethods_WhenGivenEventPropertyWithImbricatedLocalFunctions#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "LocalFunctionsExtractionTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CSharpPropertyInfoTests.cs",
          "path": "HoneydewExtractorsTests/CSharp/Metrics/Extraction/Property/CSharpPropertyInfoTests.cs",
          "namespaces": [
            {
              "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property",
              "classes": [
                {
                  "name": "HoneydewExtractorsTests.CSharp.Metrics.Extraction.Property.CSharpPropertyInfoTests",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewModels.CSharp",
                    "Moq",
                    "Xunit"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor",
                    "Moq.Mock",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator",
                    "HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator",
                    "object",
                    "string",
                    "void",
                    "System.Collections.Generic.IList",
                    "Microsoft.CodeAnalysis.SyntaxTree",
                    "Microsoft.CodeAnalysis.SemanticModel",
                    "HoneydewModels.CSharp.ClassModel",
                    "HoneydewModels.CSharp.ParameterModel"
                  ],
                  "methods": [
                    {
                      "name": "Extract_ShouldHavePropertyInfo_WhenGivenTypeWithProperty#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveEventPropertyInfo_WhenGivenTypeWithProperty#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveAbstractModifier_WhenGivenPropertyInInterface#",
                      "type": "Method",
                      "attributes": ["Xunit.FactAttribute"],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveOnlyGetAccessors_WhenGivenClassWithProperty#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveOnlySetAccessors_WhenGivenClassWithProperty#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveOnlyInitAccessors_WhenGivenClassWithProperty#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveGetSetAccessors_WhenGivenClassWithProperty#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveGetInitAccessors_WhenGivenClassWithProperty#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string"
                      ]
                    },
                    {
                      "name": "Extract_ShouldCalledMethods_WhenGivenPropertyWithExpressionBodiedMember#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveCyclomaticComplexity_WhenGivenClassWithProperties#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveProperties_WhenGivenAnInterface#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePrivatePropertiesWithModifiers_WhenGivenClassWithPropertiesAndModifiersWithDefaultAccess#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePropertiesWithNoOtherModifiers_WhenGivenClassWithOnlyPropertiesAndTheirModifier#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePropertiesWithNoOtherModifiers_WhenGivenClassWithOnlyEventPropertiesAndTheirModifier#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "Xunit.InlineDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHavePropertiesWithAccessors_WhenGivenClassWithPropertiesWithDifferentAccessors#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@True#bool"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveProperties_WhenGivenClassWithComputedEmptyProperties#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveProperties_WhenGivenClassWithComputedPropertyThatCallsInnerMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveProperties_WhenGivenClassWithComputedPropertyThatCallsMethodsFromOtherClassFromTheSameNamespace#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveProperties_WhenGivenClassWithComputedPropertyThatCallsStaticMethodsFromUnknownClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@False#bool",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsInnerMethods#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsMethodsFromOtherClassFromTheSameNamespace#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsStaticMethodsFromUnknownClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveEventProperties_WhenGivenClassWithComputedPropertyThatCallsMethodsFromOtherClassFromTheSameNamespaceAsProperty#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@True#bool",
                        "->Xunit.Assert@Null#object"
                      ]
                    },
                    {
                      "name": "Extract_ShouldHaveNoMethodDefinitionNames_GivenExternClass#string",
                      "type": "Method",
                      "attributes": [
                        "Xunit.TheoryAttribute",
                        "HoneydewExtractorsTests.FileDataAttribute"
                      ],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/CSharp/Metrics/CSharpSyntacticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSyntacticModelCreator@Create#string",
                        "HoneydewExtractors/CSharp/Metrics/CSharpSemanticModelCreator.cs->HoneydewExtractors.CSharp.Metrics.CSharpSemanticModelCreator@Create#Microsoft.CodeAnalysis.SyntaxTree",
                        "HoneydewExtractors/CSharp/Metrics/CSharpFactExtractor.cs->HoneydewExtractors.CSharp.Metrics.CSharpFactExtractor@Extract#Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SemanticModel",
                        "->Xunit.Assert@Equal#int,int",
                        "->Xunit.Assert@Equal#string,string",
                        "->Xunit.Assert@Empty#System.Collections.IEnumerable"
                      ]
                    },
                    {
                      "name": "CSharpPropertyInfoTests#",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "projectReferences": [
        "HoneydewExtractors",
        "HoneydewCore",
        "HoneydewModels"
      ],
      "externalReferences": []
    },
    {
      "name": "Honeydew",
      "path": "Honeydew/Honeydew.csproj",
      "files": [
        {
          "name": "AddGenericNamesStrategy.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/AddGenericNamesStrategy.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.AddGenericNamesStrategy",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Utils",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "bool",
                    "Honeydew.PostExtraction.ReferenceRelations.AddNameStrategy",
                    "string",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "void",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.DelegateModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel"
                  ],
                  "methods": [
                    {
                      "name": "AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [
                        "Honeydew/PostExtraction/ReferenceRelations/AddGenericNamesStrategy.cs->Honeydew.PostExtraction.ReferenceRelations.AddGenericNamesStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType"
                      ],
                      "calledMethods": [
                        "Honeydew/PostExtraction/ReferenceRelations/AddGenericNamesStrategy.cs->Honeydew.PostExtraction.ReferenceRelations.AddGenericNamesStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,string,int",
                        "Honeydew/PostExtraction/ReferenceRelations/AddGenericNamesStrategy.cs->Honeydew.PostExtraction.ReferenceRelations.AddGenericNamesStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType"
                      ]
                    },
                    {
                      "name": "AddDependency#System.Collections.Generic.IDictionary<string, int>,string,int",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [
                        "Honeydew/PostExtraction/ReferenceRelations/AddGenericNamesStrategy.cs->Honeydew.PostExtraction.ReferenceRelations.AddGenericNamesStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType"
                      ],
                      "calledMethods": [
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsPrimitive#string",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsPrimitiveArray#string",
                        "Honeydew/PostExtraction/ReferenceRelations/AddNameStrategy.cs->Honeydew.PostExtraction.ReferenceRelations.AddNameStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,string,int"
                      ]
                    },
                    {
                      "name": "AddGenericNamesStrategy#bool",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExternDataRelationVisitor.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/ExternDataRelationVisitor.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.ExternDataRelationVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.FieldAccess",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "System.Collections.Generic.Dictionary",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel"
                  ],
                  "methods": [
                    {
                      "name": "Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.PostExtraction.ReferenceRelations.IAddStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType"
                      ]
                    },
                    {
                      "name": "ExternDataRelationVisitor#Honeydew.PostExtraction.ReferenceRelations.IAddStrategy",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "FieldsRelationVisitor.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/FieldsRelationVisitor.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.FieldsRelationVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.FieldModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "System.Collections.Generic.Dictionary",
                    "HoneydewScriptBeePlugin.Models.ClassModel"
                  ],
                  "methods": [
                    {
                      "name": "Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHavePrimitiveFields_WhenClassHasFieldsOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHavePrimitiveFields_WhenClassHasEventFieldsOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHaveDependenciesFields_WhenClassHasFields#string",
                        "HoneydewTests/RelationMetric/CSharpFieldsRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpFieldsRelationVisitorTests@Extract_ShouldHaveDependenciesEventFields_WhenClassHasEventFields#string"
                      ],
                      "calledMethods": [
                        "->Honeydew.PostExtraction.ReferenceRelations.IAddStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType"
                      ]
                    },
                    {
                      "name": "FieldsRelationVisitor#Honeydew.PostExtraction.ReferenceRelations.IAddStrategy",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "HierarchyRelationVisitor.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/HierarchyRelationVisitor.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.HierarchyRelationVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "System.Collections.Generic.IList",
                    "System.Collections.Generic.Dictionary",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel"
                  ],
                  "methods": [
                    {
                      "name": "Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.PostExtraction.ReferenceRelations.IAddStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType"
                      ]
                    },
                    {
                      "name": "HierarchyRelationVisitor#Honeydew.PostExtraction.ReferenceRelations.IAddStrategy",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IAddStrategy.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/IAddStrategy.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.IAddStrategy",
                  "type": "interface",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "AddDependency#System.Collections.Generic.IDictionary<string, int>,string,int",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IEntityModelVisitor.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/IEntityModelVisitor.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.IEntityModelVisitor",
                  "type": "interface",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "int",
                    "System.Collections.Generic.IDictionary"
                  ],
                  "methods": [
                    {
                      "name": "Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "NoBarsProgressLogger.cs",
          "path": "Honeydew/NoBarsProgressLogger.cs",
          "namespaces": [
            {
              "name": "Honeydew",
              "classes": [
                {
                  "name": "Honeydew.NoBarsProgressLogger",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "HoneydewCore.Logging"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "void",
                    "string",
                    "System.Collections.Generic.IEnumerable",
                    "int"
                  ],
                  "methods": [
                    {
                      "name": "Log#object",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": ["->System.Console@WriteLine#object"]
                    },
                    {
                      "name": "Log#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": ["->System.Console@WriteLine#"]
                    },
                    {
                      "name": "CreateProgressBars#System.Collections.Generic.IEnumerable<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "CreateProgressLogger#int,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "StopProgressBar#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ParameterRelationVisitor.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/ParameterRelationVisitor.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ParameterModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "System.Collections.Generic.Dictionary",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.DelegateModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel"
                  ],
                  "methods": [
                    {
                      "name": "Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveNoParameters_WhenClassHasMethodsWithNoParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveNoParameters_WhenClassHasConstructorWithNoParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHavePrimitiveParameters_WhenClassHasMethodsWithPrimitiveParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHavePrimitiveParameters_WhenInterfaceHasMethodsWithPrimitiveParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenInterfaceHasMethodsWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenClassHasMethodsWithDependenciesParameters#string",
                        "HoneydewTests/RelationMetric/CSharpParameterRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpParameterRelationMetricTests@Extract_ShouldHaveDependenciesParameters_WhenClassHasConstructorWithDependenciesParameters#string"
                      ],
                      "calledMethods": [
                        "->Honeydew.PostExtraction.ReferenceRelations.IAddStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType"
                      ]
                    },
                    {
                      "name": "ParameterRelationVisitor#Honeydew.PostExtraction.ReferenceRelations.IAddStrategy",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "AddNameStrategy.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/AddNameStrategy.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.AddNameStrategy",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "string",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["virtual", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.PostExtraction.ReferenceRelations.IAddStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,string,int"
                      ]
                    },
                    {
                      "name": "AddDependency#System.Collections.Generic.IDictionary<string, int>,string,int",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["virtual", "public"],
                      "callers": [
                        "Honeydew/PostExtraction/ReferenceRelations/AddGenericNamesStrategy.cs->Honeydew.PostExtraction.ReferenceRelations.AddGenericNamesStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,string,int"
                      ],
                      "calledMethods": [
                        "->string@Trim#char",
                        "->System.Collections.Generic.IDictionary@ContainsKey#string",
                        "->System.Collections.Generic.IDictionary@Add#string,int"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "PropertiesRelationVisitor.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/PropertiesRelationVisitor.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.PropertiesRelationVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "System.Collections.Generic.Dictionary",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel"
                  ],
                  "methods": [
                    {
                      "name": "Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHavePrimitiveProperties_WhenClassHasPropertiesOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHavePrimitiveProperties_WhenClassHasEventPropertiesOfPrimitiveTypes#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHaveDependenciesProperties_WhenClassHasProperties#string",
                        "HoneydewTests/RelationMetric/CSharpPropertiesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpPropertiesRelationMetricTests@Extract_ShouldHaveDependenciesEventProperties_WhenClassHasEventProperties#string"
                      ],
                      "calledMethods": [
                        "->Honeydew.PostExtraction.ReferenceRelations.IAddStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType"
                      ]
                    },
                    {
                      "name": "PropertiesRelationVisitor#Honeydew.PostExtraction.ReferenceRelations.IAddStrategy",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "HoneydewChooseStrategy.cs",
          "path": "Honeydew/Processors/HoneydewChooseStrategy.cs",
          "namespaces": [
            {
              "name": "Honeydew.Processors",
              "classes": [
                {
                  "name": "Honeydew.Processors.HoneydewChooseStrategy",
                  "type": "Class",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["object", "string", "bool"],
                  "methods": [
                    {
                      "name": "Choose#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "IRelationsMetricChooseStrategy.cs",
          "path": "Honeydew/Processors/IRelationsMetricChooseStrategy.cs",
          "namespaces": [
            {
              "name": "Honeydew.Processors",
              "classes": [
                {
                  "name": "Honeydew.Processors.IRelationsMetricChooseStrategy",
                  "type": "interface",
                  "usingStatements": [],
                  "attributes": [],
                  "usedClasses": ["string", "bool"],
                  "methods": [
                    {
                      "name": "Choose#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["abstract", "public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "LocalVariablesRelationVisitor.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewScriptBeePlugin.Models.LocalVariableModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "System.Collections.Generic.Dictionary",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoLocalVariables_WhenClassHasMethodsThatDontUseLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHavePrimitiveLocalValues_WhenClassHasMethodsThatHaveLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoPrimitiveLocalVariables_WhenGivenAnInterface#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveNoDependencies_WhenGivenAnInterface#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasMethodsWithNonPrimitiveLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasConstructorLocalVariables#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenClassHasMethodsWithNonPrimitiveLocalVariablesInAForLoop#string",
                        "HoneydewTests/RelationMetric/CSharpLocalVariablesRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpLocalVariablesRelationVisitorTests@Extract_ShouldHaveLocalVariablesDependencies_WhenNamespaceHasMultipleClasses#string"
                      ],
                      "calledMethods": [
                        "->Honeydew.PostExtraction.ReferenceRelations.IAddStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType",
                        "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@ExtractLocalVariablesFromLocalFunctions#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.MethodModel"
                      ]
                    },
                    {
                      "name": "ExtractLocalVariablesFromLocalFunctions#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.MethodModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@ExtractLocalVariablesFromLocalFunctions#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.MethodModel"
                      ],
                      "calledMethods": [
                        "->Honeydew.PostExtraction.ReferenceRelations.IAddStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType",
                        "Honeydew/PostExtraction/ReferenceRelations/LocalVariablesRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@ExtractLocalVariablesFromLocalFunctions#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.MethodModel"
                      ]
                    },
                    {
                      "name": "LocalVariablesRelationVisitor#Honeydew.PostExtraction.ReferenceRelations.IAddStrategy",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "JafaxChooseStrategy.cs",
          "path": "Honeydew/Processors/JafaxChooseStrategy.cs",
          "namespaces": [
            {
              "name": "Honeydew.Processors",
              "classes": [
                {
                  "name": "Honeydew.Processors.JafaxChooseStrategy",
                  "type": "Class",
                  "usingStatements": [
                    "Honeydew.PostExtraction.ReferenceRelations"
                  ],
                  "attributes": [],
                  "usedClasses": ["object", "string", "bool"],
                  "methods": [
                    {
                      "name": "Choose#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "CommandLineOptions.cs",
          "path": "Honeydew/CommandLineOptions.cs",
          "namespaces": [
            {
              "name": "Honeydew",
              "classes": [
                {
                  "name": "Honeydew.CommandLineOptions",
                  "type": "Class",
                  "usingStatements": ["CommandLine"],
                  "attributes": [],
                  "usedClasses": ["string", "bool", "object"],
                  "methods": [
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "set#",
                      "type": "set",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RepositoryModelToCyclomaticComplexityPerFileProcessor.cs",
          "path": "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs",
          "namespaces": [
            {
              "name": "Honeydew.Processors",
              "classes": [
                {
                  "name": "Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.ModelRepresentations",
                    "HoneydewCore.Processors",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewCore.ModelRepresentations.CyclomaticComplexityPerFileRepresentation",
                    "HoneydewCore.Processors.IProcessorFunction",
                    "string",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.List",
                    "System.Collections.Generic.Dictionary",
                    "int",
                    "void",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel"
                  ],
                  "methods": [
                    {
                      "name": "Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewTests/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessorTests@Process_ShouldReturnEmptyRepresentation_WhenRepositoryModelIsNull#",
                        "HoneydewTests/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessorTests@Process_ShouldReturnEmptyRepresentation_WhenRepositoryModelIsEmpty#",
                        "HoneydewTests/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessorTests@Process_ShouldReturn4ConcernsWith0Strength_WhenRepositoryModelHasOneClassWithNoMethodsOrProperties#",
                        "HoneydewTests/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessorTests@Process_ShouldReturn4Concerns_WhenRepositoryModelHasOneClassWithOneMethodInOneFile#",
                        "HoneydewTests/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessorTests@Process_ShouldReturn4Concerns_WhenRepositoryModelHasMultipleClassesWithOneMethodInOneFile#",
                        "HoneydewTests/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessorTests@Process_ShouldReturn4Concerns_WhenRepositoryModelHasOneClassWithMultipleMethodInOneFile#",
                        "HoneydewTests/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessorTests.cs->HoneydewTests.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessorTests@Process_ShouldReturn4Concerns_WhenRepositoryModelHasMultipleClassesWithInMultipleFiles#"
                      ],
                      "calledMethods": [
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@GroupClassesByFilePath#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@CalculateCycloComponents#System.Collections.Generic.List<HoneydewScriptBeePlugin.Models.EntityModel>,int,int,int,int,int",
                        "HoneydewCore/ModelRepresentations/CyclomaticComplexityPerFileRepresentation.cs->HoneydewCore.ModelRepresentations.CyclomaticComplexityPerFileRepresentation@AddConcern#HoneydewCore.ModelRepresentations.Concern",
                        "->int@ToString#"
                      ]
                    },
                    {
                      "name": "CalculateCycloComponents#System.Collections.Generic.List<HoneydewScriptBeePlugin.Models.EntityModel>,int,int,int,int,int",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@UpdateVariables#int"
                      ]
                    },
                    {
                      "name": "GroupClassesByFilePath#HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Processors/RepositoryModelToCyclomaticComplexityPerFileProcessor.cs->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "HoneydewScriptBeePlugin/Models/RepositoryModel.cs->HoneydewScriptBeePlugin.Models.RepositoryModel@GetEnumerable#",
                        "->string@IsNullOrEmpty#string",
                        "->System.Collections.Generic.Dictionary@TryGetValue#string,System.Collections.Generic.List<HoneydewScriptBeePlugin.Models.EntityModel>",
                        "->System.Collections.Generic.List@Add#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->System.Collections.Generic.Dictionary@Add#string,System.Collections.Generic.List<HoneydewScriptBeePlugin.Models.EntityModel>"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExternCallsRelationVisitor.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/ExternCallsRelationVisitor.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.ExternCallsRelationVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.MethodCall",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "System.Collections.Generic.Dictionary",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel"
                  ],
                  "methods": [
                    {
                      "name": "Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.PostExtraction.ReferenceRelations.IAddStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType"
                      ]
                    },
                    {
                      "name": "ExternCallsRelationVisitor#Honeydew.PostExtraction.ReferenceRelations.IAddStrategy",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "EmptyProgressLoggerBar.cs",
          "path": "Honeydew/EmptyProgressLoggerBar.cs",
          "namespaces": [
            {
              "name": "Honeydew",
              "classes": [
                {
                  "name": "Honeydew.EmptyProgressLoggerBar",
                  "type": "Class",
                  "usingStatements": ["System", "HoneydewCore.Logging"],
                  "attributes": [],
                  "usedClasses": ["string", "object", "void"],
                  "methods": [
                    {
                      "name": "Start#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": ["->System.Console@WriteLine#object"]
                    },
                    {
                      "name": "Step#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": ["->System.Console@WriteLine#object"]
                    },
                    {
                      "name": "Stop#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": ["->System.Console@WriteLine#object"]
                    },
                    {
                      "name": "EmptyProgressLoggerBar#string",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "DeclarationRelationVisitor.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/DeclarationRelationVisitor.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.DeclarationRelationVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewScriptBeePlugin",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor",
                    "Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor",
                    "Honeydew.PostExtraction.ReferenceRelations.FieldsRelationVisitor",
                    "Honeydew.PostExtraction.ReferenceRelations.PropertiesRelationVisitor",
                    "object",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "System.Collections.Generic.Dictionary",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->HoneydewScriptBeePlugin.ExpandoExtensions@HasProperty#string",
                        "->Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor@.Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Honeydew.PostExtraction.ReferenceRelations.FieldsRelationVisitor@.Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Honeydew.PostExtraction.ReferenceRelations.PropertiesRelationVisitor@.Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor@.Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "Honeydew/PostExtraction/ReferenceRelations/DeclarationRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.DeclarationRelationVisitor@AddDependencies#System.Collections.Generic.IDictionary<string, int>,System.Collections.Generic.Dictionary<string, int>"
                      ]
                    },
                    {
                      "name": "AddDependencies#System.Collections.Generic.IDictionary<string, int>,System.Collections.Generic.Dictionary<string, int>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "Honeydew/PostExtraction/ReferenceRelations/DeclarationRelationVisitor.cs->Honeydew.PostExtraction.ReferenceRelations.DeclarationRelationVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel"
                      ],
                      "calledMethods": [
                        "->Honeydew.PostExtraction.ReferenceRelations.IAddStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,string,int"
                      ]
                    },
                    {
                      "name": "DeclarationRelationVisitor#Honeydew.PostExtraction.ReferenceRelations.IAddStrategy,Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor,Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor,Honeydew.PostExtraction.ReferenceRelations.FieldsRelationVisitor,Honeydew.PostExtraction.ReferenceRelations.PropertiesRelationVisitor",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ProgressLogger.cs",
          "path": "Honeydew/ProgressLogger.cs",
          "namespaces": [
            {
              "name": "Honeydew",
              "classes": [
                {
                  "name": "Honeydew.ProgressLogger",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "Konsole"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "Konsole.IProgressBar",
                    "System.Collections.Generic.Dictionary",
                    "object",
                    "void",
                    "System.Collections.Generic.IEnumerable",
                    "Konsole.ProgressBar",
                    "int"
                  ],
                  "methods": [
                    {
                      "name": "Log#object",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": ["->System.Console@WriteLine#object"]
                    },
                    {
                      "name": "Log#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": ["->System.Console@WriteLine#"]
                    },
                    {
                      "name": "CreateProgressBars#System.Collections.Generic.IEnumerable<string>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Konsole.ProgressBar@Refresh#int,string",
                        "->System.Collections.Generic.Dictionary@Add#string,Konsole.IProgressBar"
                      ]
                    },
                    {
                      "name": "CreateProgressLogger#int,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.Dictionary@TryGetValue#string,Konsole.IProgressBar",
                        "->Konsole.ProgressBar@Refresh#int,string",
                        "->System.Collections.Generic.Dictionary@Add#string,Konsole.IProgressBar"
                      ]
                    },
                    {
                      "name": "StopProgressBar#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.Dictionary@TryGetValue#string,Konsole.IProgressBar",
                        "->Konsole.IProgressBar@Refresh#int,string"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExternEntityTypeVisitor.cs",
          "path": "Honeydew/ExternEntityTypeVisitor.cs",
          "namespaces": [
            {
              "name": "Honeydew",
              "classes": [
                {
                  "name": "Honeydew.ExternEntityTypeVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewModels.Types"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "System.Collections.Generic.HashSet",
                    "object",
                    "HoneydewExtractors.Core.Metrics.Visitors.IModelVisitor",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Visit#HoneydewModels.Types.IClassType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "Honeydew/ExternEntityTypeVisitor.cs->Honeydew.ExternEntityTypeVisitor@CheckIfExternTypeIsPresentInModel#HoneydewModels.Types.IClassType,HoneydewModels.Types.IEntityType",
                        "Honeydew/ExternEntityTypeVisitor.cs->Honeydew.ExternEntityTypeVisitor@CheckExternTypesInLocalFunctions#HoneydewModels.Types.ITypeWithLocalFunctions"
                      ]
                    },
                    {
                      "name": "CheckIfExternTypeIsPresentInModel#HoneydewModels.Types.IClassType,HoneydewModels.Types.IEntityType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "Honeydew/ExternEntityTypeVisitor.cs->Honeydew.ExternEntityTypeVisitor@Visit#HoneydewModels.Types.IClassType"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.HashSet@Contains#string",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels"
                      ]
                    },
                    {
                      "name": "ExternEntityTypeVisitor#System.Collections.Generic.HashSet<string>,HoneydewCore.Logging.ILogger",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ProgressLoggerBar.cs",
          "path": "Honeydew/ProgressLoggerBar.cs",
          "namespaces": [
            {
              "name": "Honeydew",
              "classes": [
                {
                  "name": "Honeydew.ProgressLoggerBar",
                  "type": "Class",
                  "usingStatements": ["HoneydewCore.Logging", "Konsole"],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "Konsole.IProgressBar",
                    "int",
                    "object",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Start#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Konsole.IProgressBar@Refresh#int,string"
                      ]
                    },
                    {
                      "name": "Step#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Konsole.IProgressBar@Next#string",
                        "->string@PadRight#int"
                      ]
                    },
                    {
                      "name": "Stop#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Konsole.IProgressBar@Refresh#int,string",
                        "->string@PadRight#int"
                      ]
                    },
                    {
                      "name": "ProgressLoggerBar#Konsole.IProgressBar,string",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RepositoryModelToFileRelationsProcessor.cs",
          "path": "Honeydew/Processors/RepositoryModelToFileRelationsProcessor.cs",
          "namespaces": [
            {
              "name": "Honeydew.Processors",
              "classes": [
                {
                  "name": "Honeydew.Processors.RepositoryModelToFileRelationsProcessor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Linq",
                    "HoneydewCore.ModelRepresentations",
                    "HoneydewCore.Processors",
                    "HoneydewCore.Utils",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewCore.ModelRepresentations.RelationsRepresentation",
                    "HoneydewCore.Processors.IProcessorFunction",
                    "string",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "System.Collections.Generic.List",
                    "System.Collections.Generic.Dictionary",
                    "System.Linq.IGrouping",
                    "System.Collections.Generic.IEnumerable",
                    "int",
                    "bool",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.DelegateModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel"
                  ],
                  "methods": [
                    {
                      "name": "Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewScriptBeePlugin/Models/RepositoryModel.cs->HoneydewScriptBeePlugin.Models.RepositoryModel@GetEnumerable#",
                        "->string@IsNullOrEmpty#string",
                        "->System.Collections.Generic.Dictionary@TryGetValue#string,System.Collections.Generic.List<string>",
                        "->System.Collections.Generic.List@Add#string",
                        "->System.Collections.Generic.Dictionary@Add#string,System.Collections.Generic.List<string>",
                        "->System.Collections.Generic.IList@GroupBy#System.Func<HoneydewScriptBeePlugin.Models.EntityModel, string>",
                        "->HoneydewScriptBeePlugin.Models.EntityModel@GetProperties#bool",
                        "->Honeydew.Processors.IRelationsMetricChooseStrategy@Choose#string",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsPrimitive#string",
                        "->Honeydew.Processors.RepositoryModelToFileRelationsProcessor@AddToDependencyDictionary#string",
                        "->string@Contains#string",
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string,string,string,int"
                      ]
                    },
                    {
                      "name": "RepositoryModelToFileRelationsProcessor#Honeydew.Processors.IRelationsMetricChooseStrategy",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "RepositoryModelToClassRelationsProcessor.cs",
          "path": "Honeydew/Processors/RepositoryModelToClassRelationsProcessor.cs",
          "namespaces": [
            {
              "name": "Honeydew.Processors",
              "classes": [
                {
                  "name": "Honeydew.Processors.RepositoryModelToClassRelationsProcessor",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "HoneydewCore.ModelRepresentations",
                    "HoneydewCore.Processors",
                    "HoneydewCore.Utils",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewCore.ModelRepresentations.RelationsRepresentation",
                    "HoneydewCore.Processors.IProcessorFunction",
                    "string",
                    "int",
                    "System.Collections.Generic.Dictionary",
                    "HoneydewScriptBeePlugin.Models.EntityModel"
                  ],
                  "methods": [
                    {
                      "name": "Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Scripts/ExportClassRelationsScript.cs->Honeydew.Scripts.ExportClassRelationsScript@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "HoneydewScriptBeePlugin/Models/RepositoryModel.cs->HoneydewScriptBeePlugin.Models.RepositoryModel@GetEnumerable#",
                        "->HoneydewScriptBeePlugin.Models.EntityModel@GetProperties#bool",
                        "->Honeydew.Processors.IRelationsMetricChooseStrategy@Choose#string",
                        "HoneydewCore/Utils/CSharpConstants.cs->HoneydewCore.Utils.CSharpConstants@IsPrimitive#string",
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string,string,string,int"
                      ]
                    },
                    {
                      "name": "RepositoryModelToClassRelationsProcessor#Honeydew.Processors.IRelationsMetricChooseStrategy",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Program.cs",
          "path": "Honeydew/Program.cs",
          "namespaces": []
        },
        {
          "name": "ExportClassRelationsScript.cs",
          "path": "Honeydew/Scripts/ExportClassRelationsScript.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts",
              "classes": [
                {
                  "name": "Honeydew.Scripts.ExportClassRelationsScript",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "Honeydew.Processors",
                    "HoneydewCore.IO.Writers.Exporters",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter",
                    "Honeydew.Scripts.Script",
                    "string",
                    "object",
                    "System.Collections.Generic.Dictionary",
                    "void",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewCore.ModelRepresentations.RelationsRepresentation"
                  ],
                  "methods": [
                    {
                      "name": "Run#System.Collections.Generic.Dictionary<string, object>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.Scripts.Script@VerifyArgument<string>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Scripts.Script@VerifyArgument<RepositoryModel>#System.Collections.Generic.Dictionary<string, object>,string",
                        "Honeydew/Processors/RepositoryModelToClassRelationsProcessor.cs->Honeydew.Processors.RepositoryModelToClassRelationsProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "HoneydewCore/IO/Writers/Exporters/CsvRelationsRepresentationExporter.cs->HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter@Export#string,HoneydewCore.ModelRepresentations.RelationsRepresentation,System.Collections.Generic.List<string>",
                        "->System.IO.Path@Combine#string,string"
                      ]
                    },
                    {
                      "name": "ExportClassRelationsScript#HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExportFileRelationsScript.cs",
          "path": "Honeydew/Scripts/ExportFileRelationsScript.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts",
              "classes": [
                {
                  "name": "Honeydew.Scripts.ExportFileRelationsScript",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "Honeydew.Processors",
                    "HoneydewCore.IO.Writers.Exporters",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter",
                    "Honeydew.Scripts.Script",
                    "string",
                    "object",
                    "System.Collections.Generic.Dictionary",
                    "void",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "System.Collections.Generic.List",
                    "HoneydewCore.ModelRepresentations.RelationsRepresentation"
                  ],
                  "methods": [
                    {
                      "name": "Run#System.Collections.Generic.Dictionary<string, object>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.Scripts.Script@VerifyArgument<string>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Scripts.Script@VerifyArgument<RepositoryModel>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Scripts.Script@VerifyArgument<IRelationsMetricChooseStrategy>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Scripts.Script@VerifyArgument<List<string>>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Processors.RepositoryModelToFileRelationsProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "HoneydewCore/IO/Writers/Exporters/CsvRelationsRepresentationExporter.cs->HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter@Export#string,HoneydewCore.ModelRepresentations.RelationsRepresentation,System.Collections.Generic.List<string>",
                        "->System.IO.Path@Combine#string,string"
                      ]
                    },
                    {
                      "name": "ExportFileRelationsScript#HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExportRawModelScript.cs",
          "path": "Honeydew/Scripts/ExportRawModelScript.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts",
              "classes": [
                {
                  "name": "Honeydew.Scripts.ExportRawModelScript",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "HoneydewModels.CSharp",
                    "HoneydewModels.Exporters"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewModels.Exporters.JsonModelExporter",
                    "Honeydew.Scripts.Script",
                    "string",
                    "object",
                    "System.Collections.Generic.Dictionary",
                    "void",
                    "HoneydewModels.CSharp.RepositoryModel"
                  ],
                  "methods": [
                    {
                      "name": "Run#System.Collections.Generic.Dictionary<string, object>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.Scripts.Script@VerifyArgument<string>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Scripts.Script@VerifyArgument<RepositoryModel>#System.Collections.Generic.Dictionary<string, object>,string",
                        "HoneydewModels/Exporters/JsonModelExporter.cs->HoneydewModels.Exporters.JsonModelExporter@Export#string,object",
                        "->System.IO.Path@Combine#string,string"
                      ]
                    },
                    {
                      "name": "ExportRawModelScript#HoneydewModels.Exporters.JsonModelExporter",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExportCyclomaticComplexityPerFileScript.cs",
          "path": "Honeydew/Scripts/ExportCyclomaticComplexityPerFileScript.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts",
              "classes": [
                {
                  "name": "Honeydew.Scripts.ExportCyclomaticComplexityPerFileScript",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "Honeydew.Processors",
                    "HoneydewModels.Exporters",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewModels.Exporters.JsonModelExporter",
                    "Honeydew.Scripts.Script",
                    "string",
                    "object",
                    "System.Collections.Generic.Dictionary",
                    "void",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewCore.ModelRepresentations.CyclomaticComplexityPerFileRepresentation"
                  ],
                  "methods": [
                    {
                      "name": "Run#System.Collections.Generic.Dictionary<string, object>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.Scripts.Script@VerifyArgument<string>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Scripts.Script@VerifyArgument<RepositoryModel>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Processors.RepositoryModelToCyclomaticComplexityPerFileProcessor@Process#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "HoneydewModels/Exporters/JsonModelExporter.cs->HoneydewModels.Exporters.JsonModelExporter@Export#string,object",
                        "->System.IO.Path@Combine#string,string"
                      ]
                    },
                    {
                      "name": "ExportCyclomaticComplexityPerFileScript#HoneydewModels.Exporters.JsonModelExporter",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ReturnValueRelationVisitor.cs",
          "path": "Honeydew/PostExtraction/ReferenceRelations/ReturnValueRelationVisitor.cs",
          "namespaces": [
            {
              "name": "Honeydew.PostExtraction.ReferenceRelations",
              "classes": [
                {
                  "name": "Honeydew.PostExtraction.ReferenceRelations.ReturnValueRelationVisitor",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "object",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "int",
                    "System.Collections.Generic.IDictionary",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ReturnValueModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "System.Collections.Generic.Dictionary",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.DelegateModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel"
                  ],
                  "methods": [
                    {
                      "name": "Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveVoidReturnValues_WhenClassHasMethodsThatReturnVoid#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHavePrimitiveReturnValues_WhenClassHasMethodsThatReturnPrimitiveValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHavePrimitiveReturnValues_WhenInterfaceHasMethodsWithPrimitiveReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveDependenciesReturnValues_WhenInterfaceHasMethodsWithDependenciesReturnValues#string",
                        "HoneydewTests/RelationMetric/CSharpReturnValueRelationMetricTests.cs->HoneydewTests.RelationMetric.CSharpReturnValueRelationMetricTests@Extract_ShouldHaveDependenciesReturnValues_WhenClassHasMethodsWithDependenciesReturnValues#string"
                      ],
                      "calledMethods": [
                        "->Honeydew.PostExtraction.ReferenceRelations.IAddStrategy@AddDependency#System.Collections.Generic.IDictionary<string, int>,HoneydewScriptBeePlugin.Models.EntityType"
                      ]
                    },
                    {
                      "name": "ReturnValueRelationVisitor#Honeydew.PostExtraction.ReferenceRelations.IAddStrategy",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ApplyPostExtractionVisitorsScript.cs",
          "path": "Honeydew/Scripts/ApplyPostExtractionVisitorsScript.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts",
              "classes": [
                {
                  "name": "Honeydew.Scripts.ApplyPostExtractionVisitorsScript",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "Honeydew.PostExtraction.ReferenceRelations",
                    "HoneydewCore.Logging",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Honeydew.Scripts.Script",
                    "string",
                    "object",
                    "System.Collections.Generic.Dictionary",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "Honeydew.PostExtraction.ReferenceRelations.PropertiesRelationVisitor",
                    "Honeydew.PostExtraction.ReferenceRelations.FieldsRelationVisitor",
                    "Honeydew.PostExtraction.ReferenceRelations.ParameterRelationVisitor",
                    "Honeydew.PostExtraction.ReferenceRelations.LocalVariablesRelationVisitor",
                    "System.Collections.Generic.List",
                    "HoneydewScriptBeePlugin.Models.EntityModel"
                  ],
                  "methods": [
                    {
                      "name": "RunForResult#System.Collections.Generic.Dictionary<string, object>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.Scripts.Script@VerifyArgument<RepositoryModel>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->HoneydewCore.Logging.ILogger@Log#string,HoneydewCore.Logging.LogLevels",
                        "->HoneydewCore.Logging.IProgressLogger@Log#",
                        "->HoneydewCore.Logging.IProgressLogger@Log#object",
                        "HoneydewScriptBeePlugin/Models/RepositoryModel.cs->HoneydewScriptBeePlugin.Models.RepositoryModel@GetEnumerable#",
                        "->Honeydew.PostExtraction.ReferenceRelations.IEntityModelVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel"
                      ]
                    },
                    {
                      "name": "ApplyPostExtractionVisitorsScript#HoneydewCore.Logging.ILogger,HoneydewCore.Logging.IProgressLogger",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ScriptRuntime.cs",
          "path": "Honeydew/Scripts/ScriptRuntime.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts",
              "classes": [
                {
                  "name": "Honeydew.Scripts.ScriptRuntime",
                  "type": "Record",
                  "usingStatements": ["System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Honeydew.Scripts.ScriptRuntime",
                    "System.IEquatable"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        },
        {
          "name": "Script.cs",
          "path": "Honeydew/Scripts/Script.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts",
              "classes": [
                {
                  "name": "Honeydew.Scripts.Script",
                  "type": "Class",
                  "usingStatements": ["System", "System.Collections.Generic"],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "string",
                    "System.Collections.Generic.Dictionary",
                    "void",
                    "T"
                  ],
                  "methods": [
                    {
                      "name": "Run#System.Collections.Generic.Dictionary<string, object>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["virtual", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "RunForResult#System.Collections.Generic.Dictionary<string, object>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["virtual", "public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "VerifyArgument#System.Collections.Generic.Dictionary<string, object>,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "protected"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.Dictionary@TryGetValue#string,object"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "Graph.cs",
          "path": "Honeydew/Scripts/Graph/Graph.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts.Graph",
              "classes": [
                {
                  "name": "Honeydew.Scripts.Graph.Graph",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "DotNetGraph",
                    "DotNetGraph.Edge",
                    "DotNetGraph.Extensions",
                    "DotNetGraph.Node",
                    "DotNetGraph.SubGraph"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "string",
                    "DotNetGraph.Node.DotNode",
                    "System.Collections.Generic.IDictionary",
                    "(string",
                    "string)",
                    "DotNetGraph.Edge.DotEdge",
                    "DotNetGraph.SubGraph.DotSubGraph",
                    "DotNetGraph.DotGraph",
                    "System.Collections.Generic.IEnumerable",
                    "object",
                    "bool",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "GenerateDotFileContent#bool",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetProjectRelationsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetSolutionProjectRelationsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetSolutionProjectClustersDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetSolutionProjectAllRelationsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetProjectRelationsClusteredBySolutionsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->DotNetGraph.DotGraph@Compile#bool,bool"
                      ]
                    },
                    {
                      "name": "AddNode#string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@CreateEdge#string,string,string"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,DotNetGraph.Node.DotNode",
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@CreateNode#string,string",
                        "->System.Collections.Generic.IDictionary@Add#string,DotNetGraph.Node.DotNode",
                        "->System.Collections.Generic.List@Add#DotNetGraph.Core.IDotElement"
                      ]
                    },
                    {
                      "name": "AddEdge#string,string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetProjectRelationsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetSolutionProjectRelationsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetSolutionProjectAllRelationsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IDictionary@TryGetValue#(string, string),DotNetGraph.Edge.DotEdge",
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@CreateEdge#string,string,string",
                        "->System.Collections.Generic.IDictionary@Add#(string, string),DotNetGraph.Edge.DotEdge",
                        "->System.Collections.Generic.List@Add#DotNetGraph.Core.IDotElement"
                      ]
                    },
                    {
                      "name": "AddSubGraph#string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetSolutionProjectClustersDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetProjectRelationsClusteredBySolutionsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IDictionary@TryGetValue#string,DotNetGraph.SubGraph.DotSubGraph",
                        "->System.Collections.Generic.IDictionary@Add#string,DotNetGraph.SubGraph.DotSubGraph",
                        "->System.Collections.Generic.List@Add#DotNetGraph.Core.IDotElement"
                      ]
                    },
                    {
                      "name": "GetNode#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "GetEdge#string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "GetSubGraph#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "AddNodeToSubGraph#DotNetGraph.SubGraph.DotSubGraph,string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetSolutionProjectClustersDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@CreateNode#string,string",
                        "->System.Collections.Generic.List@Add#DotNetGraph.Core.IDotElement",
                        "->System.Collections.Generic.IDictionary@TryAdd#string,DotNetGraph.Node.DotNode"
                      ]
                    },
                    {
                      "name": "AddEdgeToSubGraph#DotNetGraph.SubGraph.DotSubGraph,string,string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetProjectRelationsClusteredBySolutionsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ],
                      "calledMethods": [
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@CreateEdge#string,string,string",
                        "->System.Collections.Generic.List@Add#DotNetGraph.Core.IDotElement",
                        "->System.Collections.Generic.IDictionary@TryAdd#(string, string),DotNetGraph.Edge.DotEdge"
                      ]
                    },
                    {
                      "name": "CreateNode#string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@AddNode#string,string",
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@AddNodeToSubGraph#DotNetGraph.SubGraph.DotSubGraph,string,string"
                      ],
                      "calledMethods": []
                    },
                    {
                      "name": "CreateEdge#string,string,string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@AddEdge#string,string,string",
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@AddEdgeToSubGraph#DotNetGraph.SubGraph.DotSubGraph,string,string,string"
                      ],
                      "calledMethods": [
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@AddNode#string,string"
                      ]
                    },
                    {
                      "name": "Graph#string,bool",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    },
                    {
                      "name": "get#",
                      "type": "get",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": ".NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "path": "Honeydew/obj/Debug/net6.0/.NETCoreApp,Version=v6.0.AssemblyAttributes.cs",
          "namespaces": []
        },
        {
          "name": "Honeydew.AssemblyInfo.cs",
          "path": "Honeydew/obj/Debug/net6.0/Honeydew.AssemblyInfo.cs",
          "namespaces": []
        },
        {
          "name": "SerilogLogger.cs",
          "path": "Honeydew/SerilogLogger.cs",
          "namespaces": [
            {
              "name": "Honeydew",
              "classes": [
                {
                  "name": "Honeydew.SerilogLogger",
                  "type": "Class",
                  "usingStatements": [
                    "HoneydewCore.Logging",
                    "Serilog",
                    "Serilog.Core",
                    "HoneydewCore.Logging.ILogger"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "Serilog.Core.Logger",
                    "object",
                    "string",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "Log#string,HoneydewCore.Logging.LogLevels",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->Serilog.Core.Logger@Information#string",
                        "->Serilog.Core.Logger@Warning#string",
                        "->Serilog.Core.Logger@Error#string"
                      ]
                    },
                    {
                      "name": "CloseAndFlush#",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": ["->Serilog.Core.Logger@Dispose#"]
                    },
                    {
                      "name": "SerilogLogger#string",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->string@IsNullOrEmpty#string",
                        "->Serilog.Configuration.LoggerSinkConfiguration@File#string,Serilog.Events.LogEventLevel,string,System.IFormatProvider,long,Serilog.Core.LoggingLevelSwitch,bool,bool,System.TimeSpan,Serilog.RollingInterval,bool,int,System.Text.Encoding,Serilog.Sinks.File.FileLifecycleHooks,System.TimeSpan",
                        "->Serilog.LoggerConfiguration@CreateLogger#"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExportStatisticsScript.cs",
          "path": "Honeydew/Scripts/ExportStatisticsScript.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts",
              "classes": [
                {
                  "name": "Honeydew.Scripts.ExportStatisticsScript",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "HoneydewModels.Exporters",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewModels.Exporters.JsonModelExporter",
                    "Honeydew.Scripts.Script",
                    "string",
                    "object",
                    "System.Collections.Generic.Dictionary",
                    "void",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "int",
                    "HoneydewScriptBeePlugin.Models.LinesOfCode",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "HoneydewScriptBeePlugin.Models.SolutionModel",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "long"
                  ],
                  "methods": [
                    {
                      "name": "Run#System.Collections.Generic.Dictionary<string, object>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.Scripts.Script@VerifyArgument<string>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Scripts.Script@VerifyArgument<RepositoryModel>#System.Collections.Generic.Dictionary<string, object>,string",
                        "HoneydewModels/Exporters/JsonModelExporter.cs->HoneydewModels.Exporters.JsonModelExporter@Export#string,object",
                        "->System.IO.Path@Combine#string,string"
                      ]
                    },
                    {
                      "name": "ExportStatisticsScript#HoneydewModels.Exporters.JsonModelExporter",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ScriptRunner.cs",
          "path": "Honeydew/Scripts/ScriptRunner.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts",
              "classes": [
                {
                  "name": "Honeydew.Scripts.ScriptRunner",
                  "type": "Class",
                  "usingStatements": [
                    "System",
                    "System.Collections.Generic",
                    "System.Threading.Tasks",
                    "HoneydewCore.Logging"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Honeydew.Scripts.ScriptRuntime",
                    "bool",
                    "System.Collections.Generic.List",
                    "void"
                  ],
                  "methods": [
                    {
                      "name": "RunForResult#Honeydew.Scripts.ScriptRuntime",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.Dictionary@ContainsKey#string",
                        "->System.Collections.Generic.Dictionary@Add#string,object",
                        "->Honeydew.Scripts.Script@RunForResult#System.Collections.Generic.Dictionary<string, object>",
                        "->HoneydewCore.Logging.IProgressLogger@Log#object",
                        "->object@GetType#"
                      ]
                    },
                    {
                      "name": "Run#bool,System.Collections.Generic.List<Honeydew.Scripts.ScriptRuntime>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Threading.Tasks.Parallel@ForEach#System.Collections.Generic.IEnumerable<Honeydew.Scripts.ScriptRuntime>,System.Action<Honeydew.Scripts.ScriptRuntime>",
                        "Honeydew/Scripts/ScriptRunner.cs->Honeydew.Scripts.ScriptRunner@Run#Honeydew.Scripts.ScriptRuntime"
                      ]
                    },
                    {
                      "name": "Run#Honeydew.Scripts.ScriptRuntime",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["private"],
                      "callers": [
                        "Honeydew/Scripts/ScriptRunner.cs->Honeydew.Scripts.ScriptRunner@Run#bool,System.Collections.Generic.List<Honeydew.Scripts.ScriptRuntime>"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.Dictionary@ContainsKey#string",
                        "->System.Collections.Generic.Dictionary@Add#string,object",
                        "->HoneydewCore.Logging.IProgressLogger@Log#object",
                        "->object@GetType#",
                        "->Honeydew.Scripts.Script@Run#System.Collections.Generic.Dictionary<string, object>"
                      ]
                    },
                    {
                      "name": "ScriptRunner#HoneydewCore.Logging.IProgressLogger",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "GenericDependenciesScript.cs",
          "path": "Honeydew/Scripts/GenericDependenciesScript.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts",
              "classes": [
                {
                  "name": "Honeydew.Scripts.GenericDependenciesScript",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Linq",
                    "Honeydew.PostExtraction.ReferenceRelations",
                    "HoneydewCore.IO.Writers.Exporters",
                    "HoneydewCore.ModelRepresentations",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter",
                    "Honeydew.Scripts.Script",
                    "string",
                    "object",
                    "System.Collections.Generic.Dictionary",
                    "void",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "int",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewCore.ModelRepresentations.RelationsRepresentation",
                    "System.Collections.Generic.List",
                    "HoneydewCore.ModelRepresentations.Relation",
                    "System.Collections.Generic.IDictionary",
                    "System.Collections.Generic.KeyValuePair",
                    "System.Collections.Generic.IEnumerable"
                  ],
                  "methods": [
                    {
                      "name": "Run#System.Collections.Generic.Dictionary<string, object>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.Scripts.Script@VerifyArgument<string>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Scripts.Script@VerifyArgument<RepositoryModel>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Scripts.Script@VerifyArgument<IAddStrategy>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.PostExtraction.ReferenceRelations.IEntityModelVisitor@Visit#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->System.Collections.Generic.IDictionary@Where#System.Func<System.Collections.Generic.KeyValuePair<string, int>, bool>",
                        "->System.Collections.Generic.List@AddRange#System.Collections.Generic.IEnumerable<HoneydewCore.ModelRepresentations.Relation>",
                        "->System.Collections.Generic.IEnumerable@Select#System.Func<System.Collections.Generic.KeyValuePair<string, int>, HoneydewCore.ModelRepresentations.Relation>",
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#HoneydewCore.ModelRepresentations.Relation",
                        "HoneydewCore/IO/Writers/Exporters/CsvRelationsRepresentationExporter.cs->HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter@Export#string,HoneydewCore.ModelRepresentations.RelationsRepresentation,System.Collections.Generic.List<string>",
                        "->System.IO.Path@Combine#string,string"
                      ]
                    },
                    {
                      "name": "GenericDependenciesScript#HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "ExportRelationsBetweenSolutionsAndProjectsScripts.cs",
          "path": "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts",
              "classes": [
                {
                  "name": "Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.Drawing",
                    "System.IO",
                    "System.Text",
                    "DotNetGraph.Edge",
                    "DotNetGraph.SubGraph",
                    "HoneydewCore.IO.Writers.Exporters",
                    "HoneydewCore.ModelRepresentations",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter",
                    "HoneydewCore.IO.Writers.Exporters.TextFileExporter",
                    "Honeydew.Scripts.Script",
                    "string",
                    "object",
                    "System.Collections.Generic.Dictionary",
                    "void",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "HoneydewScriptBeePlugin.Models.SolutionModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "System.Text.StringBuilder",
                    "System.Collections.Generic.HashSet",
                    "Honeydew.Scripts.Graph.Graph",
                    "DotNetGraph.Edge.DotEdge",
                    "DotNetGraph.SubGraph.DotSubGraph",
                    "HoneydewCore.ModelRepresentations.RelationsRepresentation"
                  ],
                  "methods": [
                    {
                      "name": "Run#System.Collections.Generic.Dictionary<string, object>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.Scripts.Script@VerifyArgument<string>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Scripts.Script@VerifyArgument<RepositoryModel>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->System.IO.Path@Combine#string,string,string",
                        "HoneydewCore/IO/Writers/Exporters/TextFileExporter.cs->HoneydewCore.IO.Writers.Exporters.TextFileExporter@Export#string,string",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetRelationsSummary#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "HoneydewCore/IO/Writers/Exporters/CsvRelationsRepresentationExporter.cs->HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter@Export#string,HoneydewCore.ModelRepresentations.RelationsRepresentation,System.Collections.Generic.List<string>",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetProjectRelations#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetSolutionProjectRelations#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetProjectRelationsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetSolutionProjectRelationsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetSolutionProjectClustersDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetSolutionProjectAllRelationsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@GetProjectRelationsClusteredBySolutionsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel"
                      ]
                    },
                    {
                      "name": "GetRelationsSummary#HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "->System.Text.StringBuilder@AppendLine#string",
                        "->System.IO.Path@GetFileName#string",
                        "->System.Collections.Generic.HashSet@Contains#string",
                        "->System.Collections.Generic.HashSet@Add#string",
                        "->System.Text.StringBuilder@AppendLine#",
                        "->System.Text.StringBuilder@ToString#"
                      ]
                    },
                    {
                      "name": "GetProjectRelationsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@AddEdge#string,string,string",
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@GenerateDotFileContent#bool"
                      ]
                    },
                    {
                      "name": "GetSolutionProjectRelationsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@AddEdge#string,string,string",
                        "->System.IO.Path@GetFileName#string",
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@GenerateDotFileContent#bool"
                      ]
                    },
                    {
                      "name": "GetSolutionProjectClustersDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@AddSubGraph#string,string",
                        "->System.IO.Path@GetFileNameWithoutExtension#string",
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@AddNodeToSubGraph#DotNetGraph.SubGraph.DotSubGraph,string,string",
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@GenerateDotFileContent#bool"
                      ]
                    },
                    {
                      "name": "GetSolutionProjectAllRelationsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@AddEdge#string,string,string",
                        "->System.IO.Path@GetFileName#string",
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@GenerateDotFileContent#bool"
                      ]
                    },
                    {
                      "name": "GetProjectRelationsClusteredBySolutionsDotFile#HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@AddSubGraph#string,string",
                        "->System.IO.Path@GetFileNameWithoutExtension#string",
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@AddEdgeToSubGraph#DotNetGraph.SubGraph.DotSubGraph,string,string,string",
                        "Honeydew/Scripts/Graph/Graph.cs->Honeydew.Scripts.Graph.Graph@GenerateDotFileContent#bool"
                      ]
                    },
                    {
                      "name": "GetProjectRelations#HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string,string,string,int"
                      ]
                    },
                    {
                      "name": "GetSolutionProjectRelations#HoneydewScriptBeePlugin.Models.RepositoryModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/ExportRelationsBetweenSolutionsAndProjectsScripts.cs->Honeydew.Scripts.ExportRelationsBetweenSolutionsAndProjectsScripts@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "HoneydewCore/ModelRepresentations/RelationsRepresentation.cs->HoneydewCore.ModelRepresentations.RelationsRepresentation@Add#string,string,string,int",
                        "->System.IO.Path@GetFileNameWithoutExtension#string"
                      ]
                    },
                    {
                      "name": "ExportRelationsBetweenSolutionsAndProjectsScripts#HoneydewCore.IO.Writers.Exporters.CsvRelationsRepresentationExporter,HoneydewCore.IO.Writers.Exporters.TextFileExporter",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "VisitorLoaderHelper.cs",
          "path": "Honeydew/VisitorLoaderHelper.cs",
          "namespaces": [
            {
              "name": "Honeydew",
              "classes": [
                {
                  "name": "Honeydew.VisitorLoaderHelper",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "HoneydewCore.Logging",
                    "HoneydewExtractors.Core.Metrics.Visitors",
                    "HoneydewExtractors.Core.Metrics.Visitors.AccessedFields",
                    "HoneydewExtractors.Core.Metrics.Visitors.Attributes",
                    "HoneydewExtractors.Core.Metrics.Visitors.Classes",
                    "HoneydewExtractors.Core.Metrics.Visitors.CompilationUnit",
                    "HoneydewExtractors.Core.Metrics.Visitors.Constructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Destructors",
                    "HoneydewExtractors.Core.Metrics.Visitors.Fields",
                    "HoneydewExtractors.Core.Metrics.Visitors.LocalVariables",
                    "HoneydewExtractors.Core.Metrics.Visitors.MethodCalls",
                    "HoneydewExtractors.Core.Metrics.Visitors.Methods",
                    "HoneydewExtractors.Core.Metrics.Visitors.Parameters",
                    "HoneydewExtractors.Core.Metrics.Visitors.Properties",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.AccessField",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Attribute",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Class.Relations",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.CompilationUnit",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Constructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Delegate",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Destructor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Enum",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Field",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.LocalVariables",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.MethodCall",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Parameter",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Property",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctions"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common.LinesOfCodeVisitor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common.AttributeSetterVisitor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common.CalledMethodSetterVisitor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common.AccessedFieldsSetterVisitor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common.ParameterSetterVisitor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common.GenericParameterSetterVisitor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common.LocalVariablesTypeSetterVisitor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common.GotoStatementVisitor",
                    "HoneydewExtractors.CSharp.Metrics.Visitors.Method.LocalFunctionsSetterClassVisitor",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Method.MethodInfoVisitor",
                    "System.Collections.Generic.List",
                    "HoneydewExtractors.CSharp.Metrics.Extraction.Common.ImportsVisitor",
                    "HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor"
                  ],
                  "methods": [
                    {
                      "name": "LoadVisitors#HoneydewCore.Logging.ILogger",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "public"],
                      "callers": [],
                      "calledMethods": [
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Add#HoneydewExtractors.Core.Metrics.Visitors.ITypeVisitor",
                        "HoneydewExtractors/Core/Metrics/Visitors/CompositeVisitor.cs->HoneydewExtractors.Core.Metrics.Visitors.CompositeVisitor@Accept#HoneydewExtractors.Core.Metrics.Visitors.IVisitor"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "name": "SpektrumExportScript.cs",
          "path": "Honeydew/Scripts/SpektrumExportScript.cs",
          "namespaces": [
            {
              "name": "Honeydew.Scripts",
              "classes": [
                {
                  "name": "Honeydew.Scripts.SpektrumExportScript",
                  "type": "Class",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Linq",
                    "HoneydewModels.Exporters",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "HoneydewModels.Exporters.JsonModelExporter",
                    "Honeydew.Scripts.Script",
                    "string",
                    "object",
                    "System.Collections.Generic.Dictionary",
                    "void",
                    "HoneydewScriptBeePlugin.Models.SolutionModel",
                    "System.Collections.Generic.IList",
                    "HoneydewScriptBeePlugin.Models.ProjectModel",
                    "System.Collections.Generic.ISet",
                    "HoneydewScriptBeePlugin.Models.FileModel",
                    "HoneydewScriptBeePlugin.Models.EntityModel",
                    "HoneydewScriptBeePlugin.Models.MethodModel",
                    "HoneydewScriptBeePlugin.Models.PropertyModel",
                    "HoneydewScriptBeePlugin.Models.NamespaceModel",
                    "HoneydewScriptBeePlugin.Models.EntityType",
                    "HoneydewScriptBeePlugin.Models.AttributeModel",
                    "HoneydewScriptBeePlugin.Models.MethodCall",
                    "HoneydewScriptBeePlugin.Models.RepositoryModel",
                    "Honeydew.Scripts.Solution",
                    "System.Collections.Generic.IEnumerable",
                    "Honeydew.Scripts.Project",
                    "anonymous type: System.Collections.Generic.IEnumerable",
                    "",
                    "HoneydewScriptBeePlugin.Models.ClassModel",
                    "HoneydewScriptBeePlugin.Models.InterfaceModel",
                    "HoneydewScriptBeePlugin.Models.ParameterModel",
                    "HoneydewScriptBeePlugin.Models.FieldModel",
                    "HoneydewScriptBeePlugin.Models.ReturnValueModel",
                    "HoneydewScriptBeePlugin.Models.FieldAccess",
                    "HoneydewScriptBeePlugin.Models.LocalVariableModel",
                    "HoneydewScriptBeePlugin.Models.DelegateModel",
                    "HoneydewScriptBeePlugin.Models.ReferenceEntity"
                  ],
                  "methods": [
                    {
                      "name": "Run#System.Collections.Generic.Dictionary<string, object>",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["override", "public"],
                      "callers": [],
                      "calledMethods": [
                        "->Honeydew.Scripts.Script@VerifyArgument<string>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->Honeydew.Scripts.Script@VerifyArgument<RepositoryModel>#System.Collections.Generic.Dictionary<string, object>,string",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewScriptBeePlugin.Models.SolutionModel, Honeydew.Scripts.Solution>",
                        "->System.Collections.Generic.IEnumerable@ToHashSet#",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewScriptBeePlugin.Models.ProjectModel, string>",
                        "->System.Collections.Generic.IEnumerable@Select#System.Func<HoneydewScriptBeePlugin.Models.ProjectModel, Honeydew.Scripts.Project>",
                        "->System.Collections.Generic.IList@Where#System.Func<HoneydewScriptBeePlugin.Models.ProjectModel, bool>",
                        "->string@IsNullOrEmpty#string",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewScriptBeePlugin.Models.FileModel, Honeydew.Scripts.File>",
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@ExtractFileName#string",
                        "->System.Collections.Generic.IEnumerable@Select#System.Func<System.Linq.IGrouping<string, HoneydewScriptBeePlugin.Models.EntityModel>, Honeydew.Scripts.Namespace>",
                        "->System.Collections.Generic.IList@GroupBy#System.Func<HoneydewScriptBeePlugin.Models.EntityModel, string>",
                        "->System.Collections.Generic.IEnumerable@Select#System.Func<HoneydewScriptBeePlugin.Models.EntityModel, Honeydew.Scripts.Class>",
                        "->System.Linq.Enumerable@Where#System.Func<HoneydewScriptBeePlugin.Models.EntityModel, bool>",
                        "->System.Enum@ToString#",
                        "->System.Collections.Generic.IEnumerable@ToList#",
                        "->System.Collections.Generic.IList@Concat#System.Collections.Generic.IEnumerable<HoneydewScriptBeePlugin.Models.MethodModel>",
                        "->System.Collections.Generic.IList@Add#HoneydewScriptBeePlugin.Models.MethodModel",
                        "->System.Collections.Generic.IEnumerable@Where#System.Func<string, bool>",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewScriptBeePlugin.Models.ImportModel, string>",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewScriptBeePlugin.Models.AttributeModel, string>",
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@GetUsedClasses#HoneydewScriptBeePlugin.Models.EntityModel",
                        "->System.Collections.Generic.IEnumerable@Concat#System.Collections.Generic.IEnumerable<Honeydew.Scripts.Method>",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewScriptBeePlugin.Models.MethodModel, Honeydew.Scripts.Method>",
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@GenerateMethodName#HoneydewScriptBeePlugin.Models.MethodModel",
                        "->System.Linq.Enumerable@Select#System.Func<string, string>",
                        "->System.Collections.Generic.IEnumerable@Concat#System.Collections.Generic.IEnumerable<string>",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewScriptBeePlugin.Models.Modifier, string>",
                        "->string@IsNullOrWhiteSpace#string",
                        "->string@ToLower#",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewScriptBeePlugin.Models.MethodModel, string>",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewScriptBeePlugin.Models.MethodCall, string>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.PropertyModel, System.Collections.Generic.IEnumerable<Honeydew.Scripts.Method>>",
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@GetAccessorType#HoneydewScriptBeePlugin.Models.MethodModel",
                        "HoneydewModels/Exporters/JsonModelExporter.cs->HoneydewModels.Exporters.JsonModelExporter@Export#string,object",
                        "->System.IO.Path@Combine#string,string"
                      ]
                    },
                    {
                      "name": "GenerateMethodName#HoneydewScriptBeePlugin.Models.MethodModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "->string@Join#char,System.Collections.Generic.IEnumerable<string>",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewScriptBeePlugin.Models.ParameterModel, string>"
                      ]
                    },
                    {
                      "name": "GetAccessorType#HoneydewScriptBeePlugin.Models.MethodModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": []
                    },
                    {
                      "name": "GenerateMethodId#HoneydewScriptBeePlugin.Models.MethodCall",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": [
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@GenerateMethodId#HoneydewScriptBeePlugin.Models.MethodModel"
                      ]
                    },
                    {
                      "name": "GenerateMethodId#HoneydewScriptBeePlugin.Models.MethodModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@GenerateMethodId#HoneydewScriptBeePlugin.Models.MethodCall"
                      ],
                      "calledMethods": [
                        "->string@Join#char,System.Collections.Generic.IEnumerable<string>",
                        "->System.Collections.Generic.IList@Select#System.Func<HoneydewScriptBeePlugin.Models.ParameterModel, string>"
                      ]
                    },
                    {
                      "name": "GetUsedClasses#HoneydewScriptBeePlugin.Models.EntityModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@ToHashSet#",
                        "->System.Collections.Generic.IEnumerable@Concat#System.Collections.Generic.IEnumerable<string>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.FieldModel, System.Collections.Generic.IEnumerable<string>>",
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@GetGenericNames#HoneydewScriptBeePlugin.Models.EntityType",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.PropertyModel, System.Collections.Generic.IEnumerable<string>>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.EntityType, System.Collections.Generic.IEnumerable<string>>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.AttributeModel, System.Collections.Generic.IEnumerable<string>>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.MethodModel, System.Collections.Generic.IEnumerable<string>>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.ParameterModel, System.Collections.Generic.IEnumerable<string>>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.FieldAccess, System.Collections.Generic.IEnumerable<string>>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.LocalVariableModel, System.Collections.Generic.IEnumerable<string>>"
                      ]
                    },
                    {
                      "name": "GetUsedClassesFromLocalFunctions#HoneydewScriptBeePlugin.Models.MethodModel",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@Concat#System.Collections.Generic.IEnumerable<string>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.ParameterModel, System.Collections.Generic.IEnumerable<string>>",
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@GetGenericNames#HoneydewScriptBeePlugin.Models.EntityType",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.FieldAccess, System.Collections.Generic.IEnumerable<string>>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.LocalVariableModel, System.Collections.Generic.IEnumerable<string>>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.MethodModel, System.Collections.Generic.IEnumerable<string>>"
                      ]
                    },
                    {
                      "name": "GetGenericNames#HoneydewScriptBeePlugin.Models.EntityType",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@GetUsedClasses#HoneydewScriptBeePlugin.Models.EntityModel",
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@GetUsedClassesFromLocalFunctions#HoneydewScriptBeePlugin.Models.MethodModel"
                      ],
                      "calledMethods": [
                        "->System.Collections.Generic.IEnumerable@Concat#System.Collections.Generic.IEnumerable<string>",
                        "->System.Collections.Generic.IList@SelectMany#System.Func<HoneydewScriptBeePlugin.Models.EntityType, System.Collections.Generic.IEnumerable<string>>",
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@GetRefName#HoneydewScriptBeePlugin.Models.ReferenceEntity"
                      ]
                    },
                    {
                      "name": "ExtractFileName#string",
                      "type": "Method",
                      "attributes": [],
                      "modifiers": ["static", "private"],
                      "callers": [
                        "Honeydew/Scripts/SpektrumExportScript.cs->Honeydew.Scripts.SpektrumExportScript@Run#System.Collections.Generic.Dictionary<string, object>"
                      ],
                      "calledMethods": ["->System.IO.Path@GetFileName#string"]
                    },
                    {
                      "name": "SpektrumExportScript#HoneydewModels.Exporters.JsonModelExporter",
                      "type": "Constructor",
                      "attributes": [],
                      "modifiers": ["public"],
                      "callers": [],
                      "calledMethods": []
                    }
                  ]
                },
                {
                  "name": "Honeydew.Scripts.Solution",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Linq",
                    "HoneydewModels.Exporters",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Honeydew.Scripts.Solution",
                    "System.IEquatable"
                  ],
                  "methods": []
                },
                {
                  "name": "Honeydew.Scripts.Project",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Linq",
                    "HoneydewModels.Exporters",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Honeydew.Scripts.Project",
                    "System.IEquatable"
                  ],
                  "methods": []
                },
                {
                  "name": "Honeydew.Scripts.File",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Linq",
                    "HoneydewModels.Exporters",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Honeydew.Scripts.File",
                    "System.IEquatable"
                  ],
                  "methods": []
                },
                {
                  "name": "Honeydew.Scripts.Namespace",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Linq",
                    "HoneydewModels.Exporters",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Honeydew.Scripts.Namespace",
                    "System.IEquatable"
                  ],
                  "methods": []
                },
                {
                  "name": "Honeydew.Scripts.Class",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Linq",
                    "HoneydewModels.Exporters",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Honeydew.Scripts.Class",
                    "System.IEquatable"
                  ],
                  "methods": []
                },
                {
                  "name": "Honeydew.Scripts.Method",
                  "type": "Record",
                  "usingStatements": [
                    "System.Collections.Generic",
                    "System.IO",
                    "System.Linq",
                    "HoneydewModels.Exporters",
                    "HoneydewScriptBeePlugin.Models"
                  ],
                  "attributes": [],
                  "usedClasses": [
                    "object",
                    "Honeydew.Scripts.Method",
                    "System.IEquatable"
                  ],
                  "methods": []
                }
              ]
            }
          ]
        }
      ],
      "projectReferences": [
        "HoneydewCore",
        "HoneydewExtractors",
        "HoneydewScriptBeePlugin",
        "HoneydewModels"
      ],
      "externalReferences": []
    }
  ]
}
